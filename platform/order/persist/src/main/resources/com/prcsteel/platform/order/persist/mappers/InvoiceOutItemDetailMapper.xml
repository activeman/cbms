<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prcsteel.platform.order.persist.dao.InvoiceOutItemDetailDao">
    <resultMap id="BaseResultMap" type="com.prcsteel.platform.order.model.model.InvoiceOutItemDetail">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="inv_invoice_in_id" property="invInvoiceInId" jdbcType="BIGINT"/>
        <result column="inv_invoice_in_detail_id" property="invInvoiceInDetailId" jdbcType="BIGINT"/>
        <result column="invoice_orderitem_id" property="invoiceOrderitemId" jdbcType="BIGINT"/>
        <result column="apply_detail_id" property="applyDetailId" jdbcType="BIGINT"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="spec" property="spec" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="DECIMAL"/>
        <result column="actual_weight" property="actualWeight" jdbcType="DECIMAL"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="no_tax_amount" property="noTaxAmount" jdbcType="DECIMAL"/>
        <result column="tax_amount" property="taxAmount" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL"/>
        <result column="order_detail_id" property="orderDetailId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="VARCHAR"/>
        <result column="modification_number" property="modificationNumber" jdbcType="INTEGER"/>
        <result column="row_id" property="rowId" jdbcType="VARCHAR"/>
        <result column="parent_row_id" property="parentRowId" jdbcType="VARCHAR"/>
        <result column="ext1" property="ext1" jdbcType="VARCHAR"/>
        <result column="ext2" property="ext2" jdbcType="VARCHAR"/>
        <result column="ext3" property="ext3" jdbcType="VARCHAR"/>
        <result column="ext4" property="ext4" jdbcType="INTEGER"/>
        <result column="ext5" property="ext5" jdbcType="INTEGER"/>
        <result column="ext6" property="ext6" jdbcType="INTEGER"/>
        <result column="ext7" property="ext7" jdbcType="TIMESTAMP"/>
        <result column="ext8" property="ext8" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="InvoiceOutItemDetailMap" type="com.prcsteel.platform.order.model.dto.InvoiceOutItemDetailDto">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="checklist_id" property="invoiceOutMainId" jdbcType="BIGINT"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="spec" property="spec" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="DECIMAL"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="no_tax_amount" property="noTaxAmount" jdbcType="DECIMAL"/>
        <result column="tax_amount" property="taxAmount" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, inv_invoice_in_id, inv_invoice_in_detail_id,invoice_orderitem_id, apply_detail_id, nsort_name, material,
        spec, weight, actual_weight, price, no_tax_amount, tax_amount, amount, actual_amount,
        order_detail_id, status, created, created_by, last_updated, last_updated_by, modification_number,
        row_id, parent_row_id, ext1, ext2, ext3, ext4, ext5, ext6, ext7, ext8
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from inv_invoice_out_item_detail
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from inv_invoice_out_item_detail
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutItemDetail">
        insert into inv_invoice_out_item_detail (id, inv_invoice_in_id, 
        inv_invoice_in_detail_id,invoice_orderitem_id,
        apply_detail_id, nsort_name, material,
        spec, weight, actual_weight,
        price, no_tax_amount, tax_amount,
        amount, actual_amount, order_detail_id,
        status, created, created_by,
        last_updated, last_updated_by, modification_number,
        row_id, parent_row_id, ext1,
        ext2, ext3, ext4, ext5,
        ext6, ext7, ext8)
        values (#{id,jdbcType=BIGINT}, #{invInvoiceInId,jdbcType=BIGINT},
        #{invInvoiceInDetailId,jdbcType=BIGINT},#{invoiceOrderitemId,jdbcType=BIGINT},
        #{applyDetailId,jdbcType=BIGINT}, #{nsortName,jdbcType=VARCHAR}, #{material,jdbcType=VARCHAR},
        #{spec,jdbcType=VARCHAR}, #{weight,jdbcType=DECIMAL}, #{actualWeight,jdbcType=DECIMAL},
        #{price,jdbcType=DECIMAL}, #{noTaxAmount,jdbcType=DECIMAL}, #{taxAmount,jdbcType=DECIMAL},
        #{amount,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL}, #{orderDetailId,jdbcType=BIGINT},
        #{status,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR},
        #{lastUpdated,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR}, #{modificationNumber,jdbcType=INTEGER},
        #{rowId,jdbcType=VARCHAR}, #{parentRowId,jdbcType=VARCHAR}, #{ext1,jdbcType=VARCHAR},
        #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=INTEGER}, #{ext5,jdbcType=INTEGER},
        #{ext6,jdbcType=INTEGER}, #{ext7,jdbcType=TIMESTAMP}, #{ext8,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.prcsteel.platform.order.model.model.InvoiceOutItemDetail">
        insert into inv_invoice_out_item_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="invInvoiceInId != null">
                inv_invoice_in_id,
            </if>
            <if test="invInvoiceInDetailId != null">
                inv_invoice_in_detail_id,
            </if>
            <if test="invoiceOrderitemId != null">
                invoice_orderitem_id,
            </if>
            <if test="applyDetailId != null">
                apply_detail_id,
            </if>
            <if test="nsortName != null">
                nsort_name,
            </if>
            <if test="material != null">
                material,
            </if>
            <if test="spec != null">
                spec,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="actualWeight != null">
                actual_weight,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="noTaxAmount != null">
                no_tax_amount,
            </if>
            <if test="taxAmount != null">
                tax_amount,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="actualAmount != null">
                actual_amount,
            </if>
            <if test="orderDetailId != null">
                order_detail_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="lastUpdated != null">
                last_updated,
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by,
            </if>
            <if test="modificationNumber != null">
                modification_number,
            </if>
            <if test="rowId != null">
                row_id,
            </if>
            <if test="parentRowId != null">
                parent_row_id,
            </if>
            <if test="ext1 != null">
                ext1,
            </if>
            <if test="ext2 != null">
                ext2,
            </if>
            <if test="ext3 != null">
                ext3,
            </if>
            <if test="ext4 != null">
                ext4,
            </if>
            <if test="ext5 != null">
                ext5,
            </if>
            <if test="ext6 != null">
                ext6,
            </if>
            <if test="ext7 != null">
                ext7,
            </if>
            <if test="ext8 != null">
                ext8,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="invInvoiceInId != null">
                #{invInvoiceInId,jdbcType=BIGINT},
            </if>
            <if test="invInvoiceInDetailId != null">
                #{invInvoiceInDetailId,jdbcType=BIGINT},
            </if>
            <if test="applyDetailId != null">
                #{applyDetailId,jdbcType=BIGINT},
            </if>
            <if test="nsortName != null">
                #{nsortName,jdbcType=VARCHAR},
            </if>
            <if test="material != null">
                #{material,jdbcType=VARCHAR},
            </if>
            <if test="spec != null">
                #{spec,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=DECIMAL},
            </if>
            <if test="actualWeight != null">
                #{actualWeight,jdbcType=DECIMAL},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="noTaxAmount != null">
                #{noTaxAmount,jdbcType=DECIMAL},
            </if>
            <if test="taxAmount != null">
                #{taxAmount,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="actualAmount != null">
                #{actualAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderDetailId != null">
                #{orderDetailId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="modificationNumber != null">
                #{modificationNumber,jdbcType=INTEGER},
            </if>
            <if test="rowId != null">
                #{rowId,jdbcType=VARCHAR},
            </if>
            <if test="parentRowId != null">
                #{parentRowId,jdbcType=VARCHAR},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                #{ext4,jdbcType=INTEGER},
            </if>
            <if test="ext5 != null">
                #{ext5,jdbcType=INTEGER},
            </if>
            <if test="ext6 != null">
                #{ext6,jdbcType=INTEGER},
            </if>
            <if test="ext7 != null">
                #{ext7,jdbcType=TIMESTAMP},
            </if>
            <if test="ext8 != null">
                #{ext8,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutItemDetail">
        update inv_invoice_out_item_detail
        <set>
            <if test="invInvoiceInId != null">
                inv_invoice_in_id = #{invInvoiceInId,jdbcType=BIGINT},
            </if>
            <if test="invInvoiceInDetailId != null">
                inv_invoice_in_detail_id = #{invInvoiceInDetailId,jdbcType=BIGINT},
            </if>
            <if test="invoiceOrderitemId != null">
                invoice_orderitem_id = #{invoiceOrderitemId,jdbcType=BIGINT},
            </if>
            <if test="applyDetailId != null">
                apply_detail_id = #{applyDetailId,jdbcType=BIGINT},
            </if>
            <if test="nsortName != null">
                nsort_name = #{nsortName,jdbcType=VARCHAR},
            </if>
            <if test="material != null">
                material = #{material,jdbcType=VARCHAR},
            </if>
            <if test="spec != null">
                spec = #{spec,jdbcType=VARCHAR},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=DECIMAL},
            </if>
            <if test="actualWeight != null">
                actual_weight = #{actualWeight,jdbcType=DECIMAL},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="noTaxAmount != null">
                no_tax_amount = #{noTaxAmount,jdbcType=DECIMAL},
            </if>
            <if test="taxAmount != null">
                tax_amount = #{taxAmount,jdbcType=DECIMAL},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="actualAmount != null">
                actual_amount = #{actualAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderDetailId != null">
                order_detail_id = #{orderDetailId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="modificationNumber != null">
                modification_number = #{modificationNumber,jdbcType=INTEGER},
            </if>
            <if test="rowId != null">
                row_id = #{rowId,jdbcType=VARCHAR},
            </if>
            <if test="parentRowId != null">
                parent_row_id = #{parentRowId,jdbcType=VARCHAR},
            </if>
            <if test="ext1 != null">
                ext1 = #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                ext2 = #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                ext3 = #{ext3,jdbcType=VARCHAR},
            </if>
            <if test="ext4 != null">
                ext4 = #{ext4,jdbcType=INTEGER},
            </if>
            <if test="ext5 != null">
                ext5 = #{ext5,jdbcType=INTEGER},
            </if>
            <if test="ext6 != null">
                ext6 = #{ext6,jdbcType=INTEGER},
            </if>
            <if test="ext7 != null">
                ext7 = #{ext7,jdbcType=TIMESTAMP},
            </if>
            <if test="ext8 != null">
                ext8 = #{ext8,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutItemDetail">
        update inv_invoice_out_item_detail
        set inv_invoice_in_id = #{invInvoiceInId,jdbcType=BIGINT},
        inv_invoice_in_detail_id = #{invInvoiceInDetailId,jdbcType=BIGINT},
        invoice_orderitem_id = #{invoiceOrderitemId,jdbcType=BIGINT},
        apply_detail_id = #{applyDetailId,jdbcType=BIGINT},
        nsort_name = #{nsortName,jdbcType=VARCHAR},
        material = #{material,jdbcType=VARCHAR},
        spec = #{spec,jdbcType=VARCHAR},
        weight = #{weight,jdbcType=DECIMAL},
        actual_weight = #{actualWeight,jdbcType=DECIMAL},
        price = #{price,jdbcType=DECIMAL},
        no_tax_amount = #{noTaxAmount,jdbcType=DECIMAL},
        tax_amount = #{taxAmount,jdbcType=DECIMAL},
        amount = #{amount,jdbcType=DECIMAL},
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
        order_detail_id = #{orderDetailId,jdbcType=BIGINT},
        status = #{status,jdbcType=VARCHAR},
        created = #{created,jdbcType=TIMESTAMP},
        created_by = #{createdBy,jdbcType=VARCHAR},
        last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
        modification_number = modification_number+1,
        row_id = #{rowId,jdbcType=VARCHAR},
        parent_row_id = #{parentRowId,jdbcType=VARCHAR},
        ext1 = #{ext1,jdbcType=VARCHAR},
        ext2 = #{ext2,jdbcType=VARCHAR},
        ext3 = #{ext3,jdbcType=VARCHAR},
        ext4 = #{ext4,jdbcType=INTEGER},
        ext5 = #{ext5,jdbcType=INTEGER},
        ext6 = #{ext6,jdbcType=INTEGER},
        ext7 = #{ext7,jdbcType=TIMESTAMP},
        ext8 = #{ext8,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <resultMap id="DetailResultMap" extends="BaseResultMap"
               type="com.prcsteel.platform.order.model.dto.InvoiceOutApplyItemDetailDto">
        <result column="owner_id" property="ownerId" jdbcType="BIGINT"/>
        <result column="buyer_id" property="buyerId" jdbcType="BIGINT"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="apply_id" property="applyId" jdbcType="BIGINT"/>
        <result column="org_id" property="orgId" jdbcType="BIGINT"/>
        <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
        <result column="checklist_id" property="checklistId" jdbcType="BIGINT"/>
        <result column="order_id" property="orderId" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        
        <!-- 增加风险控制相关字段 tuxianming 20160513-->
        <result column="balance_second_settlement" property="balanceSecondSettlement" jdbcType="DECIMAL"/>
	    <result column="seller_credential_code" property="sellerCredentialCode" jdbcType="VARCHAR" />
	    <result column="seller_credential_status" property="sellerCredentialStatus" jdbcType="VARCHAR" />
		<result column="batch_seller_credential_code" property="batchSellerCredentialCode" jdbcType="VARCHAR" />
		<result column="batch_seller_credential_status" property="batchSellerCredentialStatus" jdbcType="VARCHAR" />
		<result column="buyer_credential_code" property="buyerCredentialCode" jdbcType="VARCHAR"/>
		<result column="buyer_credential_status" property="buyerCredentialStatus" jdbcType="VARCHAR"/>
		<result column="batch_buyer_credential_code" property="batchBuyerCredentialCode" jdbcType="VARCHAR"/>
		<result column="batch_buyer_credential_status" property="batchBuyerCredentialStatus" jdbcType="VARCHAR"/>
		<result column="buyer_check_value" property="buyerCheckValue" jdbcType="VARCHAR"/>
		<result column="seller_check_value" property="sellerCheckValue" jdbcType="VARCHAR"/>
		
    </resultMap>

    <!--根据搜索条件查询开票详情-->
    <select id="query" resultMap="DetailResultMap" parameterType="map">
        SELECT t2.department_id buyer_id,t2.owner_id,
        CASE WHEN (SELECT count(*)  FROM cust_account ca WHERE ca.parent_id=t2.buyer_id)>1 THEN CONCAT(t2.buyer_name,'【',t2.department_name,'】') ELSE t2.buyer_name END buyer_name,
        t3.id AS apply_id,t3.org_id,t3.org_name,
        t1.id, t1.inv_invoice_in_id, t1.inv_invoice_in_detail_id,t1.invoice_orderitem_id, t1.apply_detail_id, t1.nsort_name, t1.material,
        t1.spec, t1.weight, IFNULL(t1.actual_weight,0) actual_weight, t1.price,t1.is_defer,
        t1.no_tax_amount, t1.tax_amount, t1.amount, IFNULL(t1.actual_amount,0) actual_amount, t1.order_detail_id,
        t5.order_id,t6.code,
        t1.status, t1.is_deleted,t1.created, t1.created_by, t1.last_updated, t1.last_updated_by, t1.modification_number,
        t1.row_id, t1.parent_row_id,
         
         <!-- 增加风险控制相关字段 tuxianming 20160513-->
        a.balance_second_settlement,
		CASE (
			SELECT k3.setting_value
			FROM cust_account as k2,
				base_sys_setting as k3  
			WHERE k2.id = t5.seller_id
				and k2.supplier_label = k3.setting_name
				and k3.setting_type='client_type'        
				and k3.display_name='买家凭证'
		) WHEN '1' THEN 1 WHEN '0' THEN 0 ELSE -1 end
		as buyer_check_value, 
		
		CASE (
			SELECT k3.setting_value
			FROM cust_account as k2,
				base_sys_setting as k3  
			WHERE k2.id = t5.seller_id
				and k2.supplier_label = k3.setting_name
				and k3.setting_type='client_type'        
				and k3.display_name='卖家凭证'
		) WHEN '1' THEN 1 WHEN '0' THEN 0 ELSE -1 end
		as seller_check_value,
	
		t6.buyer_credential_code, coc.status as buyer_credential_status, 
		t6.batch_buyer_credential_code,  coc1.status as batch_buyer_credential_status, 
		t5.seller_credential_code, coc2.status as seller_credential_status, 
		t5.batch_seller_credential_code,  coc3.status as batch_seller_credential_status
		<!-- end tuxianming-->
        
        FROM inv_invoice_out_item_detail t1
        LEFT JOIN inv_invoice_out_apply_detail t2 ON t1.apply_detail_id=t2.id
        LEFT JOIN inv_invoice_out_apply t3 ON t2.invoice_out_apply_id=t3.id
        LEFT JOIN inv_invoice_in t4 ON t1.inv_invoice_in_id=t4.id
        LEFT JOIN busi_consign_order_items t5 ON t1.order_detail_id=t5.id
        LEFT JOIN busi_consign_order t6 ON t5.order_id=t6.id
        
        <!-- 增加风险控制相关字段 tuxianming 20160513-->
        LEFT JOIN cust_account as a on a.id = t6.department_id
		LEFT JOIN busi_consign_order_credential as coc on t6.buyer_credential_code = coc.credential_code
		LEFT JOIN busi_consign_order_credential as coc1 on t6.batch_buyer_credential_code = coc1.credential_code
		LEFT JOIN busi_consign_order_credential as coc2 on t5.seller_credential_code = coc2.credential_code
		LEFT JOIN busi_consign_order_credential as coc3 on t5.batch_seller_credential_code = coc3.credential_code
        <!-- end tuxianming -->
        
        WHERE t1.is_deleted=0 AND t2.is_deleted=0 AND t3.is_deleted=0 AND (t1.amount-IFNULL(t1.actual_amount,0))>0
        <if test="applyIds != null">
            AND t3.id IN
            <foreach item="applyId" index="index" collection="applyIds" open="(" separator="," close=")">
                #{applyId}
            </foreach>
        </if>
        <if test="status != null">
            AND t1.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="isDefer != null ">
            AND t1.is_defer = #{isDefer,jdbcType=INTEGER}
        </if>
        <if test="invoiceInId != null">
            AND t1.inv_invoice_in_id = #{invoiceInId,jdbcType=BIGINT}
        </if>
        <if test="ids != null">
            AND t1.id IN
            <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="invoiceInIds != null">
            AND t4.id IN
            <foreach item="invoiceInId" index="index" collection="invoiceInIds" open="(" separator="," close=")">
                #{invoiceInId}
            </foreach>
        </if>
        <if test="notInvoiceInIds != null">
            AND t4.id NOT IN
            <foreach item="invoiceInId" index="index" collection="notInvoiceInIds" open="(" separator="," close=")">
                #{invoiceInId}
            </foreach>
        </if>
        <if test="invInStatusList != null">
            AND t4.status IN
            <foreach item="invInStatus" index="index" collection="invInStatusList" open="(" separator="," close=")">
                #{invInStatus}
            </foreach>
        </if>
        <if test="relationStatusList != null">
            AND t4.relation_status IN
            <foreach item="relationStatus" index="index" collection="relationStatusList" open="(" separator=","
                     close=")">
                #{relationStatus}
            </foreach>
        </if>
        <if test="checkListIds != null">
            AND t5.checklist_id IN
            <foreach item="checkListId" index="index" collection="checkListIds" open="(" separator="," close=")">
                #{checkListId}
            </foreach>
        </if>
    </select>
    <insert id="batchInsert" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutApplyDetail">
        insert into inv_invoice_out_item_detail (id, inv_invoice_in_id, 
        inv_invoice_in_detail_id,invoice_orderitem_id,
        apply_detail_id, nsort_name, material,
        spec, weight,
        price, no_tax_amount, tax_amount,
        amount, order_detail_id,
        status, created, created_by,
        last_updated, last_updated_by, modification_number,
        row_id, parent_row_id, ext1,
        ext2, ext3, ext4, ext5,
        ext6, ext7, ext8
        )values
        <foreach collection="list" item="it" separator=",">
            (
            #{it.id,jdbcType=BIGINT}, #{it.invInvoiceInId,jdbcType=BIGINT}, 
            #{it.invInvoiceInDetailId,jdbcType=BIGINT},#{it.invoiceOrderitemId,jdbcType=BIGINT},
            #{it.applyDetailId,jdbcType=BIGINT}, #{it.nsortName,jdbcType=VARCHAR}, #{it.material,jdbcType=VARCHAR},
            #{it.spec,jdbcType=VARCHAR}, #{it.weight,jdbcType=DECIMAL},
            #{it.price,jdbcType=DECIMAL}, #{it.noTaxAmount,jdbcType=DECIMAL}, #{it.taxAmount,jdbcType=DECIMAL},
            #{it.amount,jdbcType=DECIMAL}, #{it.orderDetailId,jdbcType=BIGINT},
            #{it.status,jdbcType=VARCHAR}, #{it.created,jdbcType=TIMESTAMP}, #{it.createdBy,jdbcType=VARCHAR},
            #{it.lastUpdated,jdbcType=TIMESTAMP}, #{it.lastUpdatedBy,jdbcType=VARCHAR},
            #{it.modificationNumber,jdbcType=INTEGER},
            #{it.rowId,jdbcType=VARCHAR}, #{it.parentRowId,jdbcType=VARCHAR}, #{it.ext1,jdbcType=VARCHAR},
            #{it.ext2,jdbcType=VARCHAR}, #{it.ext3,jdbcType=VARCHAR}, #{it.ext4,jdbcType=INTEGER},
            #{it.ext5,jdbcType=INTEGER},
            #{it.ext6,jdbcType=INTEGER}, #{it.ext7,jdbcType=TIMESTAMP}, #{it.ext8,jdbcType=BIGINT}
            )
        </foreach>
    </insert>
    <update id="deleteByIds">
        UPDATE inv_invoice_out_item_detail
        SET
        is_deleted = 1,
        last_updated = now(),
        modification_number = modification_number+1,
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR}
        WHERE id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>
    <update id="deleteByDetailIds">
        UPDATE inv_invoice_out_item_detail
        SET
        is_deleted = 1,
        last_updated = now(),
        modification_number = modification_number+1,
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR}
        WHERE apply_detail_id in
        <foreach collection="detailIds" open="(" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>
    <select id="queryInvoiceoutExpect" resultMap="InvoiceOutItemDetailMap"
            parameterType="com.prcsteel.platform.order.model.query.InvoiceoutExpectQuery">
        select

        t1.id,t6.checklist_id,t2.buyer_id,t2.buyer_name,t2.org_name,t1.nsort_name,t1.spec,t1.material,t1.weight,t1.price,t1.amount,t1.t
        ax_amount,t5.code,t1.no_tax_amount
        from inv_invoice_out_item_detail t1
        inner join inv_invoice_out_apply_detail t2 on t1.apply_detail_id=t2.id
        inner join inv_invoice_out_apply t3 on t2.invoice_out_apply_id=t3.id
        inner join busi_consign_order_items t4 on t1.order_detail_id=t4.id
        inner join busi_consign_order t5 on t4.order_id=t5.id
        inner join inv_invoice_out_checklist_detail t6 on t1.id=t6.item_detail_id
        <where>
        t3.is_deleted = 0 AND t1.is_deleted = 0
            <if test="itemStatusList != null and itemStatusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="itemStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="applyStatusList != null and applyStatusList.size > 0 ">
                and t3.status in
                <foreach item="applyStatus" index="index" collection="applyStatusList" open="(" separator="," close=")">
                    #{applyStatus}
                </foreach>
            </if>
            <if test="beginTime != null ">
                <![CDATA[ and date_format(t1.created,'%Y-%m-%d')>=date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
            <if test="endTime != null ">
                <![CDATA[ and date_format(t1.created,'%Y-%m-%d')<=date_format(#{endTime},'%Y-%m-%d') ]]>
            </if>
            <if test="orgId != null and orgId != 0">
                and t3.org_id=#{orgId}
            </if>
            <if test="buyerId != null and buyerId != 0">
                and t2.buyer_Id=#{buyerId}
            </if>
        </where>
        order by t1.created asc
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>
    <select id="queryInvoiceoutExpectCount" resultType="int"
            parameterType="com.prcsteel.platform.order.model.query.InvoiceoutExpectQuery">
        select
        count(*)
        from inv_invoice_out_item_detail t1
        inner join inv_invoice_out_apply_detail t2 on t1.apply_detail_id=t2.id
        inner join inv_invoice_out_apply t3 on t2.invoice_out_apply_id=t3.id
        <where>
        t3.is_deleted = 0 AND t1.is_deleted = 0 AND t2.is_deleted = 0
            <if test="itemStatusList != null and itemStatusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="itemStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="applyStatusList != null and applyStatusList.size > 0 ">
                and t3.status in
                <foreach item="applyStatus" index="index" collection="applyStatusList" open="(" separator="," close=")">
                    #{applyStatus}
                </foreach>
            </if>
            <if test="beginTime != null ">
                <![CDATA[ and date_format(t1.created,'%Y-%m-%d')>=date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
            <if test="endTime != null ">
                <![CDATA[ and date_format(t1.created,'%Y-%m-%d')<=date_format(#{endTime},'%Y-%m-%d') ]]>
            </if>
            <if test="orgId != null and orgId != 0">
                and t3.org_id=#{orgId}
            </if>
            <if test="buyerId != null and buyerId != 0">
                and t2.buyer_Id=#{buyerId}
            </if>
        </where>
    </select>

    <!-- 查询开票总金额 -->
    <select id="querySumAmount" resultType="java.math.BigDecimal" parameterType="map">
        SELECT IFNULL(SUM(IFNULL(actual_amount,0)),0) actual_amount FROM inv_invoice_out_item_detail t1
        LEFT JOIN inv_invoice_out_checklist_detail t2 ON t1.id=t2.item_detail_id
        WHERE is_deleted=0
        <if test="startTime != null and startTime != '' ">
            AND str_to_date(t2.created,'%Y-%m-%d') &gt;= #{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND str_to_date(t2.created,'%Y-%m-%d') &lt;= #{endTime,jdbcType=VARCHAR}
        </if>
    </select>
    
    <!-- 查询申请待开总额 -->
    <select id="queryApplyWaitAmount" resultType="java.math.BigDecimal" parameterType="map">
        SELECT 
			IFNULL(SUM(IFNULL(t1.amount,0) - IFNULL(t1.actual_amount,0)),0) actual_amount 
		FROM 
			inv_invoice_out_item_detail t1
			INNER JOIN inv_invoice_out_apply_detail t2 ON t1.apply_detail_id = t2.id
			INNER JOIN inv_invoice_out_apply t3 ON t2.invoice_out_apply_id=t3.id
		WHERE 
			t1.is_deleted=0 AND t2.is_deleted=0 AND t3.is_deleted=0
        	AND t3.status IN ('PENDING_APPROVAL','APPROVED','PARTIAL_INVOICED')
        <if test="startTime != null and startTime != '' ">
            AND str_to_date(t2.created,'%Y-%m-%d') &gt;= #{startTime,jdbcType=VARCHAR}
        </if>
        <if test="endTime != null and endTime != '' ">
            AND str_to_date(t2.created,'%Y-%m-%d') &lt;= #{endTime,jdbcType=VARCHAR}
        </if>
    </select>

    <resultMap id="InvoiceOutOrderDetailDtoResultMap" type="com.prcsteel.platform.order.model.dto.InvoiceOutOrderDetailDto">
        <result column="contract_code" property="contractCode" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="DATE"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="spec" property="spec" jdbcType="VARCHAR"/>
        <result column="actual_pick_weight" property="actualPickWeight" jdbcType="DECIMAL"/>
        <result column="invoice_weight" property="invoiceWeight" jdbcType="DECIMAL"/>
        <result column="deal_price" property="dealPrice" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="actual_pick_amount" property="actualPickAmount" jdbcType="DECIMAL"/>
        <result column="invoice_amount" property="invoiceAmount" jdbcType="DECIMAL"/>
        <result column="order_id" property="orderId" jdbcType="BIGINT"/>
    </resultMap>

    <select id="queryInvoiceOutOrderDetailByInvoiceOutApplyId" resultMap="InvoiceOutOrderDetailDtoResultMap"
            parameterType="java.lang.Long">
        SELECT bco.contract_code, bco.created, bco.total_amount, iioid.nsort_name, iioid.material, iioid.spec,
            bcoi.actual_pick_weight_server AS actual_pick_weight, iioid.weight AS invoice_weight, bcoi.deal_price, bcoi.amount,
            ROUND(bcoi.actual_pick_weight_server*bcoi.deal_price, 2) AS actual_pick_amount,
            IFNULL(iioid.actual_amount,0) AS invoice_amount, bco.id AS order_id
        FROM inv_invoice_out_item_detail iioid
        LEFT JOIN busi_consign_order_items bcoi ON bcoi.id = iioid.order_detail_id
        LEFT JOIN busi_consign_order bco ON bco.id = bcoi.order_id
        WHERE iioid.apply_detail_id = #{invoiceOutApplyId, jdbcType=INTEGER}
    </select>

    <select id="queryOutItemDetailIdsByInvoiceId" resultType="java.lang.Long" parameterType="map">
		SELECT t3.id FROM 
		inv_invoice_out_apply t1
		RIGHT JOIN inv_invoice_out_apply_detail t2
		ON t1.id = t2.invoice_out_apply_id
		RIGHT JOIN inv_invoice_out_item_detail t3
		ON t2.id = t3.apply_detail_id
		WHERE t1.is_deleted = 0 AND t2.is_deleted = 0 AND t3.is_deleted = 0
		AND t3.inv_invoice_in_id = #{invoiceId,jdbcType=BIGINT}
		<if test="statusList != null and statusList.size > 0 ">
        AND t1.status IN
            <foreach item="applyStatus" index="index" collection="statusList" open="(" separator="," close=")">
                #{applyStatus}
            </foreach>
        </if>
    </select>
        
     <select id="queryOutItemDetailOrderByIds" resultMap="BaseResultMap" parameterType="map">
    	SELECT
    		<include refid="Base_Column_List"/> 
		FROM
			inv_invoice_out_item_detail
		WHERE is_deleted = 0
		AND inv_invoice_in_id NOT IN (
			SELECT t1.inv_invoice_in_id FROM 
			inv_invoice_out_item_detail t1,
			inv_invoice_out_checklist_detail t2
			WHERE t1.is_deleted = 0
			AND t1.id = t2.item_detail_id
			AND t1.inv_invoice_in_id = #{invoiceId,jdbcType=BIGINT}
			GROUP BY t1.inv_invoice_in_id)
		<if test="outItemDetailIds != null and outItemDetailIds.size > 0 ">
        AND id IN
            <foreach item="id" index="index" collection="outItemDetailIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <resultMap id="minInvoiceOutItemDetailDto" type="com.prcsteel.platform.order.model.dto.InvoiceOutItemDetailDto">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="spec" property="spec" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="buyer_id" property="buyerId" jdbcType="BIGINT"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="tax_code" property="taxCode" jdbcType="VARCHAR"/>
        <result column="addr" property="addr" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="bank_account" property="bankAccount" jdbcType="VARCHAR"/>
        <result column="bank_name_main" property="bankNameMain" jdbcType="VARCHAR"/>
        <result column="bank_name_branch" property="bankNameBranch" jdbcType="VARCHAR"/>
        <result column="apply_detail_id" property="applyDetailId" jdbcType="BIGINT"/>
        <result column="checklist_id" property="checklistId" jdbcType="BIGINT"/>
        <result column="sign_of_spec" property="signOfSpec" jdbcType="VARCHAR"/>
        <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
        <result column="org_id" property="orgId" jdbcType="BIGINT"/>
        <result column="invoiced_host" property="invoicedHost" jdbcType="VARCHAR"/>
        <result column="invoice_type" property="invoiceType" jdbcType="VARCHAR"/>
        <result column="category_name" property="categoryName" jdbcType="VARCHAR"/>
        
    </resultMap>

    <select id="queryByChecklistId" resultMap="minInvoiceOutItemDetailDto"><!-- 这里的 iioid.nsort_name 变成大类名(category_name) -->
        SELECT iioid.id, iiid.nsort_name_comb as nsort_name, iioid.material, iioid.spec, iiocd.weight, iiocd.amount,
          iioid.price, iioad.buyer_id, iioad.buyer_name, cae.tax_code,cae.addr, cae.tax_tel as tel,
          cae.bank_number AS bank_account, cae.tax_bank_name_main as bank_name_main, cae.tax_bank_name_branch as bank_name_branch,
          iioid.apply_detail_id, iiocd.checklist_id,bss.display_name AS sign_of_spec, iioad.org_name, iioad.org_id, bo.invoiced_host, 
          IFNULL(ca.check_invoice_type,cae.invoice_type) invoice_type, k.category_name as category_name 
        FROM inv_invoice_out_checklist_detail iiocd
          LEFT JOIN inv_invoice_out_item_detail iioid ON iioid.id = iiocd.item_detail_id
          LEFT JOIN inv_invoice_out_apply_detail iioad ON iioad.id = iioid.apply_detail_id
          LEFT JOIN cust_account ca ON ca.id = iioad.buyer_id
		  LEFT JOIN cust_account_ext cae ON cae.cust_account_id = ca.id
          LEFT JOIN inv_invoice_in_detail iiid ON iiid.id = iioid.inv_invoice_in_detail_id
          LEFT JOIN base_sys_setting bss ON bss.setting_type = 'typeofspec' AND bss.setting_value = iiid.type_of_spec
          LEFT JOIN base_organization bo ON bo.id = iioad.org_id
          LEFT JOIN base_sys_category_alias as k on k.alias_name = iiid.nsort_name
        WHERE iioid.is_deleted = 0 AND (iiocd.weight > 0 OR iiocd.amount > 0)
          AND iiocd.checklist_id = #{checklistId, jdbcType=BIGINT}
    </select>
    
    <update id="updateIsDeferForIds" parameterType="map">
   		UPDATE inv_invoice_out_item_detail
    	<set>
           	 is_defer = #{isDefer}
        </set>
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">#{id}</foreach>
    </update>
    
    <select id="queryCountByInvoiceOrderitemIds"  resultType="int"  parameterType="java.lang.Long">
    	SELECT
    		COUNT(1)
		FROM
			inv_invoice_out_item_detail
		WHERE is_deleted = 0
        AND invoice_orderitem_id IN
            <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
                #{id}
            </foreach>
    </select>

    <!--根据申请Id查询相关详情的修改次数-->
    <select id="queryModifyNumByApplyIds" resultMap="BaseResultMap" parameterType="map">
        SELECT
        t1.id, t1.modification_number
        FROM inv_invoice_out_item_detail t1
        LEFT JOIN inv_invoice_out_apply_detail t2 ON t1.apply_detail_id=t2.id
        LEFT JOIN inv_invoice_out_apply t3 ON t2.invoice_out_apply_id=t3.id
        WHERE t1.is_deleted=0 AND t2.is_deleted=0 AND t3.is_deleted=0 AND (t1.amount-IFNULL(t1.actual_amount,0))>0
        <if test="applyIds != null">
            AND t3.id IN
            <foreach item="applyId" index="index" collection="applyIds" open="(" separator="," close=")">
                #{applyId}
            </foreach>
        </if>
    </select>
    
    <select id="queryOrderItemIds"  parameterType="com.prcsteel.platform.order.model.query.AllowanceOrderQuery" resultType="java.lang.Long">
  	SELECT 
		order_detail_id
 	FROM inv_invoice_out_item_detail
  	WHERE is_deleted = 0
  	AND order_detail_id IN
  	<foreach collection="orderDetailIds" item="id" open="(" close=")" separator=",">#{id}</foreach>
  	GROUP BY order_detail_id
  </select>
</mapper>
