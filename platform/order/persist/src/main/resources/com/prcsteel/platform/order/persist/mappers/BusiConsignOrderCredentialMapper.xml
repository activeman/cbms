<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prcsteel.platform.order.persist.dao.BusiConsignOrderCredentialDao" >
  <resultMap id="BaseResultMap" type="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="credential_code" property="credentialCode" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="print_num" property="printNum" jdbcType="INTEGER" />
    <result column="print_ip" property="printIp" jdbcType="VARCHAR" />
    
    <result column="print_code_num" property="printCodeNumber" jdbcType="INTEGER" />
    <result column="print_code_ip" property="printCodeIp" jdbcType="VARCHAR" />
    <result column="print_code_date" property="printCodeDate" jdbcType="TIMESTAMP" />
    <result column="print_code_by" property="printCodeBy" jdbcType="VARCHAR" />
    
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="print_date" property="printDate" jdbcType="TIMESTAMP" />
    <result column="printed_by" property="printedBy" jdbcType="VARCHAR" />
    <result column="submit_date" property="submitDate" jdbcType="TIMESTAMP" />
    <result column="submited_by" property="submitedBy" jdbcType="VARCHAR" />
    <result column="audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="audit_by" property="auditBy" jdbcType="VARCHAR" />
    <result column="is_bill_buyercert" property="isBillBuyercert" jdbcType="BIT" />
    <result column="row_id" property="rowId" jdbcType="VARCHAR" />
    <result column="parent_row_id" property="parentRowId" jdbcType="VARCHAR" />

    <result column="credential_num" property="credentialNum" jdbcType="VARCHAR" />
    <result column="upload_status" property="uploadStatus" jdbcType="VARCHAR" />
    
    
  </resultMap>
    
    <resultMap id="BatchUploadingMap"  type="com.prcsteel.platform.order.model.dto.BatchUploadingDto">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="credential_code" property="credentialCode" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="submit_date" property="submitDate" jdbcType="VARCHAR" />
		<result column="credential_num" property="credentialNum" jdbcType="VARCHAR" />
		<result column="upload_status" property="uploadStatus" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="account_name" property="accountName" jdbcType="VARCHAR" />
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR" />
        <result column="batch_credential_code" property="batchCredentialCode" jdbcType="VARCHAR" />
		<result column="pages" property="pages" jdbcType="VARCHAR" />
		<result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
	</resultMap> 
  <sql id="Base_Column_List" >
    id, credential_code, type, name, print_num, print_code_num, print_ip, print_code_ip, 
    status, note, is_deleted,created, print_date, print_code_date, printed_by, print_code_by,
    submit_date, submited_by, audit_date, audit_by,is_bill_buyercert, row_id, parent_row_id, credential_num, upload_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from busi_consign_order_credential
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectByPrimaryCredentialCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from busi_consign_order_credential
    where credential_code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from busi_consign_order_credential
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    insert into busi_consign_order_credential (id, credential_code, type, 
      name, print_num, print_ip, 
      status, note, is_deleted, created,
      print_date, printed_by, submit_date, 
      submited_by, audit_date, audit_by, is_bill_buyercert,
      row_id, parent_row_id, credential_num,upload_status)
    values (#{id,jdbcType=BIGINT}, #{credentialCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{printNum,jdbcType=INTEGER}, #{printIp,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, #{created,jdbcType=TIMESTAMP},
      #{printDate,jdbcType=TIMESTAMP}, #{printedBy,jdbcType=VARCHAR}, #{submitDate,jdbcType=TIMESTAMP}, 
      #{submitedBy,jdbcType=VARCHAR}, #{auditDate,jdbcType=TIMESTAMP}, #{auditBy,jdbcType=VARCHAR}, #{isBillBuyercert,jdbcType=BIT}, 
      #{rowId,jdbcType=VARCHAR}, #{parentRowId,jdbcType=VARCHAR}), #{credentialNum,jdbcType=VARCHAR}, #{uploadStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    insert into busi_consign_order_credential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="credentialCode != null" >
        credential_code,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="printNum != null" >
        print_num,
      </if>
      <if test="printCodeNumber != null" >
        print_code_num,
      </if>
      <if test="printCodeIp != null" >
        print_code_ip,
      </if>
      <if test="printCodeDate != null" >
        print_code_date,
      </if>
      <if test="printCodeBy != null" >
        print_code_by,
      </if>
      <if test="printIp != null" >
        print_ip,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="printDate != null" >
        print_date,
      </if>
      <if test="printedBy != null" >
        printed_by,
      </if>
      <if test="submitDate != null" >
        submit_date,
      </if>
      <if test="submitedBy != null" >
        submited_by,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="auditBy != null" >
        audit_by,
      </if>
      <if test="isBillBuyercert != null" >
        is_bill_buyercert,
      </if>
      <if test="rowId != null" >
        row_id,
      </if>
      <if test="parentRowId != null" >
        parent_row_id,
      </if>
      <if test="credentialNum != null" >
        credential_num,
      </if>
      <if test="uploadStatus != null" >
        upload_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="credentialCode != null" >
        #{credentialCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="printNum != null" >
        #{printNum,jdbcType=INTEGER},
      </if>
      <if test="printCodeNumber != null" >
        #{printCodeNumber,jdbcType=INTEGER},
      </if>
      <if test="printCodeIp != null" >
        #{printCodeIp,jdbcType=VARCHAR},
      </if>
      <if test="printCodeDate != null" >
        #{printCodeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printCodeBy != null" >
        #{printCodeBy,jdbcType=VARCHAR},
      </if>
      <if test="printIp != null" >
        #{printIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="printDate != null" >
        #{printDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printedBy != null" >
        #{printedBy,jdbcType=VARCHAR},
      </if>
      <if test="submitDate != null" >
        #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="submitedBy != null" >
        #{submitedBy,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditBy != null" >
        #{auditBy,jdbcType=VARCHAR},
      </if>
      <if test="isBillBuyercert != null" >
        #{isBillBuyercert,jdbcType=BIT},
      </if>
      <if test="rowId != null" >
        #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="parentRowId != null" >
        #{parentRowId,jdbcType=VARCHAR},
      </if>
      <if test="credentialNum != null" >
        #{credentialNum,jdbcType=VARCHAR},
      </if>
      <if test="uploadStatus != null" >
        #{uploadStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    update busi_consign_order_credential
    <set >
      <if test="credentialCode != null" >
        credential_code = #{credentialCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="printNum != null" >
        print_num = #{printNum,jdbcType=INTEGER},
      </if>
      <if test="printCodeNumber != null" >
        print_code_num = #{printCodeNumber,jdbcType=INTEGER},
      </if>
      <if test="printCodeIp != null" >
        print_code_ip = #{printCodeIp,jdbcType=VARCHAR},
      </if>
      <if test="printCodeDate != null" >
        print_code_date = #{printCodeDate,jdbcType=VARCHAR},
      </if>
      <if test="printCodeBy != null" >
        print_code_by = #{printCodeBy,jdbcType=VARCHAR},
      </if>
      <if test="printIp != null" >
        print_ip = #{printIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="printDate != null" >
        print_date = #{printDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printedBy != null" >
        printed_by = #{printedBy,jdbcType=VARCHAR},
      </if>
      <if test="submitDate != null" >
        submit_date = #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="submitedBy != null" >
        submited_by = #{submitedBy,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditBy != null" >
        audit_by = #{auditBy,jdbcType=VARCHAR},
      </if>
       <if test="isBillBuyercert != null" >
        is_bill_buyercert = #{isBillBuyercert,jdbcType=BIT},
      </if>
      <if test="rowId != null" >
        row_id = #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="parentRowId != null" >
        parent_row_id = #{parentRowId,jdbcType=VARCHAR},
      </if>
      <if test="credentialNum != null" >
        credential_num = #{credentialNum,jdbcType=VARCHAR},
      </if>
      <if test="uploadStatus != null" >
        upload_status = #{uploadStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    update busi_consign_order_credential
    set credential_code = #{credentialCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      print_num = #{printNum,jdbcType=INTEGER},
      print_code_num = #{printCodeNumber,jdbcType=INTEGER},
      print_code_ip = #{printCodeIp,jdbcType=VARCHAR},
      print_code_date = #{printCodeDate,jdbcType=TIMESTAMP},
      print_code_by = #{printCodeBy,jdbcType=VARCHAR},
      print_ip = #{printIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      print_date = #{printDate,jdbcType=TIMESTAMP},
      printed_by = #{printedBy,jdbcType=VARCHAR},
      submit_date = #{submitDate,jdbcType=TIMESTAMP},
      submited_by = #{submitedBy,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      audit_by = #{auditBy,jdbcType=VARCHAR},
      is_bill_buyercert = #{isBillBuyercert,jdbcType=BIT},
      row_id = #{rowId,jdbcType=VARCHAR},
      parent_row_id = #{parentRowId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
	<!-- 通过凭证号更新打印信息 -->
  <update id="updateByCertSelective" parameterType="com.prcsteel.platform.order.model.model.BusiConsignOrderCredential" >
    update busi_consign_order_credential
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="printNum != null" >
        print_num = print_num+1,
      </if>
      <if test="printCodeNumber != null" >
        print_code_num = print_code_num+1,
      </if>
      <if test="printCodeIp != null" >
        print_code_ip = #{printCodeIp,jdbcType=VARCHAR},
      </if>
      <if test="printCodeDate != null" >
        print_code_date = #{printCodeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printCodeBy != null" >
        print_code_by = #{printCodeBy,jdbcType=VARCHAR},
      </if>
      <if test="printIp != null" >
        print_ip = #{printIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="printDate != null" >
        print_date = #{printDate,jdbcType=TIMESTAMP},
      </if>
      <if test="printedBy != null" >
        printed_by = #{printedBy,jdbcType=VARCHAR},
      </if>
      <if test="submitDate != null" >
        submit_date = #{submitDate,jdbcType=TIMESTAMP},
      </if>
      <if test="submitedBy != null" >
        submited_by = #{submitedBy,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditBy != null" >
        audit_by = #{auditBy,jdbcType=VARCHAR},
      </if>
      <if test="isBillBuyercert != null" >
        is_bill_buyercert = #{isBillBuyercert,jdbcType=BIT},
      </if>
      <if test="credentialNum != null" >
        credential_num = #{credentialNum,jdbcType=VARCHAR},
      </if>
      <if test="uploadStatus != null" >
        upload_status = #{uploadStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where credential_code = #{credentialCode,jdbcType=VARCHAR}
  </update>
  <resultMap id="orderTradeCertificateForUploadDto" type="com.prcsteel.platform.order.model.dto.OrderTradeCertificateForUploadDto" >
    <result column="certificateId" property="certificateId" jdbcType="BIGINT" />
    <result column="certificateNO" property="certificateNO" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="certificateCreated" property="certificateCreated" jdbcType="VARCHAR" />
    <result column="orderId" property="orderId" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="buyerId" property="buyerId" jdbcType="BIGINT" />
    <result column="buyerName" property="buyerName" jdbcType="VARCHAR" />
    <result column="sellerId" property="sellerId" jdbcType="BIGINT" />
    <result column="sellerName" property="sellerName" jdbcType="VARCHAR" />
    <result column="totalWeight" property="totalWeight" jdbcType="DECIMAL" />
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="orderCreated" property="orderCreated" jdbcType="VARCHAR" />
    <result column="ownerName" property="ownerName" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="actualPickTotalQuantity" property="actualPickTotalQuantity" jdbcType="INTEGER" />
    <result column="actualPickTotalWeight" property="actualPickTotalWeight" jdbcType="DECIMAL" />
    <result column="actualPickTotalAmount" property="actualPickTotalAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="approvalRequired" property="approvalRequired" jdbcType="BIT" />
    <result column="orderOrgName" property="orderOrgName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="loadcertificateforupload" resultMap="orderTradeCertificateForUploadDto" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
  		select a.id certificateId,
  			a.name,
			a.credential_code certificateNO,
			DATE_FORMAT(a.created,'%Y-%m-%d %H:%i:%s') certificateCreated,
			case when count(distinct b.id)>1 then '-' else (select name from acl_user where id=b.owner_id) end ownerName,
			case when count(distinct b.id)>1 then 0 else b.id end  orderId,
			case when count(distinct b.id)>1 then '-' else b.code end code,
			case when count(distinct b.id)>1 then 0 else b.account_id end buyerId,
			case when count(distinct b.id)>1 then '-' else b.account_name end buyerName,
			case when count(distinct b.id)>1 then '-' else DATE_FORMAT(b.created,'%Y-%m-%d %H:%i:%s') end orderCreated,
            case when count(distinct b.id)>1 then '-' else b.order_org_name end orderOrgName,
			c.seller_id sellerId,
			c.seller_name sellerName,
			(case when b.status > 6 then  SUM(c.actual_pick_quantity_server) else SUM(c.quantity) end ) as  quantity,
			sum(c.weight) totalWeight,
			SUM(round((ifnull(c.actual_pick_weight_server,0)  + ifnull(c.allowance_weight,0)),6)) as actualPickTotalWeight,
			sum(c.weight * c.cost_price) totalAmount,
			SUM(round((round((ifnull(c.actual_pick_weight_server,0) * c.cost_price),2) + ifnull(c.allowance_amount,0)),2)) actualPickTotalAmount,
			(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as  approvalRequired,
			a.status
			from busi_consign_order_credential a
			left join busi_consign_order_items c on (a.credential_code = c.seller_credential_code or a.credential_code = c.batch_seller_credential_code)
			left join busi_consign_order b on b.id=c.order_id
			left join cust_account as k on k.id = c.seller_id
			left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
			where  a.type='seller'
			and b.status not in ('-1', '-2', '-3', '-4', '-7', '-8') 
          <!-- <if test="blacklist != null">
			and exists (select 1
				from cust_account as k2,
				base_sys_setting as k3  
				where k2.id = c.seller_id
					and k2.supplier_label = k3.setting_name
					and k3.setting_type='client_type'        
					and k3.display_name='卖家凭证'
				
					<if test="blacklist">
					and k3.setting_value='1'
					</if>
					<if test="!blacklist">
					and k3.setting_value='0'
					</if>
					)
            </if>
             -->
			<if test="certificateId !=null">
				<![CDATA[and a.id = '#{certificateId}' ]]>
			</if>
			<if test="certificateNO !=null and certificateNO!=''">
				<![CDATA[and a.credential_code like '%${certificateNO}%' ]]>
			</if>
			<if test="sellerName !=null and sellerName !=''">
				<![CDATA[and c.seller_name like '%${sellerName}%' ]]>
			</if>
			<if test="ownerName !=null and ownerName !=''">
				<![CDATA[and (select name from acl_user where id=b.owner_id) like '%${ownerName}%' ]]>
			</if>
			<if test="code !=null and code !=''">
				<![CDATA[and b.code like '%${code}%' ]]>
			</if>
			<if test="status !=null and status !=''">
				<![CDATA[and a.status = #{status,jdbcType=VARCHAR} ]]>
			</if>
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(a.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
	        <if test="buyerId != null">
				and b.account_id = #{buyerId,jdbcType=BIGINT}
			</if>
			<if test="sellerId != null">
				and c.seller_id = #{sellerId,jdbcType=BIGINT}
			</if>
          	<!--权限控制-->
           <if test="userIds != null">
	      		AND b.owner_id IN
	      		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			        #{userId}
		        </foreach>
			</if>
			group by a.credential_code,c.seller_id
			<if test="blacklist != null">
			having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="blacklist">
					   approvalRequired='1'
					</if>
					<if test="!blacklist">
					   approvalRequired='0'
					</if>
			
			</if>
			order by a.created
            <if test="start != null and length != null">
              limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
            </if>

  </select>
  
  <select id="loadcertificateforuploadTotal" resultType="int" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
  		select count(1) from
  		(
  		select a.id certificateId,
			a.credential_code certificateNO,
			DATE_FORMAT(a.created,'%Y-%m-%d %H:%i:%s') certificateCreated,
			case when count(distinct b.id)>1 then '-' else (select name from acl_user where id=b.owner_id) end ownerName,
			case when count(distinct b.id)>1 then 0 else b.id end  orderId,
			case when count(distinct b.id)>1 then '-' else b.code end code,
			case when count(distinct b.id)>1 then 0 else b.account_id end buyerId,
			case when count(distinct b.id)>1 then '-' else b.account_name end buyerName,
			case when count(distinct b.id)>1 then '-' else DATE_FORMAT(b.created,'%Y-%m-%d %H:%i:%s') end orderCreated,
			c.seller_id sellerId,
			c.seller_name sellerName,
			sum(c.quantity) quantity,
			sum(c.weight) totalWeight,
			sum(c.actual_pick_weight_server) actualPickTotalWeight,
			sum(c.amount) totalAmount,
			sum(round(c.deal_price * ifnull(c.actual_pick_weight_server,0),2)) actualPickTotalAmount,
			(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as  approvalRequired,
			a.status
			from busi_consign_order_credential a
			left join busi_consign_order_items c on (a.credential_code = c.seller_credential_code or a.credential_code = c.batch_seller_credential_code)
			left join busi_consign_order b on b.id=c.order_id
			left join cust_account as k on k.id = c.seller_id
			left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
			where a.type='seller'
			and b.status not in ('-1', '-2', '-3', '-4', '-7', '-8') 
			<if test="certificateId !=null">
				<![CDATA[and a.id = '#{certificateId}' ]]>
			</if>
			<if test="certificateNO !=null and certificateNO!=''">
				<![CDATA[and a.credential_code like '%${certificateNO}%' ]]>
			</if>
			<if test="sellerName !=null and sellerName !=''">
				<![CDATA[and c.seller_name like '%${sellerName}%' ]]>
			</if>
			<if test="ownerName !=null and ownerName !=''">
				<![CDATA[and (select name from acl_user where id=b.owner_id) like '%${ownerName}%' ]]>
			</if>
			<if test="code !=null and code !=''">
				<![CDATA[and b.code like '%${code}%' ]]>
			</if>
			<if test="status !=null and status !=''">
				<![CDATA[and a.status = #{status,jdbcType=VARCHAR} ]]>
			</if>
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(a.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
	         <if test="buyerId != null">
				and b.account_id = #{buyerId,jdbcType=BIGINT}
			</if>
			<if test="sellerId != null">
				and c.seller_id = #{sellerId,jdbcType=BIGINT}
			</if>
            <!--权限控制-->
            <if test="userIds != null">
		      		AND b.owner_id IN
	      		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
		        	#{userId}
	        	</foreach>
	        </if>
			group by a.credential_code,c.seller_id
			<if test="blacklist != null">
			having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="blacklist">
					   approvalRequired='1'
					</if>
					<if test="!blacklist">
					   approvalRequired='0'
					</if>
			
			</if>
			) x
  </select>
  <!--加载上传买家凭证tab -->
  <select id="loadcertificateforuploadbuyer" resultMap="orderTradeCertificateForUploadDto" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
    select a.id certificateId,
    a.credential_code certificateNO,
    a.name,
    DATE_FORMAT(a.created,'%Y-%m-%d %H:%i:%s') certificateCreated,
    case when count(distinct b.id)>1 then '-' else (select name from acl_user where id=b.owner_id) end ownerName,
    case when count(distinct b.id)>1 then 0 else b.id end  orderId,
    case when count(distinct b.id)>1 then '-' else b.code end code,
    case when count(distinct b.id)>1 then 0 else c.seller_id end sellerId,
    case when count(distinct b.id)>1 then '-' else c.seller_name end sellerName,
    case when count(distinct b.id)>1 then '-' else DATE_FORMAT(b.created,'%Y-%m-%d %H:%i:%s') end orderCreated,
    case when count(distinct b.id)>1 then '-' else b.order_org_name end orderOrgName,
    b.account_id  buyerId,
    b.account_name buyerName,
    (case when b.status > 6 then  SUM(c.actual_pick_quantity_server) else SUM(c.quantity) end ) as quantity,
    b.total_weight  as totalWeight,
    SUM(round((ifnull(c.actual_pick_weight_server,0)  + ifnull(c.allowance_weight,0)),6)) as actualPickTotalWeight,
    b.total_amount  as totalAmount,
    SUM(round((round((ifnull(c.actual_pick_weight_server,0) * c.deal_price),2) + ifnull(c.allowance_buyer_amount,0)),2)) as actualPickTotalAmount,
    (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as  approvalRequired,
    a.status
    from busi_consign_order_credential a
    left join busi_consign_order b on (a.credential_code = b.buyer_credential_code or a.credential_code = b.batch_buyer_credential_code)
    left join busi_consign_order_items c on b.id=c.order_id
    left join cust_account as k on k.id = c.seller_id
	left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
    where a.type='buyer'
    and b.status not in ('-1', '-2', '-3', '-4', '-7', '-8') 
    <if test="certificateId !=null">
      <![CDATA[and a.id = '#{certificateId}' ]]>
    </if>
    <if test="certificateNO !=null and certificateNO!=''">
      <![CDATA[and a.credential_code like '%${certificateNO}%' ]]>
    </if>
    <if test="buyerName !=null and buyerName !=''">
      <![CDATA[and b.account_name like '%${buyerName}%' ]]>
    </if>
    <if test="ownerName !=null and ownerName !=''">
      <![CDATA[and (select name from acl_user where id=b.owner_id) like '%${ownerName}%' ]]>
    </if>
    <if test="code !=null and code !=''">
      <![CDATA[and b.code like '%${code}%' ]]>
    </if>
    <if test="status !=null and status !=''">
      <![CDATA[and a.status = #{status,jdbcType=VARCHAR} ]]>
    </if>
    <if test="startTime != null and startTime != '' ">
      <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
    </if>
    <if test="endTime != null and endTime != '' ">
      <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
    </if>
     <if test="buyerId != null">
				and b.account_id = #{buyerId,jdbcType=BIGINT}
	</if>
	<if test="sellerId != null">
				and c.seller_id = #{sellerId,jdbcType=BIGINT}
	</if>
    <!--权限控制-->
    <if test="userIds != null">
   		AND b.owner_id IN
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
       	#{userId}
      </foreach>
	</if>
    group by a.credential_code,b.account_id
    <if test="blacklist != null">
			having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="blacklist">
					   approvalRequired='1'
					</if>
					<if test="!blacklist">
					   approvalRequired='0'
					</if>
			
			</if>
    order by a.created
    <if test="start != null and length != null">
    limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </if>
  </select>
<!--加载上传买家凭证tab -->
  <select id="loadcertificateforuploadbuyerTotal" resultType="int" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
    select count(1) from
    (
    select a.id certificateId,
    a.credential_code certificateNO,
    DATE_FORMAT(a.created,'%Y-%m-%d %H:%i:%s') certificateCreated,
    case when count(distinct b.id)>1 then '-' else (select name from acl_user where id=b.owner_id) end ownerName,
    case when count(distinct b.id)>1 then 0 else b.id end  orderId,
    case when count(distinct b.id)>1 then '-' else b.code end code,
    case when count(distinct b.id)>1 then 0 else c.seller_id end sellerId,
    case when count(distinct b.id)>1 then '-' else c.seller_name end sellerName,
    case when count(distinct b.id)>1 then '-' else DATE_FORMAT(b.created,'%Y-%m-%d %H:%i:%s') end orderCreated,
    b.account_id  buyerId,
    b.account_name buyerName,
    sum(c.quantity) quantity,
    sum(c.weight) totalWeight,
    sum(c.actual_pick_weight_server) actualPickTotalWeight,
    sum(c.amount) totalAmount,
    sum(round(c.deal_price * ifnull(c.actual_pick_weight_server,0),2)) actualPickTotalAmount,
    (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as  approvalRequired,
    a.status
    from busi_consign_order_credential a
    left join busi_consign_order b on (a.credential_code = b.buyer_credential_code or a.credential_code = b.batch_buyer_credential_code)
    left join busi_consign_order_items c on b.id=c.order_id
    left join cust_account as k on k.id = c.seller_id
	left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
    where a.type='buyer'
    and b.status not in ('-1', '-2', '-3', '-4', '-7', '-8') 
    <if test="certificateId !=null">
      <![CDATA[and a.id = '#{certificateId}' ]]>
    </if>
    <if test="certificateNO !=null and certificateNO!=''">
      <![CDATA[and a.credential_code like '%${certificateNO}%' ]]>
    </if>
    <if test="buyerName !=null and buyerName !=''">
      <![CDATA[and b.account_name like '%${buyerName}%' ]]>
    </if>
    <if test="ownerName !=null and ownerName !=''">
      <![CDATA[and (select name from acl_user where id=b.owner_id) like '%${ownerName}%' ]]>
    </if>
    <if test="code !=null and code !=''">
      <![CDATA[and b.code like '%${code}%' ]]>
    </if>
    <if test="status !=null and status !=''">
      <![CDATA[and a.status = #{status,jdbcType=VARCHAR} ]]>
    </if>
    <if test="startTime != null and startTime != '' ">
      <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
    </if>
    <if test="endTime != null and endTime != '' ">
      <![CDATA[ and str_to_date(a.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
    </if>
     <if test="buyerId != null">
				and b.account_id = #{buyerId,jdbcType=BIGINT}
	</if>
	<if test="sellerId != null">
				and c.seller_id = #{sellerId,jdbcType=BIGINT}
	</if>
    <!--权限控制-->
    <if test="userIds != null">
		AND b.owner_id IN
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</if>

    group by a.credential_code,b.account_id
    <if test="blacklist != null">
			having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="blacklist">
					   approvalRequired='1'
					</if>
					<if test="!blacklist">
					   approvalRequired='0'
					</if>
			
			</if>
    ) x
  </select>
    <!--  根据服务中心和当前月份查询最后一条 -->
  <select id="queryLastRecord" resultType="String" parameterType="map">
	
 	select 
    	 	 ifnull(max(right(credential_code,5)),0)
    from busi_consign_order_credential
   	where credential_code like CONCAT('%',#{orgCode,jdbcType=VARCHAR},'%')
    and EXTRACT(YEAR_MONTH FROM created)  = #{month,jdbcType=VARCHAR}
    
	
  </select>
  
  <select id="selectByCert" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from busi_consign_order_credential
    where credential_code = #{cert,jdbcType=VARCHAR} and is_deleted = 0
  </select>
  
  <resultMap id="CredentialMap" type="com.prcsteel.platform.order.model.dto.ConsignOrderCredentialDto" extends="BaseResultMap">
  		<result column="code" property="code" jdbcType="VARCHAR" />
  		<result column="account_name" property="buyerName" jdbcType="VARCHAR" />
  		<result column="account_id" property="buyerId" jdbcType="BIGINT" />
  		<result column="seller_name" property="sellerName" jdbcType="VARCHAR" />
  		<result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
  		<result column="orderId" property="orderId" jdbcType="BIGINT" />
  		<result column="batch_buyer_credential_code" property="batchBuyerCredentialCode" jdbcType="VARCHAR" />
  		<result column="batch_seller_credential_code" property="batchSellerCredentialCode" jdbcType="VARCHAR" />
  		<result column="setting_value" property="settingValue" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 优化 用union 代替 or  modify by wangxianjun  -->
    <select id="queryChecklist" resultMap="CredentialMap" parameterType="com.prcsteel.platform.order.model.query.TradeCredentialQuery" >
	    select * from (
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date, 
					(case when count(distinct t1.id)>1 then 0 else t1.id end)  as orderId, 
					(case when count(distinct t1.id)>1 then '-' else t1.code end) code , 
					t1.account_name, t1.account_id, 
					(case when count(distinct t1.id)>1 then '-' else t2.seller_name end) as seller_name,
					(case when count(distinct t1.id)>1 then 0 else t2.seller_id end) as seller_id,
					
					<!-- 如果是批量买家凭证号不为空（即为批量买家凭证 ） 则seller_name, seller_id取空，反之取当前的
					(CASE WHEN t1.batch_buyer_credential_code is null or t1.batch_buyer_credential_code = '' THEN t2.seller_name ELSE '-' end) as seller_name,
					(CASE WHEN t1.batch_buyer_credential_code is null or t1.batch_buyer_credential_code = '' THEN t2.seller_id ELSE '' end) as seller_id,
					-->
					
					t1.batch_buyer_credential_code, t2.batch_seller_credential_code,
					(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end) as setting_value
				from busi_consign_order_credential as t
					left join busi_consign_order as t1 on t.credential_code = t1.buyer_credential_code  and t1.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
					left join busi_consign_order_items as t2 on t2.order_id = t1.id
					left join cust_account as k on k.id = t2.seller_id
					left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
				<where> 
					and t.type='buyer'
					<!-- 查询指定的服务中心 -->
					<!--<if test="orgIds != null">
						and t1.order_org_id in 
						<foreach collection="orgIds" item="org" open="(" separator="," close=")">
							#{org}
						</foreach>
					</if>
                   -->
                  AND EXISTS (
                  SELECT 1 FROM base_organization b WHERE 1=1
                  <if test="orgIds != null">
                    AND b.id IN
                    <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                      #{org}
                    </foreach>
                  </if>  AND t1.order_org_id = b.id
                  )
					<if test="sellerId !=null">
						and t2.seller_id = #{sellerId,jdbcType=BIGINT}
					</if>
					<if test="buyerId !=null">
						and t1.account_id = #{buyerId,jdbcType=BIGINT}
					</if>
					<if test="code !=null">
						and t1.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
					</if>
					<if test="credentialCode !=null">
						and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
					</if>
					
					<if test="startTime != null">
		            	<![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
			        </if>
			        <if test="endTime != null">
			            <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
			        </if>
			        
			        <if test="status !=null and status == true">
						and t.status = 'APPROVED'
			        </if>
			        <if test="status !=null and status == false">
						and t.status = 'PENDING_APPROVAL'
			        </if>
			        <if test="status ==null">
			        	and t.status in ('PENDING_APPROVAL','APPROVED')
			        </if>
				</where>
				group by t.credential_code
				having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="check">
					   setting_value='1'
					</if>
					<if test="check==null or !check">
					   setting_value='0'
					</if>
			)
            UNION
                (
                select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date,
                (case when count(distinct t1.id)>1 then 0 else t1.id end)  as orderId,
                (case when count(distinct t1.id)>1 then '-' else t1.code end) code ,
                t1.account_name, t1.account_id,
                (case when count(distinct t1.id)>1 then '-' else t2.seller_name end) as seller_name,
                (case when count(distinct t1.id)>1 then 0 else t2.seller_id end) as seller_id,

                <!-- 如果是批量买家凭证号不为空（即为批量买家凭证 ） 则seller_name, seller_id取空，反之取当前的
                (CASE WHEN t1.batch_buyer_credential_code is null or t1.batch_buyer_credential_code = '' THEN t2.seller_name ELSE '-' end) as seller_name,
                (CASE WHEN t1.batch_buyer_credential_code is null or t1.batch_buyer_credential_code = '' THEN t2.seller_id ELSE '' end) as seller_id,
                -->

                t1.batch_buyer_credential_code, t2.batch_seller_credential_code,
                (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end) as setting_value
                from busi_consign_order_credential as t
                left join busi_consign_order as t1 on  t.credential_code = t1.batch_buyer_credential_code and t1.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
                left join busi_consign_order_items as t2 on t2.order_id = t1.id
                left join cust_account as k on k.id = t2.seller_id
                left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
                <where>
                  and t.type='buyer'
                  <!-- 查询指定的服务中心 -->
                  <!--<if test="orgIds != null">
                      and t1.order_org_id in
                      <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                          #{org}
                      </foreach>
                  </if>
                 -->
                  AND EXISTS (
                  SELECT 1 FROM base_organization b WHERE 1=1
                  <if test="orgIds != null">
                    AND b.id IN
                    <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                      #{org}
                    </foreach>
                  </if>  AND t1.order_org_id = b.id
                  )
                  <if test="sellerId !=null">
                    and t2.seller_id = #{sellerId,jdbcType=BIGINT}
                  </if>
                  <if test="buyerId !=null">
                    and t1.account_id = #{buyerId,jdbcType=BIGINT}
                  </if>
                  <if test="code !=null">
                    and t1.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
                  </if>
                  <if test="credentialCode !=null">
                    and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
                  </if>

                  <if test="startTime != null">
                    <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
                  </if>
                  <if test="endTime != null">
                    <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
                  </if>

                  <if test="status !=null and status == true">
                    and t.status = 'APPROVED'
                  </if>
                  <if test="status !=null and status == false">
                    and t.status = 'PENDING_APPROVAL'
                  </if>
                  <if test="status ==null">
                    and t.status in ('PENDING_APPROVAL','APPROVED')
                  </if>
                </where>
                group by t.credential_code
                having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
                <!-- setting_value: (1需要审核，0不需要审核) -->
                <!-- 是否需要发票审核通过的查询条件 -->
                <if test="check">
                  setting_value='1'
                </if>
                <if test="check==null or !check">
                  setting_value='0'
                </if>
                )
			UNION
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date, 
					(case when count(distinct t2.id)>1 then 0   else t2.id end)  as orderId, 
					(case when count(distinct t2.id)>1 then '-' else t2.code end) as code , 
					(case when count(distinct t2.id)>1 then '-' else t2.account_name end) as account_name,
					(case when count(distinct t2.id)>1 then 0   else t2.account_id end) as account_id,
					<!-- 如果是批量卖家凭证号不为空（即为批量卖家凭证 ） 则account_name, account_id取空，反之取当前的
					(CASE WHEN t1.batch_seller_credential_code is null or t1.batch_seller_credential_code = '' THEN t2.account_name ELSE '-' end) as account_name,
					(CASE WHEN t1.batch_seller_credential_code is null or t1.batch_seller_credential_code = '' THEN t2.account_id ELSE '' end) as account_id,
					-->
					t1.seller_name as seller_name, 
					t1.seller_id as seller_id,
					t2.batch_buyer_credential_code, t1.batch_seller_credential_code,
					(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as setting_value
				from busi_consign_order_credential as t
					left join busi_consign_order_items as t1 on t.credential_code = t1.seller_credential_code
					left join busi_consign_order as t2 on t2.id = t1.order_id and t2.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
					left join cust_account as k on k.id = t1.seller_id
					left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
				<where> 
					and t.type='seller'
					<!-- 查询指定的服务中心 -->
                  AND EXISTS (
                  SELECT 1 FROM base_organization b WHERE 1=1
                  <if test="orgIds != null">
                    AND b.id IN
                    <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                      #{org}
                    </foreach>
                  </if>  AND t2.order_org_id = b.id
                  )
				
					<if test="sellerId !=null">
						and t1.seller_id = #{sellerId,jdbcType=BIGINT}
					</if>
					<if test="buyerId !=null">
						and t2.account_id = #{buyerId,jdbcType=BIGINT}
					</if>
					<if test="code !=null">
						and t2.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
					</if>
					<if test="credentialCode !=null">
						and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
					</if>
					
					<if test="startTime != null">
		            	<![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
			        </if>
			        <if test="endTime != null">
			            <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
			        </if>
			        
			        <if test="status !=null and status == true">
						and t.status = 'APPROVED'
			        </if>
			        <if test="status !=null and status == false">
						and t.status = 'PENDING_APPROVAL'
			        </if>
			        <if test="status ==null">
			        	and t.status in ('PENDING_APPROVAL','APPROVED')
			        </if>
				</where>
				group by t.credential_code
				having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="check">
					   setting_value='1'
					</if>
					<if test="check==null or !check">
					   setting_value='0'
					</if>
			)
            UNION
              (
              select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date,
              (case when count(distinct t2.id)>1 then 0   else t2.id end)  as orderId,
              (case when count(distinct t2.id)>1 then '-' else t2.code end) as code ,
              (case when count(distinct t2.id)>1 then '-' else t2.account_name end) as account_name,
              (case when count(distinct t2.id)>1 then 0   else t2.account_id end) as account_id,
              <!-- 如果是批量卖家凭证号不为空（即为批量卖家凭证 ） 则account_name, account_id取空，反之取当前的
              (CASE WHEN t1.batch_seller_credential_code is null or t1.batch_seller_credential_code = '' THEN t2.account_name ELSE '-' end) as account_name,
              (CASE WHEN t1.batch_seller_credential_code is null or t1.batch_seller_credential_code = '' THEN t2.account_id ELSE '' end) as account_id,
              -->
              t1.seller_name as seller_name,
              t1.seller_id as seller_id,
              t2.batch_buyer_credential_code, t1.batch_seller_credential_code,
              (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as setting_value
              from busi_consign_order_credential as t
              left join busi_consign_order_items as t1 on  t.credential_code = t1.batch_seller_credential_code
              left join busi_consign_order as t2 on t2.id = t1.order_id and t2.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
              left join cust_account as k on k.id = t1.seller_id
              left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
              <where>
                and t.type='seller'
                <!-- 查询指定的服务中心 -->
                AND EXISTS (
                SELECT 1 FROM base_organization b WHERE 1=1
                <if test="orgIds != null">
                  AND b.id IN
                  <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                  </foreach>
                </if>  AND t2.order_org_id = b.id
                )

                <if test="sellerId !=null">
                  and t1.seller_id = #{sellerId,jdbcType=BIGINT}
                </if>
                <if test="buyerId !=null">
                  and t2.account_id = #{buyerId,jdbcType=BIGINT}
                </if>
                <if test="code !=null">
                  and t2.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
                </if>
                <if test="credentialCode !=null">
                  and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
                </if>

                <if test="startTime != null">
                  <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
                </if>
                <if test="endTime != null">
                  <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
                </if>

                <if test="status !=null and status == true">
                  and t.status = 'APPROVED'
                </if>
                <if test="status !=null and status == false">
                  and t.status = 'PENDING_APPROVAL'
                </if>
                <if test="status ==null">
                  and t.status in ('PENDING_APPROVAL','APPROVED')
                </if>
              </where>
              group by t.credential_code
              having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
              <!-- setting_value: (1需要审核，0不需要审核) -->
              <!-- 是否需要发票审核通过的查询条件 -->
              <if test="check">
                setting_value='1'
              </if>
              <if test="check==null or !check">
                setting_value='0'
              </if>
              )
		) as f 
		order by f.submit_date
		limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER } 
  	</select>
  
    <select id="queryTotalChecklist" resultType="java.lang.Integer" parameterType="com.prcsteel.platform.order.model.query.TradeCredentialQuery" >
	    select count(1) from (
			(
				select t.id, t.credential_code , 
					(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end) as setting_value
				from busi_consign_order_credential as t
					left join busi_consign_order as t1 on t.credential_code = t1.buyer_credential_code  and t1.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
					left join busi_consign_order_items as t2 on t2.order_id = t1.id
					left join cust_account as k on k.id = t2.seller_id
					left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
				<where> 
					and t.type='buyer'

					<!-- 查询指定的服务中心 -->
                  AND EXISTS (
                  SELECT 1 FROM base_organization b WHERE 1=1
                  <if test="orgIds != null">
                    AND b.id IN
                    <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                      #{org}
                    </foreach>
                  </if>  AND t1.order_org_id = b.id
                  )
				
					<if test="sellerId !=null">
						and t2.seller_id = #{sellerId,jdbcType=BIGINT}
					</if>
					<if test="buyerId !=null">
						and t1.account_id = #{buyerId,jdbcType=BIGINT}
					</if>
					<if test="code !=null">
						and t1.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
					</if>
					<if test="credentialCode !=null">
						and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
					</if>
					
					<if test="startTime != null">
		            	<![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
			        </if>
			        <if test="endTime != null">
			            <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
			        </if>
			        
			        <if test="status !=null and status == true">
						and t.status = 'APPROVED'
			        </if>
			        <if test="status !=null and status == false">
						and t.status = 'PENDING_APPROVAL'
			        </if>
			        <if test="status ==null">
			        	and t.status in ('PENDING_APPROVAL','APPROVED')
			        </if>
				</where>
				group by t.credential_code
				having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="check">
					   setting_value='1'
					</if>
					<if test="check==null or !check">
					   setting_value='0'
					</if>
			)
            UNION
              (
              select t.id, t.credential_code ,
              (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end) as setting_value
              from busi_consign_order_credential as t
              left join busi_consign_order as t1 on  t.credential_code = t1.batch_buyer_credential_code and t1.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
              left join busi_consign_order_items as t2 on t2.order_id = t1.id
              left join cust_account as k on k.id = t2.seller_id
              left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='买家凭证'
              <where>
                and t.type='buyer'

                <!-- 查询指定的服务中心 -->
                AND EXISTS (
                SELECT 1 FROM base_organization b WHERE 1=1
                <if test="orgIds != null">
                  AND b.id IN
                  <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                  </foreach>
                </if>  AND t1.order_org_id = b.id
                )

                <if test="sellerId !=null">
                  and t2.seller_id = #{sellerId,jdbcType=BIGINT}
                </if>
                <if test="buyerId !=null">
                  and t1.account_id = #{buyerId,jdbcType=BIGINT}
                </if>
                <if test="code !=null">
                  and t1.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
                </if>
                <if test="credentialCode !=null">
                  and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
                </if>

                <if test="startTime != null">
                  <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
                </if>
                <if test="endTime != null">
                  <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
                </if>

                <if test="status !=null and status == true">
                  and t.status = 'APPROVED'
                </if>
                <if test="status !=null and status == false">
                  and t.status = 'PENDING_APPROVAL'
                </if>
                <if test="status ==null">
                  and t.status in ('PENDING_APPROVAL','APPROVED')
                </if>
              </where>
              group by t.credential_code
              having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
              <!-- setting_value: (1需要审核，0不需要审核) -->
              <!-- 是否需要发票审核通过的查询条件 -->
              <if test="check">
                setting_value='1'
              </if>
              <if test="check==null or !check">
                setting_value='0'
              </if>
              )
			UNION
			(
				select t.id, t.credential_code, 
					(case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as setting_value
				from busi_consign_order_credential as t
					left join busi_consign_order_items as t1 on t.credential_code = t1.seller_credential_code
					left join busi_consign_order as t2 on t2.id = t1.order_id and t2.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
					left join cust_account as k on k.id = t1.seller_id
					left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
				<where> 
					and t.type='seller'
					<!-- 查询指定的服务中心 -->
                  AND EXISTS (
                  SELECT 1 FROM base_organization b WHERE 1=1
                  <if test="orgIds != null">
                    AND b.id IN
                    <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                      #{org}
                    </foreach>
                  </if>  AND t2.order_org_id = b.id
                  )
				
					<if test="sellerId !=null">
						and t1.seller_id = #{sellerId,jdbcType=BIGINT}
					</if>
					<if test="buyerId !=null">
						and t2.account_id = #{buyerId,jdbcType=BIGINT}
					</if>
					<if test="code !=null">
						and t2.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
					</if>
					<if test="credentialCode !=null">
						and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
					</if>
					
					<if test="startTime != null">
		            	<![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
			        </if>
			        <if test="endTime != null">
			            <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
			        </if>
			        
			        <if test="status !=null and status == true">
						and t.status = 'APPROVED'
			        </if>
			        <if test="status !=null and status == false">
						and t.status = 'PENDING_APPROVAL'
			        </if>
			        <if test="status ==null">
			        	and t.status in ('PENDING_APPROVAL','APPROVED')
			        </if>
				</where>
				group by t.credential_code
				having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
					<!-- setting_value: (1需要审核，0不需要审核) -->
					<!-- 是否需要发票审核通过的查询条件 -->
					<if test="check">
					   setting_value='1'
					</if>
					<if test="check==null or !check">
					   setting_value='0'
					</if>
			)
            UNION
            (
            select t.id, t.credential_code,
            (case when count(distinct k1.setting_value)>1 then '1' else min(k1.setting_value) end)  as setting_value
            from busi_consign_order_credential as t
            left join busi_consign_order_items as t1 on t.credential_code = t1.batch_seller_credential_code
            left join busi_consign_order as t2 on t2.id = t1.order_id and t2.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
            left join cust_account as k on k.id = t1.seller_id
            left join base_sys_setting k1  on k.supplier_label = k1.setting_name  and k1.setting_type='client_type' and k1.display_name='卖家凭证'
            <where>
              and t.type='seller'
              <!-- 查询指定的服务中心 -->
              AND EXISTS (
              SELECT 1 FROM base_organization b WHERE 1=1
              <if test="orgIds != null">
                AND b.id IN
                <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                  #{org}
                </foreach>
              </if>  AND t2.order_org_id = b.id
              )

              <if test="sellerId !=null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
              </if>
              <if test="buyerId !=null">
                and t2.account_id = #{buyerId,jdbcType=BIGINT}
              </if>
              <if test="code !=null">
                and t2.code  like CONCAT('%',#{code,jdbcType=VARCHAR},'%')
              </if>
              <if test="credentialCode !=null">
                and t.credential_code  like CONCAT('%',#{credentialCode,jdbcType=VARCHAR},'%')
              </if>

              <if test="startTime != null">
                <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
              </if>
              <if test="endTime != null">
                <![CDATA[ and str_to_date(t.submit_date,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
              </if>

              <if test="status !=null and status == true">
                and t.status = 'APPROVED'
              </if>
              <if test="status !=null and status == false">
                and t.status = 'PENDING_APPROVAL'
              </if>
              <if test="status ==null">
                and t.status in ('PENDING_APPROVAL','APPROVED')
              </if>
            </where>
            group by t.credential_code
            having <!-- 必须审核通过才能开票: blacklist:true,不须审核通过也能开票: blacklist:false -->
            <!-- setting_value: (1需要审核，0不需要审核) -->
            <!-- 是否需要发票审核通过的查询条件 -->
            <if test="check">
              setting_value='1'
            </if>
            <if test="check==null or !check">
              setting_value='0'
            </if>
            )
		) as ff
  	</select>
  
  <resultMap id="OrderInfoForCertificateDto" type="com.prcsteel.platform.order.model.dto.OrderInfoForCertificateDto" >
    <result column="orderId" property="orderId" jdbcType="BIGINT" />
    <result column="orderCode" property="orderCode" jdbcType="VARCHAR" />
    <result column="orderCreated" property="orderCreated" jdbcType="VARCHAR" />
    <result column="ownerId" property="ownerId" jdbcType="BIGINT" />
    <result column="ownerName" property="ownerName" jdbcType="VARCHAR" />
    <result column="buyerId" property="buyerId" jdbcType="BIGINT" />
    <result column="buyerName" property="buyerName" jdbcType="VARCHAR" />
    <result column="pay_status" property="payStatus" jdbcType="VARCHAR"/>
    <result column="secondary_time" property="secondaryTime" jdbcType="TIMESTAMP"/>
    <result column="sellerId" property="sellerId" jdbcType="BIGINT" />
    <result column="sellerName" property="sellerName" jdbcType="VARCHAR" />
    <result column="totalQuantity" property="totalQuantity" jdbcType="INTEGER" />
    <result column="totalWeight" property="totalWeight" jdbcType="DECIMAL" />
    <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="actualPickTotalQuantity" property="actualPickTotalQuantity" jdbcType="INTEGER" />
    <result column="actualPickTotalWeight" property="actualPickTotalWeight" jdbcType="DECIMAL" />
    <result column="actualPickTotalAmount" property="actualPickTotalAmount" jdbcType="DECIMAL" />
  </resultMap>
  
  <select id="selectOrdersByParamsForUploadAdd" resultMap="OrderInfoForCertificateDto" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
  		select 
	    	o.orderId,
			o.orderCode,
			o.buyerId,
			o.buyerName,
			o.ownerId,
			o.ownerName,
			o.orderCreated,
			o.pay_status,
			o.secondary_time,
			o.sellerId,
			o.sellerName,
			o.totalQuantity,
			o.totalWeight,
			o.totalAmount,
			o.actualPickTotalWeight,
			o.actualPickTotalQuantity,
			o.actualPickTotalAmount
		from (select 
	        t.id orderId,
			t.CODE orderCode,
			t.account_id buyerId,
			t.account_name buyerName,
			t.owner_id ownerId,
			t.owner_name ownerName,
			DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
			t.status as pay_status,
			t.secondary_time,
			t1.seller_id sellerId,
			t1.seller_name sellerName,
			sum(t1.quantity) totalQuantity,
			sum(t1.weight) totalWeight,
			sum(t1.weight * t1.cost_price) totalAmount,
			SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
			sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
			SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount
		from busi_consign_order as t
		left join busi_consign_order_items as t1 on t.id = t1.order_id
		left join busi_consign_order_credential t2 on ( t1.seller_credential_code = t2.credential_code or t1.batch_seller_credential_code = t2.credential_code)
		<where>
			DATE_FORMAT(t.created,'%Y-%m-%d')>='2016-04-01'
			<!-- 批量打印字段不能有值  -->
			and (t1.batch_seller_credential_code is null or trim(t1.batch_seller_credential_code) = '')
			<!-- 未打印或者凭证未审核通过 -->
			and (t2.id is null or (t2.status!='APPROVED')
				<if test="includeIds != null and includeIds != ''">
					or t.id in (${includeIds})
				</if>
			)
			<!-- 权限控制 -->
            <if test="userIds != null">
				AND t.owner_id IN
				<foreach collection="userIds" item="userId" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</if>
			
			<if test="buyerId != null">
				and t.account_id = #{buyerId,jdbcType=BIGINT}
			</if>
			<if test="sellerId != null">
				and t1.seller_id = #{sellerId,jdbcType=BIGINT}
			</if>
			<if test="buyerName != null and buyerName!=''">
				and t.account_name like '%${buyerName}%'
			</if>
			<if test="sellerName != null and sellerName!=''">
				and t1.seller_name like '%${sellerName}%'
			</if>
			<if test="ownerName != null and ownerName != '' ">
				and t.owner_name like '%${ownerName}%'
			</if>
			
			<if test="closeStatus != null and closeStatus == true">
				and t.status not in('-1', '-2', '-3', '-4', '-7', '-8') 
			</if>
			
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
	        <if test="excludeIds != null and excludeIds != ''">
				and t.id not in (${excludeIds})
			</if>
		</where>
			group by t.id, t1.seller_id
			union all
			select 
	        t.id orderId,
			t.CODE orderCode,
			t.account_id buyerId,
			t.account_name buyerName,
			t.owner_id ownerId,
			t.owner_name ownerName,
			DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
			t.status as pay_status,
			t.secondary_time,
			t1.seller_id sellerId,
			t1.seller_name sellerName,
			sum(t1.quantity) totalQuantity,
			sum(t1.weight) totalWeight,
			sum(t1.weight * t1.cost_price) totalAmount,
			SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
			sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
			SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount
		from busi_consign_order as t
		left join busi_consign_order_items as t1 on t.id = t1.order_id
		left join busi_consign_order_credential t2 on (t1.seller_credential_code = t2.credential_code or t1.batch_seller_credential_code = t2.credential_code)
		<where>
			<![CDATA[ DATE_FORMAT(t.created,'%Y-%m-%d') < '2016-04-01']]>
		    and t.status > 6
			<!-- 批量打印字段不能有值  -->
			and (t1.batch_seller_credential_code is null or trim(t1.batch_seller_credential_code) = '')
			<!-- 未打印或者凭证未审核通过 -->
			and (t2.id is null or (t2.status!='APPROVED')
				<if test="includeIds != null and includeIds != ''">
					or t.id in (${includeIds})
				</if>
			)
			<!-- 权限控制 -->
            <if test="userIds != null">
				AND t.owner_id IN
				<foreach collection="userIds" item="userId" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</if>
			
			<if test="buyerId != null">
				and t.account_id = #{buyerId,jdbcType=BIGINT}
			</if>
			<if test="sellerId != null">
				and t1.seller_id = #{sellerId,jdbcType=BIGINT}
			</if>
			<if test="buyerName != null and buyerName!=''">
				and t.account_name like '%${buyerName}%'
			</if>
			<if test="sellerName != null and sellerName!=''">
				and t1.seller_name like '%${sellerName}%'
			</if>
			<if test="ownerName != null and ownerName != '' ">
				and t.owner_name like '%${ownerName}%'
			</if>
			
			<if test="closeStatus != null and closeStatus == true">
				and t.status not in('-1', '-2', '-3', '-4', '-7', '-8','10') 
			</if>
			
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
	        <if test="excludeIds != null and excludeIds != ''">
				and t.id not in (${excludeIds})
			</if>
		</where>
			group by t.id, t1.seller_id	
			union 
			select 
	        t.id orderId,
			t.CODE orderCode,
			t.account_id buyerId,
			t.account_name buyerName,
			t.owner_id ownerId,
			t.owner_name ownerName,
			DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
			t.status as pay_status,
			t.secondary_time,
			t1.seller_id sellerId,
			t1.seller_name sellerName,
			sum(t1.quantity) totalQuantity,
			sum(t1.weight) totalWeight,
			sum(t1.weight * t1.cost_price) totalAmount,
			SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
			sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
			SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount
		from busi_consign_order as t
		left join busi_consign_order_items as t1 on t.id = t1.order_id
		left join busi_consign_order_credential t2 on ( t1.seller_credential_code = t2.credential_code or t1.batch_seller_credential_code = t2.credential_code)
		left join busi_consign_order_audit_trail t3 on t3.order_id = t.id and t3.set_to_status='10'
		<where>
			DATE_FORMAT(t3.created,'%Y-%m-%d')>='2016-04-25'
			<!-- 批量打印字段不能有值  -->
			and (t1.batch_seller_credential_code is null or trim(t1.batch_seller_credential_code) = '')
			<!-- 未打印或者凭证未审核通过 -->
			and (t2.id is null or (t2.status!='APPROVED')
				<if test="includeIds != null and includeIds != ''">
					or t.id in (${includeIds})
				</if>
			)
			<!-- 权限控制 -->
            <if test="userIds != null">
				AND t.owner_id IN
				<foreach collection="userIds" item="userId" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</if>
			
			<if test="buyerId != null">
				and t.account_id = #{buyerId,jdbcType=BIGINT}
			</if>
			<if test="sellerId != null">
				and t1.seller_id = #{sellerId,jdbcType=BIGINT}
			</if>
			<if test="buyerName != null and buyerName!=''">
				and t.account_name like '%${buyerName}%'
			</if>
			<if test="sellerName != null and sellerName!=''">
				and t1.seller_name like '%${sellerName}%'
			</if>
			<if test="ownerName != null and ownerName != '' ">
				and t.owner_name like '%${ownerName}%'
			</if>
			
			<if test="closeStatus != null and closeStatus == true">
				and t.status = '10' 
			</if>
			
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
	        <if test="excludeIds != null and excludeIds != ''">
				and t.id not in (${excludeIds})
			</if>
		</where>
			group by t.id, t1.seller_id		
	)  o   order by o.orderCreated  
  	</select>
  <select id="selectOrdersByBuyerParamsForUploadAdd" resultMap="OrderInfoForCertificateDto" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
    select 
	   		o.orderId,
			o.orderCode,
			o.buyerId,
			o.buyerName,
			o.ownerId,
			o.ownerName,
			o.orderCreated,
			o.pay_status,
			o.secondary_time,
			o.sellerId,
			o.sellerName,
			o.totalQuantity,
			o.totalWeight,
			o.totalAmount,
			o.actualPickTotalWeight,
			o.actualPickTotalQuantity,
			o.actualPickTotalAmount
from (select
    t.id orderId,
    t.CODE orderCode,
    t.account_id buyerId,
    t.account_name buyerName,
    t.owner_id ownerId,
    t.owner_name ownerName,
    DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
    t.status as pay_status,
	t.secondary_time,
    t1.seller_id sellerId,
    t1.seller_name sellerName,
    sum(t1.quantity) totalQuantity,
    sum(t1.weight)  as totalWeight, 
	sum(t1.weight * t1.deal_price)  as totalAmount,
    SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
    sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
    SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount
    from busi_consign_order as t
    left join busi_consign_order_items as t1 on t.id = t1.order_id
    left join busi_consign_order_credential t2 on (t.batch_buyer_credential_code = t2.credential_code or t.buyer_credential_code = t2.credential_code)
    <where>
      DATE_FORMAT(t.created,'%Y-%m-%d')>='2016-04-01'
      <!-- 批量打印字段不能有值  -->
      and (t.batch_buyer_credential_code is null or trim(t.batch_buyer_credential_code) = '')
      <!-- 未打印或者凭证未审核通过 -->
      and (t2.id is null or (t2.status!='APPROVED')
      <if test="includeIds != null and includeIds != ''">
        or t.id in (${includeIds})
      </if>
      )
      <!-- 权限控制 -->
      <if test="userIds != null">
		  AND t.owner_id IN
		  <foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
		  </foreach>
	  </if>

      <if test="buyerId != null">
        and t.account_id = #{buyerId,jdbcType=BIGINT}
      </if>
      <if test="sellerId != null">
        and t1.seller_id = #{sellerId,jdbcType=BIGINT}
      </if>
      <if test="buyerName != null and buyerName!=''">
        and t.account_name like '%${buyerName}%'
      </if>
      <if test="sellerName != null and sellerName!=''">
        and t1.seller_name like '%${sellerName}%'
      </if>
      <if test="ownerName != null and ownerName != '' ">
        and t.owner_name like '%${ownerName}%'
      </if>

      <if test="closeStatus != null and closeStatus == true">
        and t.status not in('-1', '-2', '-3', '-4', '-7', '-8')
      </if>

      <if test="startTime != null and startTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
      </if>
      <if test="endTime != null and endTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
      </if>
      <if test="excludeIds != null and excludeIds != ''">
        and t.id not in (${excludeIds})
      </if>
    </where>
    group by t.id, t.account_id
    union all
    select
    t.id orderId,
    t.CODE orderCode,
    t.account_id buyerId,
    t.account_name buyerName,
    t.owner_id ownerId,
    t.owner_name ownerName,
    DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
    t.status as pay_status,
	t.secondary_time,
    t1.seller_id sellerId,
    t1.seller_name sellerName,
    sum(t1.quantity) totalQuantity,
    sum(t1.weight)  as totalWeight, 
	sum(t1.weight * t1.deal_price)  as totalAmount,
    SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
    sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
    SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount
    from busi_consign_order as t
    left join busi_consign_order_items as t1 on t.id = t1.order_id
    left join busi_consign_order_credential t2 on (t.batch_buyer_credential_code = t2.credential_code or t.buyer_credential_code = t2.credential_code)
    <where>
      <![CDATA[ DATE_FORMAT(t.created,'%Y-%m-%d') < '2016-04-01']]>
	  and t.status > 6
      <!-- 批量打印字段不能有值  -->
      and (t.batch_buyer_credential_code is null or trim(t.batch_buyer_credential_code) = '')
      <!-- 未打印或者凭证未审核通过 -->
      and (t2.id is null or (t2.status!='APPROVED')
      <if test="includeIds != null and includeIds != ''">
        or t.id in (${includeIds})
      </if>
      )
      <!-- 权限控制 -->
      <if test="userIds != null">
		  AND t.owner_id IN
		  <foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
		  </foreach>
	  </if>

      <if test="buyerId != null">
        and t.account_id = #{buyerId,jdbcType=BIGINT}
      </if>
      <if test="sellerId != null">
        and t1.seller_id = #{sellerId,jdbcType=BIGINT}
      </if>
      <if test="buyerName != null and buyerName!=''">
        and t.account_name like '%${buyerName}%'
      </if>
      <if test="sellerName != null and sellerName!=''">
        and t1.seller_name like '%${sellerName}%'
      </if>
      <if test="ownerName != null and ownerName != '' ">
        and t.owner_name like '%${ownerName}%'
      </if>

      <if test="closeStatus != null and closeStatus == true">
        and t.status not in('-1', '-2', '-3', '-4', '-7', '-8','10')
      </if>

      <if test="startTime != null and startTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
      </if>
      <if test="endTime != null and endTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
      </if>
      <if test="excludeIds != null and excludeIds != ''">
        and t.id not in (${excludeIds})
      </if>
    </where>
    group by t.id, t.account_id
    union 
    select
    t.id orderId,
    t.CODE orderCode,
    t.account_id buyerId,
    t.account_name buyerName,
    t.owner_id ownerId,
    t.owner_name ownerName,
    DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') orderCreated,
    t.status as pay_status,
	t.secondary_time,
    t1.seller_id sellerId,
    t1.seller_name sellerName,
    sum(t1.quantity) totalQuantity,
    sum(t1.weight)  as totalWeight, 
	sum(t1.weight * t1.deal_price)  as totalAmount,
    SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) actualPickTotalWeight,
    sum(t1.actual_pick_quantity_server) actualPickTotalQuantity,
    SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount
    from busi_consign_order as t
    left join busi_consign_order_items as t1 on t.id = t1.order_id
    left join busi_consign_order_credential t2 on (t.batch_buyer_credential_code = t2.credential_code or t.buyer_credential_code = t2.credential_code)
    left join busi_consign_order_audit_trail t3 on t3.order_id = t.id and t3.set_to_status='10'
    <where>
      DATE_FORMAT(t3.created,'%Y-%m-%d')>='2016-04-25'
      <!-- 批量打印字段不能有值  -->
      and (t.batch_buyer_credential_code is null or trim(t.batch_buyer_credential_code) = '')
      <!-- 未打印或者凭证未审核通过 -->
      and (t2.id is null or (t2.status!='APPROVED')
      <if test="includeIds != null and includeIds != ''">
        or t.id in (${includeIds})
      </if>
      )
      <!-- 权限控制 -->
      <if test="userIds != null">
		  AND t.owner_id IN
		  <foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
		  </foreach>
	  </if>

      <if test="buyerId != null">
        and t.account_id = #{buyerId,jdbcType=BIGINT}
      </if>
      <if test="sellerId != null">
        and t1.seller_id = #{sellerId,jdbcType=BIGINT}
      </if>
      <if test="buyerName != null and buyerName!=''">
        and t.account_name like '%${buyerName}%'
      </if>
      <if test="sellerName != null and sellerName!=''">
        and t1.seller_name like '%${sellerName}%'
      </if>
      <if test="ownerName != null and ownerName != '' ">
        and t.owner_name like '%${ownerName}%'
      </if>

      <if test="closeStatus != null and closeStatus == true">
        and t.status = '10'
      </if>

      <if test="startTime != null and startTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
      </if>
      <if test="endTime != null and endTime != '' ">
        <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
      </if>
      <if test="excludeIds != null and excludeIds != ''">
        and t.id not in (${excludeIds})
      </if>
    </where>
    group by t.id, t.account_id
   ) o order by o.orderCreated 
  </select>
	
    <!-- 根据凭证号列表查询出凭证信息集 -->
    <select id="selectByCertList" resultMap="BaseResultMap"  >
      SELECT
        <include refid="Base_Column_List" />
      FROM busi_consign_order_credential
      WHERE credential_code IN 
        <foreach collection="list" item="code" open="(" separator="," close=")">
          #{code}
        </foreach>
    </select>
 
	<select id="searchBatchUploading" resultMap="BatchUploadingMap"
		parameterType="com.prcsteel.platform.order.model.query.BatchUploadingQuery">
 select * from (
			(
			select  id, '-'  as credential_code , '-'  as type, '-'  as name,  
			        '-'  as status, '-'  as submit_date,
			        '-'  as credential_num,'PENDING_REVISION'  as upload_status, 
					'-'  as code , 
					'-'  as account_name, 
					'-'  as seller_name,										
					'-'  as batch_credential_code,
					'-' as pages,file_url
					from busi_consign_order_attachment  
					where type='cert' and consign_order_id = 0
			)  
			UNION ALL 
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date,t.credential_num,t.upload_status, 
					(case when count(distinct t1.id)>1 then '-' else t1.code end) code , 
					t1.account_name, 
					(case when count(distinct t1.id)>1 then '-' else t2.seller_name end) as seller_name,										
					t1.batch_buyer_credential_code as batch_credential_code,count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
					left join busi_consign_order as t1 on (t.credential_code = t1.buyer_credential_code or t.credential_code = t1.batch_buyer_credential_code)
					left join busi_consign_order_items as t2 on t2.order_id = t1.id
					INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where t.type='buyer' and t.status='PENDING_SUBMIT'
             <if test="userIds != null">
               AND t1.owner_id IN
               <foreach collection="userIds" item="userId" open="(" separator="," close=")">
              #{userId}
             </foreach>
      </if>
      group by t.credential_code
			)
			UNION ALL
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, t.submit_date,t.credential_num,t.upload_status , 
					(case when count(distinct t2.id)>1 then '-' else t2.code end) as code , 
					(case when count(distinct t2.id)>1 then '-' else t2.account_name end) as account_name,
					t1.seller_name as seller_name, 
					t1.batch_seller_credential_code as batch_credential_code,count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
					left join busi_consign_order_items as t1 on (t.credential_code = t1.seller_credential_code or t.credential_code = t1.batch_seller_credential_code)
					left join busi_consign_order as t2 on t2.id = t1.order_id
					INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where  t.type='seller'	 and t.status='PENDING_SUBMIT'
              <if test="userIds != null">
                AND t2.owner_id IN
               <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                #{userId}
              </foreach>
              </if>
				group by t.credential_code				
			)
		) as f 
		 <where>
		 	<if test="credentialCode != null and credentialCode !=''">
			 credential_code LIKE '%' #{credentialCode,jdbcType=VARCHAR} '%'
		    </if>
		    <if test="code != null and code !=''">
			AND code LIKE '%' #{code,jdbcType=VARCHAR} '%'
		   </if>
	     	<if test=" type!= null and type !=''">
			AND type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="buyerName != null and buyerName !=''">
		    AND account_name LIKE '%' #{buyerName,jdbcType=VARCHAR} '%'
			</if>
			<if test="sellerName != null and sellerName !=''">
			AND  seller_name LIKE '%' #{sellerName,jdbcType=VARCHAR} '%'
			</if>
           <if test="status != null and status!=''and status !='ALREADY_COLLECT'">
             AND upload_status = #{status,jdbcType=VARCHAR}
           </if>
           <if test="status != null and status =='ALREADY_COLLECT'">
             AND (upload_status = #{status,jdbcType=VARCHAR} OR upload_status ='OLD_DATA')
           </if>

		</where>
		order by f.submit_date 
		 limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
	</select>
		<select id="countBatchUploading" resultMap="BatchUploadingMap"
		parameterType="com.prcsteel.platform.order.model.query.BatchUploadingQuery">
	 select * from (
			(
			select  id, '-'  as credential_code , '-'  as type, '-'  as name,  
			        '-'  as status, '-'  as submit_date,
			        '-'  as credential_num,'PENDING_REVISION'  as upload_status, 
					'-'  as code , 
					'-'  as account_name, 
					'-'  as seller_name,										
					'-'  as batch_credential_code,
					'-' as pages,file_url
					from busi_consign_order_attachment  
					where type='cert' and consign_order_id = 0
			)  
			UNION ALL 
			(
				select t.id, t.credential_code , t.type, t.name,  t.status,DATE_FORMAT(t.submit_date,'%Y-%m-%d %H:%i:%s') submit_date,t.credential_num,t.upload_status, 
					(case when count(distinct t1.id)>1 then '-' else t1.code end) code , 
					t1.account_name, 
					(case when count(distinct t1.id)>1 then '-' else t2.seller_name end) as seller_name,										
					t1.batch_buyer_credential_code as batch_credential_code,count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
					left join busi_consign_order as t1 on (t.credential_code = t1.buyer_credential_code or t.credential_code = t1.batch_buyer_credential_code)
					left join busi_consign_order_items as t2 on t2.order_id = t1.id
					INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where t.type='buyer' and  t.status='PENDING_SUBMIT'
                    <if test="userIds != null">
                    AND t1.owner_id IN
                    <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                   #{userId}
                  </foreach>
                  </if>
					group by t.credential_code				
			)
			UNION ALL
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, DATE_FORMAT(t.submit_date,'%Y-%m-%d %H:%i:%s') submit_date ,t.credential_num,t.upload_status , 
					(case when count(distinct t2.id)>1 then '-' else t2.code end) as code , 
					(case when count(distinct t2.id)>1 then '-' else t2.account_name end) as account_name,
					t1.seller_name as seller_name, 
					t1.batch_seller_credential_code as batch_credential_code,count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
					left join busi_consign_order_items as t1 on (t.credential_code = t1.seller_credential_code or t.credential_code = t1.batch_seller_credential_code)
					left join busi_consign_order as t2 on t2.id = t1.order_id
					INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where  t.type='seller'	 and  t.status='PENDING_SUBMIT'
                  <if test="userIds != null">
                   AND t2.owner_id IN
                    <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                   #{userId}
                  </foreach>
                   </if>
				group by t.credential_code				
			)
		) as f 
		 <where>
		 	<if test="credentialCode != null and credentialCode !=''">
			 credential_code LIKE '%' #{credentialCode,jdbcType=VARCHAR} '%'
		    </if>
		    <if test="code != null and code !=''">
			AND code LIKE '%' #{code,jdbcType=VARCHAR} '%'
		   </if>
	     	<if test=" type!= null and type !=''">
			AND type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="buyerName != null and buyerName !=''">
		    AND account_name LIKE '%' #{buyerName,jdbcType=VARCHAR} '%'
			</if>
			<if test="sellerName != null and sellerName !=''">
			AND  seller_name LIKE '%' #{sellerName,jdbcType=VARCHAR} '%'
			</if>
           <if test="status != null and status!=''and status !='ALREADY_COLLECT'">
             AND upload_status = #{status,jdbcType=VARCHAR}
           </if>
           <if test="status != null and status =='ALREADY_COLLECT'">
             AND (upload_status = #{status,jdbcType=VARCHAR} OR upload_status ='OLD_DATA')
           </if>

         </where>
		order by f.submit_date 
	</select>
		<select id="searchBatchUploadingById" resultMap="BatchUploadingMap"
		parameterType="java.lang.Long">
	 select * from (
			(
			select  id, '-'  as credential_code , '-'  as type, '-'  as name,  
			        '-'  as status, '-'  as submit_date,
			        '-'  as credential_num,'PENDING_REVISION'  as upload_status, 
					'-' as pages,file_url
					from busi_consign_order_attachment
					where type='cert' and consign_order_id = 0
			)
			UNION ALL
			(
				select t.id, t.credential_code , t.type, t.name,  t.status,DATE_FORMAT(t.submit_date,'%Y-%m-%d %H:%i:%s') submit_date,t.credential_num,t.upload_status,
					count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
			  	INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where t.type='buyer'  and t.status='PENDING_SUBMIT'
					group by t.credential_code
			)
			UNION ALL
			(
				select t.id, t.credential_code , t.type, t.name,  t.status, DATE_FORMAT(t.submit_date,'%Y-%m-%d %H:%i:%s') submit_date ,t.credential_num,t.upload_status ,
					count(distinct m.id) as pages,m.file_url
					from busi_consign_order_credential as t
					INNER JOIN busi_consign_order_attachment m on m.consign_order_id = t.id and m.type='cert'
					where  t.type='seller'	 and t.status='PENDING_SUBMIT'
				group by t.credential_code
			)
		) as f
		 where id=#{id,jdbcType=BIGINT}
		order by f.submit_date 
	</select>
</mapper>
