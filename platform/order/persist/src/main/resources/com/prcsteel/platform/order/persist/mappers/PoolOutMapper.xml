<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prcsteel.platform.order.persist.dao.PoolOutDao">
	<resultMap id="BaseResultMap" type="com.prcsteel.platform.order.model.model.PoolOut">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="org_id" property="orgId" jdbcType="BIGINT" />
		<result column="org_name" property="orgName" jdbcType="VARCHAR" />
		<result column="owner_id" property="ownerId" jdbcType="BIGINT" />
		<result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
		<result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
		<result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
		<result column="department_id" property="departmentId" jdbcType="BIGINT"/>
		<result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
		<result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="total_weight" property="totalWeight" jdbcType="DECIMAL" />
		<result column="total_sent_amount" property="totalSentAmount"
			jdbcType="DECIMAL" />
		<result column="total_sent_weight" property="totalSentWeight"
			jdbcType="DECIMAL" />
		<result column="created" property="created" jdbcType="TIMESTAMP" />
		<result column="created_by" property="createdBy" jdbcType="VARCHAR" />
		<result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
		<result column="last_updated_by" property="lastUpdatedBy"
			jdbcType="VARCHAR" />
		<result column="modification_number" property="modificationNumber"
			jdbcType="INTEGER" />
		<result column="row_id" property="rowId" jdbcType="VARCHAR" />
		<result column="parent_row_id" property="parentRowId" jdbcType="VARCHAR" />
		<result column="ext1" property="ext1" jdbcType="VARCHAR" />
		<result column="ext2" property="ext2" jdbcType="VARCHAR" />
		<result column="ext3" property="ext3" jdbcType="VARCHAR" />
		<result column="ext4" property="ext4" jdbcType="INTEGER" />
		<result column="ext5" property="ext5" jdbcType="INTEGER" />
		<result column="ext6" property="ext6" jdbcType="INTEGER" />
		<result column="ext7" property="ext7" jdbcType="TIMESTAMP" />
		<result column="ext8" property="ext8" jdbcType="BIGINT" />
	</resultMap>
	<resultMap id="PoolOutDto" type="com.prcsteel.platform.order.model.dto.PoolOutDto"
		extends="BaseResultMap">
		<id column="surplus_amount" property="surplusAmount" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		id, org_id, org_name, owner_id, owner_name, buyer_id, buyer_name,
		department_id, department_name,total_amount, total_weight,
		total_sent_amount, total_sent_weight, created, created_by, last_updated,
		last_updated_by,
		modification_number, row_id, parent_row_id, ext1, ext2, ext3, ext4, ext5, ext6, ext7,
		ext8
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from inv_pool_out
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from inv_pool_out
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.prcsteel.platform.order.model.model.PoolOut">
		insert into inv_pool_out (id, org_id, org_name,
		owner_id, owner_name, buyer_id,
		buyer_name, department_id, department_name,total_amount, total_weight,
		total_sent_amount, total_sent_weight, created,
		created_by, last_updated, last_updated_by,
		modification_number, row_id, parent_row_id,
		ext1, ext2, ext3, ext4,
		ext5, ext6, ext7,
		ext8)
		values (#{id,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT},
		#{orgName,jdbcType=VARCHAR},
		#{ownerId,jdbcType=BIGINT}, #{ownerName,jdbcType=VARCHAR}, #{buyerId,jdbcType=BIGINT},
		#{buyerName,jdbcType=VARCHAR},#{departmentId}, #{departmentName}, #{totalAmount,jdbcType=DECIMAL},
		#{totalWeight,jdbcType=DECIMAL},
		#{totalSentAmount,jdbcType=DECIMAL}, #{totalSentWeight,jdbcType=DECIMAL}, #{created,jdbcType=TIMESTAMP},
		#{createdBy,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP},
		#{lastUpdatedBy,jdbcType=VARCHAR},
		#{modificationNumber,jdbcType=INTEGER}, #{rowId,jdbcType=VARCHAR},
		#{parentRowId,jdbcType=VARCHAR},
		#{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, #{ext3,jdbcType=VARCHAR},
		#{ext4,jdbcType=INTEGER},
		#{ext5,jdbcType=INTEGER}, #{ext6,jdbcType=INTEGER}, #{ext7,jdbcType=TIMESTAMP},
		#{ext8,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.prcsteel.platform.order.model.model.PoolOut">
		insert into inv_pool_out
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
			<if test="orgName != null">
				org_name,
			</if>
			<if test="ownerId != null">
				owner_id,
			</if>
			<if test="ownerName != null">
				owner_name,
			</if>
			<if test="buyerId != null">
				buyer_id,
			</if>
			<if test="buyerName != null">
				buyer_name,
			</if>
			<if test="departmentId != null">
				department_id,
			</if>
			<if test="departmentName != null">
				department_name,
			</if>
			<if test="totalAmount != null">
				total_amount,
			</if>
			<if test="totalWeight != null">
				total_weight,
			</if>
			<if test="totalSentAmount != null">
				total_sent_amount,
			</if>
			<if test="totalSentWeight != null">
				total_sent_weight,
			</if>
			<if test="created != null">
				created,
			</if>
			<if test="createdBy != null">
				created_by,
			</if>
			<if test="lastUpdated != null">
				last_updated,
			</if>
			<if test="lastUpdatedBy != null">
				last_updated_by,
			</if>
			<if test="modificationNumber != null">
				modification_number,
			</if>
			<if test="rowId != null">
				row_id,
			</if>
			<if test="parentRowId != null">
				parent_row_id,
			</if>
			<if test="ext1 != null">
				ext1,
			</if>
			<if test="ext2 != null">
				ext2,
			</if>
			<if test="ext3 != null">
				ext3,
			</if>
			<if test="ext4 != null">
				ext4,
			</if>
			<if test="ext5 != null">
				ext5,
			</if>
			<if test="ext6 != null">
				ext6,
			</if>
			<if test="ext7 != null">
				ext7,
			</if>
			<if test="ext8 != null">
				ext8,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=BIGINT},
			</if>
			<if test="orgName != null">
				#{orgName,jdbcType=VARCHAR},
			</if>
			<if test="ownerId != null">
				#{ownerId,jdbcType=BIGINT},
			</if>
			<if test="ownerName != null">
				#{ownerName,jdbcType=VARCHAR},
			</if>
			<if test="buyerId != null">
				#{buyerId,jdbcType=BIGINT},
			</if>
			<if test="buyerName != null">
				#{buyerName,jdbcType=VARCHAR},
			</if>
			<if test="departmentId != null">
				#{departmentId},
			</if>
			<if test="departmentName != null">
				#{departmentName},
			</if>
			<if test="totalAmount != null">
				#{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="totalWeight != null">
				#{totalWeight,jdbcType=DECIMAL},
			</if>
			<if test="totalSentAmount != null">
				#{totalSentAmount,jdbcType=DECIMAL},
			</if>
			<if test="totalSentWeight != null">
				#{totalSentWeight,jdbcType=DECIMAL},
			</if>
			<if test="created != null">
				#{created,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdated != null">
				#{lastUpdated,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdatedBy != null">
				#{lastUpdatedBy,jdbcType=VARCHAR},
			</if>
			<if test="modificationNumber != null">
				#{modificationNumber,jdbcType=INTEGER},
			</if>
			<if test="rowId != null">
				#{rowId,jdbcType=VARCHAR},
			</if>
			<if test="parentRowId != null">
				#{parentRowId,jdbcType=VARCHAR},
			</if>
			<if test="ext1 != null">
				#{ext1,jdbcType=VARCHAR},
			</if>
			<if test="ext2 != null">
				#{ext2,jdbcType=VARCHAR},
			</if>
			<if test="ext3 != null">
				#{ext3,jdbcType=VARCHAR},
			</if>
			<if test="ext4 != null">
				#{ext4,jdbcType=INTEGER},
			</if>
			<if test="ext5 != null">
				#{ext5,jdbcType=INTEGER},
			</if>
			<if test="ext6 != null">
				#{ext6,jdbcType=INTEGER},
			</if>
			<if test="ext7 != null">
				#{ext7,jdbcType=TIMESTAMP},
			</if>
			<if test="ext8 != null">
				#{ext8,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.prcsteel.platform.order.model.model.PoolOut">
		update inv_pool_out
		<set>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=BIGINT},
			</if>
			<if test="orgName != null">
				org_name = #{orgName,jdbcType=VARCHAR},
			</if>
			<if test="ownerId != null">
				owner_id = #{ownerId,jdbcType=BIGINT},
			</if>
			<if test="ownerName != null">
				owner_name = #{ownerName,jdbcType=VARCHAR},
			</if>
			<if test="buyerId != null">
				buyer_id = #{buyerId,jdbcType=BIGINT},
			</if>
			<if test="buyerName != null">
				buyer_name = #{buyerName,jdbcType=VARCHAR},
			</if>
			<if test="departmentId != null">
				department_id = #{departmentId},
			</if>
			<if test="departmentName != null">
				department_name = #{departmentName},
			</if>
			<if test="totalAmount != null">
				total_amount = #{totalAmount,jdbcType=DECIMAL},
			</if>
			<if test="totalWeight != null">
				total_weight = #{totalWeight,jdbcType=DECIMAL},
			</if>
			<if test="totalSentAmount != null">
				total_sent_amount = #{totalSentAmount,jdbcType=DECIMAL},
			</if>
			<if test="totalSentWeight != null">
				total_sent_weight = #{totalSentWeight,jdbcType=DECIMAL},
			</if>
			<if test="created != null">
				created = #{created,jdbcType=TIMESTAMP},
			</if>
			<if test="createdBy != null">
				created_by = #{createdBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdated != null">
				last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdatedBy != null">
				last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
			</if>
			<if test="modificationNumber != null">
				modification_number = #{modificationNumber,jdbcType=INTEGER},
			</if>
			<if test="rowId != null">
				row_id = #{rowId,jdbcType=VARCHAR},
			</if>
			<if test="parentRowId != null">
				parent_row_id = #{parentRowId,jdbcType=VARCHAR},
			</if>
			<if test="ext1 != null">
				ext1 = #{ext1,jdbcType=VARCHAR},
			</if>
			<if test="ext2 != null">
				ext2 = #{ext2,jdbcType=VARCHAR},
			</if>
			<if test="ext3 != null">
				ext3 = #{ext3,jdbcType=VARCHAR},
			</if>
			<if test="ext4 != null">
				ext4 = #{ext4,jdbcType=INTEGER},
			</if>
			<if test="ext5 != null">
				ext5 = #{ext5,jdbcType=INTEGER},
			</if>
			<if test="ext6 != null">
				ext6 = #{ext6,jdbcType=INTEGER},
			</if>
			<if test="ext7 != null">
				ext7 = #{ext7,jdbcType=TIMESTAMP},
			</if>
			<if test="ext8 != null">
				ext8 = #{ext8,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.prcsteel.platform.order.model.model.PoolOut">
		update inv_pool_out
		set org_id = #{orgId,jdbcType=BIGINT},
		org_name = #{orgName,jdbcType=VARCHAR},
		owner_id = #{ownerId,jdbcType=BIGINT},
		owner_name = #{ownerName,jdbcType=VARCHAR},
		buyer_id = #{buyerId,jdbcType=BIGINT},
		buyer_name = #{buyerName,jdbcType=VARCHAR},
		department_id = #{departmentId},
        department_name = #{departmentName},
		total_amount = #{totalAmount,jdbcType=DECIMAL},
		total_weight = #{totalWeight,jdbcType=DECIMAL},
		total_sent_amount = #{totalSentAmount,jdbcType=DECIMAL},
		total_sent_weight = #{totalSentWeight,jdbcType=DECIMAL},
		created = #{created,jdbcType=TIMESTAMP},
		created_by = #{createdBy,jdbcType=VARCHAR},
		last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
		last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
		modification_number = #{modificationNumber,jdbcType=INTEGER},
		row_id = #{rowId,jdbcType=VARCHAR},
		parent_row_id = #{parentRowId,jdbcType=VARCHAR},
		ext1 = #{ext1,jdbcType=VARCHAR},
		ext2 = #{ext2,jdbcType=VARCHAR},
		ext3 = #{ext3,jdbcType=VARCHAR},
		ext4 = #{ext4,jdbcType=INTEGER},
		ext5 = #{ext5,jdbcType=INTEGER},
		ext6 = #{ext6,jdbcType=INTEGER},
		ext7 = #{ext7,jdbcType=TIMESTAMP},
		ext8 = #{ext8,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<resultMap id="InvoiceApplicationDtoResultMap"
		type="com.prcsteel.platform.order.model.dto.InvoiceApplicationDto">
		<result column="org_id" property="orgId" jdbcType="BIGINT" />
		<result column="org_name" property="orgName" jdbcType="VARCHAR" />
		<result column="owner_id" property="ownerId" jdbcType="BIGINT" />
		<result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
		<result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
		<result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
		<result column="balance_second_settlement" property="balanceSecondSettlement"
			jdbcType="DECIMAL" />
		<result column="account_status" property="accountStatus"
			jdbcType="INTEGER" />
		<result column="invoice_data_status" property="invoiceDataStatus"
			jdbcType="VARCHAR" />
		<result column="department_id" property="departmentId" jdbcType="BIGINT" />
		<result column="department_name" property="departmentName" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="queryInvoiceApplicationDtoByOrgId" resultMap="InvoiceApplicationDtoResultMap"
		parameterType="map">
		SELECT 
			ipo.org_id,ipo.org_name, ipo.owner_id, ipo.owner_name,ipo.buyer_id,
			case when (select count(*) from cust_account ca where ca.parent_id=ipo.buyer_id)>1 then CONCAT(ipo.buyer_name,'【',ipo.department_name,'】') else ipo.buyer_name end buyer_name,
			ipo.department_id,ipo.department_name,
			ca.balance_second_settlement,ca.status AS account_status,cae.invoice_data_status
		FROM inv_pool_out ipo
		LEFT JOIN cust_account ca ON ca.id = ipo.department_id
		LEFT JOIN cust_account_ext cae on cae.cust_account_id = ca.parent_id
		WHERE ipo.total_amount <![CDATA[ > ]]> ipo.total_sent_amount
		<if test=" orgId != null ">
			AND ipo.org_id = #{orgId,jdbcType=BIGINT}
		</if>
		GROUP BY ipo.org_id, ipo.owner_id, ipo.department_id
		ORDER BY ipo.owner_id, ipo.department_id ASC
	</select>
	
	<select id="queryInvoiceApplicationDtoByApplyId" resultMap="InvoiceApplicationDtoResultMap"
		parameterType="long">
		SELECT 
			d.org_id,d.org_name, d.owner_id, d.owner_name,d.buyer_id,
			case when (select count(*) from cust_account ca where ca.parent_id=d.buyer_id)>1 then CONCAT(d.buyer_name,'【',d.department_name,'】') else d.buyer_name end buyer_name,
			d.department_id,d.department_name,
			ca.balance_second_settlement,ca.status AS account_status,cae.invoice_data_status
		FROM inv_invoice_out_apply_detail d
		LEFT JOIN cust_account ca ON ca.id = d.department_id
		LEFT JOIN cust_account_ext cae on cae.cust_account_id = ca.parent_id
		WHERE d.invoice_out_apply_id = #{applyId}
		AND d.is_deleted = 0
		AND d.apply_amount <![CDATA[ > ]]> 0
		GROUP BY d.org_id, d.owner_id, d.department_id
		ORDER BY d.owner_id, d.department_id ASC
	</select>

	<select id="queryByBuyer" resultMap="BaseResultMap"
		parameterType="map">
		select id, org_id, org_name, owner_id, owner_name,buyer_id,
		buyer_name, department_id, department_name, total_amount, total_weight,total_sent_amount,
		total_sent_weight,
		created, created_by, last_updated, last_updated_by,modification_number
		from inv_pool_out
		<where>
			<if test="checkAmount == null">
				total_amount>total_sent_amount
			</if>
			<if test="ownerId != null">
				and owner_id=#{ownerId,jdbcType=BIGINT}
			</if>
			<if test="buyerId != null">
				and buyer_id=#{buyerId,jdbcType=BIGINT}
			</if>
			<if test="departmentId != null ">
				and department_id=#{departmentId,jdbcType=BIGINT}
			</if>
		</where>
		order by created desc
		<if test="start!=null and length !=null">
			limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
		</if>
	</select>
	<select id="queryByOrgId" resultMap="PoolOutDto">
		select id, org_id, org_name, owner_id, owner_name,buyer_id,
		buyer_name, total_amount, total_weight,total_sent_amount, total_sent_weight,
		(total_amount - total_sent_amount) as surplus_amount, created,
		created_by, last_updated, last_updated_by,modification_number
		from inv_pool_out
		where org_id = #{orgId,jdbcType=BIGINT}

	</select>

	<!--按服务中心查询总数 -->
	<select id="queryTotalByOrg" resultType="java.util.HashMap"
		parameterType="java.lang.Long">
		select sum(total_sent_amount) total_sent_amount,sum(total_sent_weight) total_sent_weight
		from inv_pool_out
		where org_id=#{orgId,jdbcType=BIGINT}
	</select>
	<select id="queryByBuyerId" resultMap="BaseResultMap"
			parameterType="map">
		select id, org_id, org_name, owner_id, owner_name,buyer_id,
		buyer_name, total_amount, total_weight,total_sent_amount,
		total_sent_weight,
		created, created_by, last_updated, last_updated_by,modification_number
		from inv_pool_out
		where buyer_id=#{buyerId,jdbcType=BIGINT}
	</select>

	<update id="modifyPoolOut" parameterType="com.prcsteel.platform.order.model.dto.PoolInAndOutModifier">
		UPDATE inv_pool_out
		SET
		total_amount = total_amount + #{changeAmount},
		total_weight = total_weight + #{changeWeight},
		last_updated = NOW(),
		last_updated_by = #{lastUpdatedBy},
		modification_number = modification_number +1
		WHERE
		id = #{id} and total_amount = #{originalAmount} and total_weight = #{originalWeight}
	</update>
	
	<select id="selectOwnerIdAndBuyerId" resultMap="BaseResultMap">
		SELECT *
		FROM inv_pool_out
		WHERE owner_id 
		IN
		<foreach item="ownerId" index="index" collection="ownerIds" open="(" separator="," close=")">
           	#{ownerId}
       	</foreach>
		AND department_id 
		IN
		<foreach item="departmentId" index="index" collection="departmentIds" open="(" separator="," close=")">
           	#{departmentId}
       	</foreach>
	</select>
	
	<update id="updatePoolOut" parameterType="com.prcsteel.platform.order.model.dto.PoolOutModifier">
		update inv_pool_out
		set
		total_amount = total_amount + #{changeAmount},
		total_weight = total_weight + #{changeWeight},
		last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
		last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR}
		where id = #{poolOutId}
	</update>

	<!-- 查询未开票完成的记录 -->
	<select id="queryInvoicingByDeptId" resultMap="BaseResultMap"
			parameterType="long">
		select id, org_id, org_name, owner_id, owner_name,buyer_id,
		buyer_name, total_amount, total_weight,total_sent_amount,
		total_sent_weight,
		created, created_by, last_updated, last_updated_by,modification_number
		from inv_pool_out
		<where>
			and (total_amount>total_sent_amount or total_weight > total_sent_weight)
			and buyer_id=#{deptId,jdbcType=BIGINT}
		</where>
	</select>
</mapper>
