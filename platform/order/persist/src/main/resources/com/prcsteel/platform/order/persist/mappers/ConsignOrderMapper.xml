<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prcsteel.platform.order.persist.dao.ConsignOrderDao">
    <resultMap id="BaseResultMap" type="com.prcsteel.platform.order.model.model.ConsignOrder">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="account_id" property="accountId" jdbcType="BIGINT"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="BIGINT"/>
        <result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
        <result column="owner_id" property="ownerId" jdbcType="BIGINT"/>
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR"/>
        <result column="contact_id" property="contactId" jdbcType="BIGINT"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="contact_tel" property="contactTel" jdbcType="VARCHAR"/>
        <result column="delivery_type" property="deliveryType" jdbcType="CHAR"/>
        <result column="delivery_start_date" property="deliveryStartDate" jdbcType="TIMESTAMP"/>
        <result column="delivery_end_date" property="deliveryEndDate" jdbcType="TIMESTAMP"/>
        <result column="fee_taker" property="feeTaker" jdbcType="VARCHAR"/>
        <result column="ship_fee" property="shipFee" jdbcType="DECIMAL"/>
        <result column="outbound_taker" property="outboundTaker" jdbcType="VARCHAR"/>
        <result column="outbound_fee" property="outboundFee" jdbcType="DECIMAL"/>
        <result column="total_quantity" property="totalQuantity" jdbcType="INTEGER"/>
        <result column="total_weight" property="totalWeight" jdbcType="DECIMAL"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="second_balance_takeout" property="secondBalanceTakeout" jdbcType="DECIMAL" />
        <result column="total_contract_releted_amount" property="totalContractReletedAmount" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="alter_status" property="alterStatus" jdbcType="VARCHAR"/>
        <result column="change_order_id" property="changeOrderId" jdbcType="INTEGER"/>
        <result column="origin_status" property="originStatus" jdbcType="VARCHAR"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="contract_code" property="contractCode" jdbcType="VARCHAR"/>
        <result column="pay_status" property="payStatus" jdbcType="VARCHAR"/>
        <result column="pickup_status" property="pickupStatus" jdbcType="INTEGER"/>
        <result column="fillup_status" property="fillupStatus" jdbcType="INTEGER"/>
        <result column="call_back_status" property="callBackStatus" jdbcType="VARCHAR"/>
        <result column="call_back_note" property="callBackNote" jdbcType="VARCHAR"/>
        <result column="consign_type" property="consignType" jdbcType="VARCHAR"/>
        <result column="operator_id" property="operatorId" jdbcType="BIGINT"/>
        <result column="operator_name" property="operatorName" jdbcType="VARCHAR"/>
        <result column="contract_address" property="contractAddress" jdbcType="VARCHAR"/>
        <result column="order_org_id" property="orderOrgId" jdbcType="BIGINT"/>
        <result column="order_org_name" property="orderOrgName" jdbcType="VARCHAR"/>
        <result column="buyer_org_id" property="buyerOrgId" jdbcType="BIGINT"/>
        <result column="buyer_org_name" property="buyerOrgName" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="VARCHAR"/>
        <result column="modification_number" property="modificationNumber" jdbcType="INTEGER"/>
        <result column="row_id" property="rowId" jdbcType="VARCHAR"/>
        <result column="parent_row_id" property="parentRowId" jdbcType="VARCHAR"/>
        <result column="payment_type" property="paymentType" jdbcType="VARCHAR"/>
        <result column="delay_num" property="delayNum" jdbcType="INTEGER"/>
        <result column="is_count_achievement" property="isCountAchievement" jdbcType="VARCHAR"/>
        <result column="owner_job_number" property="ownerJobNumber" jdbcType="VARCHAR"/>
        <result column="departmentCount" property="departmentCount" jdbcType="BIGINT"/>
        <result column="secondary_time" property="secondaryTime" jdbcType="TIMESTAMP"/>
        <result column="buyer_credential_code" property="buyerCredentialCode" jdbcType="VARCHAR"/>
        <result column="batch_buyer_credential_code" property="batchBuyerCredentialCode" jdbcType="VARCHAR"/>
        <result column="payment_sort" property="paymentSort" jdbcType="VARCHAR"/><!--新增付款类型 -->
        <result column="requirement_code" property="requirementCode" jdbcType="VARCHAR"/><!--需求单号 -->
        <result column="trans_area" property="transArea" jdbcType="VARCHAR"/><!--交货地 -->
        <result column="finance_order" property="financeOrder" jdbcType="INTEGER"/><!--是否为融资订单 -->
    </resultMap>
    <resultMap id="orderWithDetail" type="com.prcsteel.platform.order.model.dto.ConsignOrderWithDetailsDto"
               extends="BaseResultMap"></resultMap>
    <resultMap id="buyerTradeMap" type="com.prcsteel.platform.order.model.dto.BuyerTradeStatisticsDto">
        <result column="companyname" property="companyName" jdbcType="VARCHAR"/>
        <result column="contactname" property="contactName" jdbcType="VARCHAR"/>
        <result column="orderCount" property="orderCount" jdbcType="INTEGER"/>
        <result column="orderTempCount" property="tempOrderCount" jdbcType="INTEGER"/>
        <result column="contactOrderCount" property="contactOrderCount" jdbcType="INTEGER"></result>
        <result column="totalOrderCount" property="totalOrderCount" jdbcType="INTEGER"/>
        <result column="firstTradeTime" property="firstTradeTime" jdbcType="TIMESTAMP"/>
        <result column="lastestTradeTime" property="lastestTradeTime" jdbcType="TIMESTAMP"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, code, account_id,department_id,department_name, account_name, owner_id, owner_name, contact_id, contact_name,
        contact_tel, delivery_type, delivery_start_date, delivery_end_date, fee_taker, ship_fee, outbound_taker,outbound_fee,
        total_quantity, total_weight, total_amount,second_balance_takeout,total_contract_releted_amount, status, alter_status,change_order_id, origin_status, note, contract_code, pay_status,
        pickup_status, fillup_status, call_back_status, call_back_note, consign_type, operator_id, operator_name, contract_address, created, created_by, last_updated,
        order_org_id, order_org_name, buyer_org_id, buyer_org_name,
        last_updated_by, modification_number, row_id, parent_row_id,payment_type,payment_sort,requirement_code,trans_area,finance_order,delay_num,is_count_achievement,owner_job_number,secondary_time,buyer_credential_code,batch_buyer_credential_code
    </sql>
    <resultMap id="QueryResultMap" type="com.prcsteel.platform.order.model.dto.ConsignOrderDto">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="account_id" property="accountId" jdbcType="BIGINT"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="owner_id" property="ownerId" jdbcType="BIGINT"/>
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR"/>
        <result column="total_quantity" property="totalQuantity" jdbcType="INTEGER"/>
        <result column="total_weight" property="totalWeight" jdbcType="DECIMAL"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="pickup_total_weight" property="pickupTotalWeight" jdbcType="DECIMAL"/>
        <result column="pickup_total_amount" property="pickupTotalAmount" jdbcType="DECIMAL"/>
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR"/>
        <result column="createdStr" property="createdStr" jdbcType="VARCHAR"/>
        <result column="pay_status" property="payStatus" jdbcType="VARCHAR"/>
        <result column="pickup_status" property="pickupStatus" jdbcType="INTEGER"/>
        <result column="fillup_status" property="fillupStatus" jdbcType="INTEGER"/>
        <result column="consign_type" property="consignType" jdbcType="VARCHAR"/>
        <result column="payApprovedTime" property="payApprovedTime" jdbcType="VARCHAR"/>
        <result column="change_status" property="changeStatus" jdbcType="VARCHAR"/>
        <result column="print_times" property="printTimes" jdbcType="VARCHAR"/>
        <result column="order_org_name" property="orderOrgName" jdbcType="VARCHAR"/>
        <result column="alter_status" property="alterStatus" jdbcType="VARCHAR"/>
        <result column="change_order_id" property="changeOrderId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="OrderContactMap" type="com.prcsteel.platform.order.model.dto.OrderContactDto">
        <result column="account_id" property="accountId" jdbcType="BIGINT"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="contact_id" property="contactId" jdbcType="BIGINT"/>
        <result column="contact_name" property="contactName" jdbcType="VARCHAR"/>
        <result column="contact_tel" property="contactTel" jdbcType="VARCHAR"/>
        <result column="rebate_amount" property="rebateAmount" jdbcType="DECIMAL"/>
    </resultMap>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from busi_consign_order
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.prcsteel.platform.order.model.model.ConsignOrder">
        insert into busi_consign_order (id, code, account_id,
        account_name, department_id,department_name,owner_id, owner_name,
        contact_id, contact_name, contact_tel,
        delivery_type, delivery_start_date, delivery_end_date,
        fee_taker, ship_fee, outbound_taker, outbound_fee, total_quantity,
        total_weight, total_amount, second_balance_takeout,total_contract_releted_amount,status,alter_status,change_order_id,
        note, contract_code, pay_status,
        pickup_status, fillup_status,consign_type, operator_id,
        operator_name, contract_address,
        order_org_id, order_org_name, buyer_org_id, buyer_org_name,
        created, created_by,
        call_back_status,call_back_note,
        last_updated, last_updated_by, modification_number,
        row_id, parent_row_id,payment_type,payment_sort,requirement_code,trans_area,finance_order,delay_num,is_count_achievement,owner_job_number)
        values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{accountId,jdbcType=BIGINT},
        #{accountName,jdbcType=VARCHAR},#{departmentId,jdbcType=BIGINT},#{departmentName,jdbcType=VARCHAR}, #{ownerId,jdbcType=BIGINT}, #{ownerName,jdbcType=VARCHAR},
        #{contactId,jdbcType=BIGINT}, #{contactName,jdbcType=VARCHAR}, #{contactTel,jdbcType=VARCHAR},
        #{deliveryType,jdbcType=CHAR}, #{deliveryStartDate,jdbcType=TIMESTAMP}, #{deliveryEndDate,jdbcType=TIMESTAMP},
        #{feeTaker,jdbcType=VARCHAR}, #{shipFee,jdbcType=DECIMAL}, #{outboundTaker,jdbcType=VARCHAR}, #{outboundFee,jdbcType=DECIMAL}, #{totalQuantity,jdbcType=INTEGER},
        #{totalWeight,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, #{secondBalanceTakeout,jdbcType=DECIMAL}, #{totalContractReletedAmount,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR},
        #{alterStatus,jdbcType=VARCHAR}, #{changeOrderId,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{contractCode,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR},
        #{pickupStatus,jdbcType=INTEGER}, #{fillupStatus,jdbcType=INTEGER}, #{consignType,jdbcType=VARCHAR}, #{operatorId,jdbcType=BIGINT},
        #{operatorName,jdbcType=VARCHAR}, #{contractAddress,jdbcType=VARCHAR},
        #{orderOrgId,jdbcType=BIGINT}, #{orderOrgName,jdbcType=VARCHAR},
        #{buyerOrgId,jdbcType=BIGINT}, #{buyerOrgName,jdbcType=VARCHAR},
        #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR},
        #{callBackStatus,jdbcType=VARCHAR}, #{callBackNote,jdbcType=VARCHAR},
        #{lastUpdated,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR}, #{modificationNumber,jdbcType=INTEGER},
        #{rowId,jdbcType=VARCHAR}, #{parentRowId,jdbcType=VARCHAR}, #{paymentType,jdbcType=VARCHAR},#{paymentSort,jdbcType=VARCHAR},
        #{requirementCode,jdbcType=VARCHAR},#{transArea,jdbcType=VARCHAR}, #{delayNum,jdbcType=INTEGER}, #{isCountAchievement,jdbcType=VARCHAR}, #{ownerJobNumber,jdbcType=VARCHAR}, #{financeOrder,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.prcsteel.platform.order.model.model.ConsignOrder">
        insert into busi_consign_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="accountId != null">
                account_id,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="departmentName != null">
                department_name,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="ownerName != null">
                owner_name,
            </if>
            <if test="contactId != null">
                contact_id,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="contactTel != null">
                contact_tel,
            </if>
            <if test="deliveryType != null">
                delivery_type,
            </if>
            <if test="deliveryStartDate != null">
                delivery_start_date,
            </if>
            <if test="deliveryEndDate != null">
                delivery_end_date,
            </if>
            <if test="feeTaker != null">
                fee_taker,
            </if>
            <if test="shipFee != null">
                ship_fee,
            </if>
            <if test="outboundTaker != null">
                outbound_taker,
            </if>
            <if test="outboundFee != null">
                outbound_fee,
            </if>
            <if test="totalQuantity != null">
                total_quantity,
            </if>
            <if test="totalWeight != null">
                total_weight,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="secondBalanceTakeout != null" >
                second_balance_takeout,
            </if>
            <if test="totalContractReletedAmount != null">
                total_contract_releted_amount,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="alterStatus != null">
                alter_status,
            </if>
            <if test="changeOrderId != null">
                change_order_id,
            </if>
            <if test="note != null">
                note,
            </if>
            <if test="contractCode != null">
                contract_code,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="pickupStatus != null">
                pickup_status,
            </if>
            <if test="fillupStatus != null">
                fillup_status,
            </if>
            <if test="callBackStatus != null">
                call_back_status,
            </if>
            <if test="callBackNote != null">
                call_back_note,
            </if>
            <if test="consignType != null">
                consign_type,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="operatorName != null">
                operator_name,
            </if>
            <if test="contractAddress != null">
                contract_address,
            </if>
            <if test="orderOrgId != null">
                order_org_id,
            </if>
            <if test="orderOrgName != null">
                order_org_name,
            </if>
            <if test="buyerOrgId != null">
                buyer_org_id,
            </if>
            <if test="buyerOrgName != null">
                buyer_org_name,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="lastUpdated != null">
                last_updated,
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by,
            </if>
            <if test="modificationNumber != null">
                modification_number,
            </if>
            <if test="rowId != null">
                row_id,
            </if>
            <if test="parentRowId != null">
                parent_row_id,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="paymentSort != null">
                payment_sort,
            </if>
            <if test="requirementCode != null">
                requirement_code,
            </if>
            <if test="transArea != null">
                trans_area,
            </if>
            <if test="financeOrder != null">
                finance_order,
            </if>
            <if test="delayNum != null">
                delay_num,
            </if>
            <if test="isCountAchievement != null">
                is_count_achievement,
            </if>
            <if test="ownerJobNumber != null">
                owner_job_number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="accountId != null">
                #{accountId,jdbcType=BIGINT},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="departmentName != null">
                #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="ownerName != null">
                #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                #{contactId,jdbcType=BIGINT},
            </if>
            <if test="contactName != null">
                #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="deliveryType != null">
                #{deliveryType,jdbcType=CHAR},
            </if>
            <if test="deliveryStartDate != null">
                #{deliveryStartDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryEndDate != null">
                #{deliveryEndDate,jdbcType=TIMESTAMP},
            </if>
            <if test="feeTaker != null">
                #{feeTaker,jdbcType=VARCHAR},
            </if>
            <if test="shipFee != null">
                #{shipFee,jdbcType=DECIMAL},
            </if>
            <if test="outboundTaker != null">
                #{outboundTaker,jdbcType=VARCHAR},
            </if>
            <if test="outboundFee != null">
                #{outboundFee,jdbcType=DECIMAL},
            </if>
            <if test="totalQuantity != null">
                #{totalQuantity,jdbcType=INTEGER},
            </if>
            <if test="totalWeight != null">
                #{totalWeight,jdbcType=DECIMAL},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="secondBalanceTakeout != null" >
                second_balance_takeout = #{secondBalanceTakeout,jdbcType=DECIMAL},
            </if>
            <if test="totalContractReletedAmount != null">
                #{totalContractReletedAmount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="alterStatus != null">
                #{alterStatus,jdbcType=VARCHAR},
            </if>
            <if test="changeOrderId != null">
                #{changeOrderId,jdbcType=INTEGER},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
            <if test="contractCode != null">
                #{contractCode,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="pickupStatus != null">
                #{pickupStatus,jdbcType=INTEGER},
            </if>
            <if test="fillupStatus != null">
                #{fillupStatus,jdbcType=INTEGER},
            </if>
            <if test="callBackStatus != null">
                #{callBackStatus,jdbcType=VARCHAR},
            </if>
            <if test="callBackNote != null">
                #{callBackNote,jdbcType=VARCHAR},
            </if>
            <if test="consignType != null">
                #{consignType,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=BIGINT},
            </if>
            <if test="operatorName != null">
                #{operatorName,jdbcType=VARCHAR},
            </if>
            <if test="contractAddress != null">
                #{contractAddress,jdbcType=VARCHAR},
            </if>
            <if test="orderOrgId != null">
                #{orderOrgId,jdbcType=BIGINT},
            </if>
            <if test="orderOrgName != null">
                #{orderOrgName,jdbcType=VARCHAR},
            </if>
            <if test="buyerOrgId != null">
                #{buyerOrgId,jdbcType=BIGINT},
            </if>
            <if test="buyerOrgName != null">
                #{buyerOrgName,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="modificationNumber != null">
                #{modificationNumber,jdbcType=INTEGER},
            </if>
            <if test="rowId != null">
                #{rowId,jdbcType=VARCHAR},
            </if>
            <if test="parentRowId != null">
                #{parentRowId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="paymentSort != null">
                #{paymentSort,jdbcType=VARCHAR},
            </if>
            <if test="requirementCode != null">
                #{requirementCode,jdbcType=VARCHAR},
            </if>
            <if test="transArea != null">
                #{transArea,jdbcType=VARCHAR},
            </if>
            <if test="financeOrder != null">
                #{financeOrder,jdbcType=INTEGER},
            </if>
            <if test="delayNum != null">
                #{delayNum,jdbcType=INTEGER},
            </if>
            <if test="isCountAchievement != null">
                #{isCountAchievement,jdbcType=VARCHAR},
            </if>
            <if test="ownerJobNumber != null">
                #{ownerJobNumber,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.prcsteel.platform.order.model.model.ConsignOrder">
        update busi_consign_order
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=BIGINT},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="departmentName != null">
                department_name = #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="ownerName != null">
                owner_name = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                contact_id = #{contactId,jdbcType=BIGINT},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                contact_tel = #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="deliveryType != null">
                delivery_type = #{deliveryType,jdbcType=CHAR},
            </if>
            <if test="deliveryStartDate != null">
                delivery_start_date = #{deliveryStartDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryEndDate != null">
                delivery_end_date = #{deliveryEndDate,jdbcType=TIMESTAMP},
            </if>
            <if test="feeTaker != null">
                fee_taker = #{feeTaker,jdbcType=VARCHAR},
            </if>
            <if test="shipFee != null">
                ship_fee = #{shipFee,jdbcType=DECIMAL},
            </if>
            <if test="outboundTaker != null">
                outbound_taker = #{outboundTaker,jdbcType=VARCHAR},
            </if>
            <if test="outboundFee != null">
                outbound_fee = #{outboundFee,jdbcType=DECIMAL},
            </if>
            <if test="totalQuantity != null">
                total_quantity = #{totalQuantity,jdbcType=INTEGER},
            </if>
            <if test="totalWeight != null">
                total_weight = #{totalWeight,jdbcType=DECIMAL},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="secondBalanceTakeout != null" >
                second_balance_takeout = #{secondBalanceTakeout,jdbcType=DECIMAL},
            </if>
            <if test="totalContractReletedAmount != null">
                total_contract_releted_amount = #{totalContractReletedAmount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="alterStatus != null">
                alter_status = #{alterStatus,jdbcType=VARCHAR},
            </if>
            <if test="changeOrderId != null">
                change_order_id = #{changeOrderId,jdbcType=INTEGER},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
            <if test="contractCode != null">
                contract_code = #{contractCode,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="pickupStatus != null">
                pickup_status = #{pickupStatus,jdbcType=INTEGER},
            </if>
            <if test="fillupStatus != null">
                fillup_status = #{fillupStatus,jdbcType=INTEGER},
            </if>
            <if test="callBackStatus != null">
                call_back_status = #{callBackStatus,jdbcType=VARCHAR},
            </if>
            <if test="callBackNote != null">
                call_back_note = #{callBackNote,jdbcType=VARCHAR},
            </if>
            <if test="consignType != null">
                consign_type = #{consignType,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=BIGINT},
            </if>
            <if test="operatorName != null">
                operator_name = #{operatorName,jdbcType=VARCHAR},
            </if>
            <if test="contractAddress != null">
                contract_address = #{contractAddress,jdbcType=VARCHAR},
            </if>
            <if test="orderOrgId != null">
                order_org_id = #{orderOrgId,jdbcType=BIGINT},
            </if>
            <if test="orderOrgName != null">
                order_org_name = #{orderOrgName,jdbcType=VARCHAR},
            </if>
            <if test="buyerOrgId != null">
                buyer_org_id = #{buyerOrgId,jdbcType=BIGINT},
            </if>
            <if test="buyerOrgName != null">
                buyer_org_name = #{buyerOrgName,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="modificationNumber != null">
                modification_number = #{modificationNumber,jdbcType=INTEGER},
            </if>
            <if test="rowId != null">
                row_id = #{rowId,jdbcType=VARCHAR},
            </if>
            <if test="parentRowId != null">
                parent_row_id = #{parentRowId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="paymentSort != null">
                payment_sort = #{paymentSort,jdbcType=VARCHAR},
            </if>
            <if test="requirementCode != null">
                requirement_code = #{requirementCode,jdbcType=VARCHAR},
            </if>
            <if test="transArea != null">
                trans_area = #{transArea,jdbcType=VARCHAR},
            </if>
            <if test="financeOrder != null">
                finance_order = #{financeOrder,jdbcType=INTEGER},
            </if>
            <if test="delayNum != null">
                delay_num = #{delayNum,jdbcType=INTEGER},
            </if>
            <if test="isCountAchievement != null">
                is_count_achievement = #{isCountAchievement,jdbcType=VARCHAR},
            </if>
            <if test="ownerJobNumber != null">
                owner_job_number = #{ownerJobNumber,jdbcType=VARCHAR},
            </if>
            <if test="buyerCredentialCode != null">
                buyer_credential_code = #{buyerCredentialCode,jdbcType=VARCHAR},
            </if>
            <if test="batchBuyerCredentialCode != null">
                batch_buyer_credential_code = #{batchBuyerCredentialCode,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByConditionSelective" parameterType="com.prcsteel.platform.order.model.dto.ConsignOrderUpdateDto">
        update busi_consign_order
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="accountId != null">
                account_id = #{accountId,jdbcType=BIGINT},
            </if>
            <if test="accountName != null">
                account_name = #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="departmentName != null">
                department_name = #{departmentName,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="ownerName != null">
                owner_name = #{ownerName,jdbcType=VARCHAR},
            </if>
            <if test="contactId != null">
                contact_id = #{contactId,jdbcType=BIGINT},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                contact_tel = #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="deliveryType != null">
                delivery_type = #{deliveryType,jdbcType=CHAR},
            </if>
            <if test="deliveryStartDate != null">
                delivery_start_date = #{deliveryStartDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deliveryEndDate != null">
                delivery_end_date = #{deliveryEndDate,jdbcType=TIMESTAMP},
            </if>
            <if test="feeTaker != null">
                fee_taker = #{feeTaker,jdbcType=VARCHAR},
            </if>
            <if test="shipFee != null">
                ship_fee = #{shipFee,jdbcType=DECIMAL},
            </if>
            <if test="outboundTaker != null">
                outbound_taker = #{outboundTaker,jdbcType=VARCHAR},
            </if>
            <if test="outboundFee != null">
                outbound_fee = #{outboundFee,jdbcType=DECIMAL},
            </if>
            <if test="totalQuantity != null">
                total_quantity = #{totalQuantity,jdbcType=INTEGER},
            </if>
            <if test="totalWeight != null">
                total_weight = #{totalWeight,jdbcType=DECIMAL},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="secondBalanceTakeout != null" >
                second_balance_takeout = #{secondBalanceTakeout,jdbcType=DECIMAL},
            </if>
            <if test="totalContractReletedAmount != null">
                total_contract_releted_amount = #{totalContractReletedAmount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="alterStatus != null">
                alter_status = #{alterStatus,jdbcType=VARCHAR},
            </if>
            <if test="changeOrderId != null">
                change_order_id = #{changeOrderId,jdbcType=INTEGER},
            </if>
            <if test="originStatus != null">
                origin_status = #{originStatus,jdbcType=VARCHAR},
            </if>
            <if test="note != null">
                note = #{note,jdbcType=VARCHAR},
            </if>
            <if test="contractCode != null">
                contract_code = #{contractCode,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="pickupStatus != null">
                pickup_status = #{pickupStatus,jdbcType=INTEGER},
            </if>
            <if test="fillupStatus != null">
                fillup_status = #{fillupStatus,jdbcType=INTEGER},
            </if>
            <if test="callBackStatus != null">
                call_back_status = #{callBackStatus,jdbcType=VARCHAR},
            </if>
            <if test="callBackNote != null">
                call_back_note = #{callBackNote,jdbcType=VARCHAR},
            </if>
            <if test="consignType != null">
                consign_type = #{consignType,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=BIGINT},
            </if>
            <if test="operatorName != null">
                operator_name = #{operatorName,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            modification_number=ifnull(modification_number,0)+1,
            <if test="rowId != null">
                row_id = #{rowId,jdbcType=VARCHAR},
            </if>
            <if test="parentRowId != null">
                parent_row_id = #{parentRowId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="paymentSort != null">
                payment_sort = #{paymentSort,jdbcType=VARCHAR},
            </if>
            <if test="requirementCode != null">
                requirement_code = #{requirementCode,jdbcType=VARCHAR},
            </if>
            <if test="transArea != null">
                trans_area = #{transArea,jdbcType=VARCHAR},
            </if>
            <if test="financeOrder != null">
                finance_order = #{financeOrder,jdbcType=INTEGER},
            </if>
            <if test="delayNum != null">
                delay_num = #{delayNum,jdbcType=INTEGER},
            </if>
            <if test="isCountAchievement != null">
                is_count_achievement = #{isCountAchievement,jdbcType=VARCHAR},
            </if>
            <if test="ownerJobNumber != null">
                owner_job_number = #{ownerJobNumber,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
        <if test="oldStatusList != null and oldStatusList.size() > 0 ">
            and status in
            <foreach item="oldstatus" index="index" collection="oldStatusList" open="(" separator="," close=")">
                #{oldstatus}
            </foreach>
        </if>
        <if test="oldPayStatus != null">
            and pay_status = #{oldPayStatus,jdbcType=VARCHAR}
        </if>
    </update>
    <update id="updateByPrimaryKey" parameterType="com.prcsteel.platform.order.model.model.ConsignOrder">
        update busi_consign_order
        set code = #{code,jdbcType=VARCHAR},
        account_id = #{accountId,jdbcType=BIGINT},
        account_name = #{accountName,jdbcType=VARCHAR},
        department_id = #{departmentId,jdbcType=BIGINT},
        department_name = #{departmentName,jdbcType=VARCHAR},
        owner_id = #{ownerId,jdbcType=BIGINT},
        owner_name = #{ownerName,jdbcType=VARCHAR},
        contact_id = #{contactId,jdbcType=BIGINT},
        contact_name = #{contactName,jdbcType=VARCHAR},
        contact_tel = #{contactTel,jdbcType=VARCHAR},
        delivery_type = #{deliveryType,jdbcType=CHAR},
        delivery_start_date = #{deliveryStartDate,jdbcType=TIMESTAMP},
        delivery_end_date = #{deliveryEndDate,jdbcType=TIMESTAMP},
        fee_taker = #{feeTaker,jdbcType=VARCHAR},
        ship_fee = #{shipFee,jdbcType=DECIMAL},
        outbound_taker = #{outboundTaker,jdbcType=VARCHAR},
        outbound_fee = #{outboundFee,jdbcType=DECIMAL},
        total_quantity = #{totalQuantity,jdbcType=INTEGER},
        total_weight = #{totalWeight,jdbcType=DECIMAL},
        total_amount = #{totalAmount,jdbcType=DECIMAL},
        second_balance_takeout = #{secondBalanceTakeout,jdbcType=DECIMAL},
        total_contract_releted_amount = #{totalContractReletedAmount,jdbcType=DECIMAL},
        status = #{status,jdbcType=VARCHAR},
        alter_status = #{alterStatus,jdbcType=VARCHAR},
        change_order_id = #{changeOrderId,jdbcType=INTEGER},
        note = #{note,jdbcType=VARCHAR},
        contract_code = #{contractCode,jdbcType=VARCHAR},
        pay_status = #{payStatus,jdbcType=VARCHAR},
        pickup_status = #{pickupStatus,jdbcType=INTEGER},
        fillup_status = #{fillupStatus,jdbcType=INTEGER},
        call_back_status = #{callBackStatus,jdbcType=VARCHAR},
        call_back_note = #{callBackNote,jdbcType=VARCHAR},
        consign_type = #{consignType,jdbcType=VARCHAR},
        operator_id = #{operatorId,jdbcType=BIGINT},
        operator_name = #{operatorName,jdbcType=VARCHAR},
        contract_address = #{contractAddress,jdbcType=VARCHAR},
        order_org_id = #{orderOrgId,jdbcType=BIGINT},
        order_org_name = #{orderOrgName,jdbcType=VARCHAR},
        buyer_org_id = #{buyerOrgId,jdbcType=BIGINT},
        buyer_org_name = #{buyerOrgName,jdbcType=VARCHAR},
        created = #{created,jdbcType=TIMESTAMP},
        created_by = #{createdBy,jdbcType=VARCHAR},
        last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
        modification_number = #{modificationNumber,jdbcType=INTEGER},
        row_id = #{rowId,jdbcType=VARCHAR},
        parent_row_id = #{parentRowId,jdbcType=VARCHAR},
        payment_type = #{paymentType,jdbcType=VARCHAR},
        payment_sort = #{paymentSort,jdbcType=VARCHAR},
        requirement_code = #{requirementCode,jdbcType=VARCHAR},
        trans_area = #{transArea,jdbcType=VARCHAR},
        finance_order = #{financeOrder,jdbcType=INTEGER},
        delay_num = #{delayNum,jdbcType=INTEGER},
        is_count_achievement = #{isCountAchievement,jdbcType=VARCHAR},
        owner_job_number = #{ownerJobNumber,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!-- 分页模糊查询订单列表-->
    <select id="selectByConditions" parameterType="map" resultMap="QueryResultMap">
        select * from(
        select t1.id,t1.change_order_id,t1.code,date_format(t1.created,'%Y-%m-%d %H:%i:%s') as createdStr,ifnull(date_format(t1.secondary_time,'%Y-%m-%d %H:%i:%s'),'-') AS secondaryStr,t1.account_name,t1.owner_name
        ,t.seller_name,t1.total_quantity,t1.total_weight,t.pickup_total_weight
        ,t1.total_amount,t.pickup_total_amount,t1.status,t1.pay_status,t1.fillup_status,t1.pickup_status,t1.consign_type
        ,date_format(payTime.last_updated,'%Y-%m-%d %H:%i:%s') payApprovedTime, t1.change_status,payTime.print_times,t1.alter_status
        from busi_consign_order t1
        join(
        select t3.id, group_concat(distinct t4.seller_name SEPARATOR '&lt;br&gt;') as seller_name
        ,sum(case when t3.fillup_status = '2' then t4.actual_pick_weight_salesman else null end) as pickup_total_weight
        ,sum(case when t3.fillup_status = '2' then round(t4.actual_pick_weight_salesman * t4.deal_price,2) else null end) as
        pickup_total_amount
        from busi_consign_order t3
        join busi_consign_order_items t4 on t3.id = t4.order_id
        <!-- 已二次结算页面需要用到二次结算时间 -->
        <if test="(dto.secondarySettlementStartTime != null and dto.secondarySettlementStartTime != '')
         or (dto.secondarySettlementEndTime != null and dto.secondarySettlementEndTime != '')">
            left join busi_consign_order_audit_trail t5 on t5.order_id = t3.id and t5.set_to_status = '7' and t5.status_type = 'MAIN'
        </if>
        where 1=1
        <if test="dto.sellerName != null and dto.sellerName != ''">
            and t4.seller_name like CONCAT('%',#{dto.sellerName},'%')
        </if>
        <if test="changeStatus != null">
            and t3.change_status in
            <foreach item="changeStatus" index="index" collection="changeStatus" open="(" separator="," close=")">
                #{changeStatus}
            </foreach>
        </if>
        <if test="array != null">
            and t3.status in
            <foreach item="status" index="index" collection="array" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="financeOrder != null">
            and t3.finance_order = #{financeOrder,jdbcType=INTEGER}
        </if>
        <if test="dto.payStatus!='APPROVED' and dto.payStatus!='APPLYPRINTED'">
            and (
            exists(
            select p.id from busi_consign_process p
            where p.operator_id = #{userId,jdbcType=BIGINT}
            and p.user_id = t3.owner_id
            )
            or t3.operator_id = #{userId,jdbcType=BIGINT}
            )
        </if>
        <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.code != null and dto.code != ''">
            and t3.code like #{dto.code,jdbcType=VARCHAR}
        </if>
        <if test="dto.accountName != null and dto.accountName != ''">
            and t3.account_name like #{dto.accountName,jdbcType=VARCHAR}
        </if>
        <if test="dto.ownerName != null and dto.ownerName != ''">
            and t3.owner_name = #{dto.ownerName,jdbcType=BIGINT}
        </if>
        <if test="dto.orderOrgName !=null and dto.orderOrgName !=''">
            and t3.order_org_name=#{dto.orderOrgName,jdbcType=VARCHAR}
        </if>
        <if test="dto.payStatus != null and dto.payStatus != ''">
            and (t3.pay_status = #{dto.payStatus,jdbcType=VARCHAR}
            <if test="dto.payStatus=='APPROVED' and dto.showPrinted == 1">
                or t3.pay_status = 'APPLYPRINTED'
            </if>
            )
            <if test="dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
                and exists (select 1 from acl_user x,acl_user_org y
                where t3.owner_id =x.id
                and 	x.org_id = y.org_id
                and y.user_id = #{userId,jdbcType=BIGINT}
                )
            </if>
        </if>
        <if test="dto.fillupStatus != null and dto.fillupStatus != '' ">
            and t3.fillup_status != #{dto.fillupStatus,jdbcType=VARCHAR}
        </if>
        <if test="dto.isPayedByAcceptDraft != null">
            and t4.is_payed_by_accept_draft = #{dto.isPayedByAcceptDraft,jdbcType=BIT}
        </if>

        <!-- 这一段用于(全部tab页面)交易单状态： -->
        <if test="dto.orderStatusQuerys != null">
            and (
            <foreach item="orderStatus" index="index" collection="dto.orderStatusQuerys" open="(" separator=" or " close=")">
                t3.status in
                <foreach item="statusValue" index="index" collection="orderStatus.statusValues" open="(" separator="," close=")">
                    #{statusValue}
                </foreach>
                <if test="orderStatus.fillupStatus != null">
                    and t3.fillup_status != #{orderStatus.fillupStatus,jdbcType=VARCHAR}
                </if>
                <if test="orderStatus.payStatus != null">
                    and t3.pay_status = #{orderStatus.payStatus,jdbcType=VARCHAR}
                </if>
            </foreach>
            )
        </if>
        <!-- 已二次结算页面需要用到二次结算时间 -->
        <if test="dto.secondarySettlementStartTime != null and dto.secondarySettlementStartTime != ''">
            <![CDATA[ and str_to_date(t5.created,'%Y-%m-%d') >= #{dto.secondarySettlementStartTime} ]]>
        </if>
        <if test="dto.secondarySettlementEndTime != null and dto.secondarySettlementEndTime != ''">
            <![CDATA[ and str_to_date(t5.created,'%Y-%m-%d') <= #{dto.secondarySettlementEndTime} ]]>
        </if>
        group by t3.id
        )as t
        on t.id = t1.id
        left join(
        select consign_order_id,print_times,max(last_updated) last_updated
        from busi_pay_request
        where type=1
        and (status='APPROVED' or status='APPLYPRINTED')
        group by consign_order_id) payTime
        on t1.id = payTime.consign_order_id
        <!-- 在待放货tab页中不允许搜索出没有上传买家提单的交易单 -->
    <!--<where>
       <if test="dto.fillupStatus != null and dto.fillupStatus == '-1' ">
           and exists (select 1 from busi_consign_order_attachment a
           join busi_delivery_bill b on   b.id  = a.consign_order_id
           where  t1.id = b.consign_order_id  and a.type= 'deliverybill'
           )
       </if>
   </where> -->
  <!--add by wangxianjun 合同变更流程申请付款后，会到待审核付款列表，列表中展示的信息是变更订单的信息 -->
  <if test="dto.payStatus=='REQUESTED' or dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
      where   t1.alter_status not in ('PENDING_APPR_PAY','PENDING_PRINT_PAY','PENDING_CONFIRM_PAY')
  UNION ALL
      select o.id,c.id as change_order_id,c.code,DATE_FORMAT(o.created,'%Y-%m-%d %H:%i:%s') as createdStr,'-' AS secondaryStr ,o.account_name,o.owner_name,
      i.seller_name,sum(quantity) as total_quantity,
      ROUND(sum(weight),6) as total_weight,0.0000 as pickup_total_weight,
      ROUND(sum(sale_amount),2) as total_amount,0.00 as pickup_total_amount,o.status,o.pay_status,o.fillup_status,o.pickup_status,
      o.consign_type,date_format(payTime.last_updated,'%Y-%m-%d %H:%i:%s') payApprovedTime, o.change_status,payTime.print_times,o.alter_status
      from busi_consign_order_change c  join busi_consign_order o  on o.id = c.order_id
      join busi_consign_order_items_change i on i.change_order_id = c.id
      left join(
      select change_order_id,print_times,max(last_updated) last_updated
      from busi_pay_request
      where type=5
      and (status='APPROVED' or status='APPLYPRINTED')
      group by change_order_id) payTime
      on c.id = payTime.change_order_id
      <where>
          (
          <!--待审核付款 -->
          <if test="dto.payStatus=='REQUESTED'">
              c.status = 'PENDING_APPR_PAY'
          </if>
          <!--待打印付款申请 -->
          <if test="dto.payStatus=='APPROVED'">
              c.status = 'PENDING_PRINT_PAY'
          </if>
          <!--待确认已付款 -->
          <if test="dto.payStatus=='APPLYPRINTED'">
              c.status = 'PENDING_CONFIRM_PAY'
          </if>
          <!--显示已打印的付款申请 -->
          <if test="dto.payStatus=='APPROVED' and dto.showPrinted == 1">
              or c.status = 'PENDING_CONFIRM_PAY'
          </if>
          )
          <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
              and str_to_date(o.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
          </if>
          <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
              and str_to_date(o.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
          </if>
          <if test="dto.code != null and dto.code != ''">
              and o.code like #{dto.code,jdbcType=VARCHAR}
          </if>
          <if test="dto.accountName != null and dto.accountName != ''">
              and o.account_name like #{dto.accountName,jdbcType=VARCHAR}
          </if>
          <if test="dto.ownerName != null and dto.ownerName != ''">
              and o.owner_name = #{dto.ownerName,jdbcType=BIGINT}
          </if>
          <if test="dto.isPayedByAcceptDraft != null">
              and i.is_payed_by_accept_draft = #{dto.isPayedByAcceptDraft,jdbcType=BIT}
          </if>
          <if test="dto.sellerName != null and dto.sellerName != ''">
              and i.seller_name like CONCAT('%',#{dto.sellerName},'%')
          </if>
          <if test="dto.payStatus!='APPROVED' and dto.payStatus!='APPLYPRINTED'">
              and (
              exists(
              select p.id from busi_consign_process p
              where p.operator_id = #{userId,jdbcType=BIGINT}
              and p.user_id = o.owner_id
              )
              or o.operator_id = #{userId,jdbcType=BIGINT}
              )
          </if>
          <if test="dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
              and exists (select 1 from acl_user x,acl_user_org y
              where o.owner_id =x.id
              and 	x.org_id = y.org_id
              and y.user_id = #{userId,jdbcType=BIGINT}
              )
          </if>
      </where>
      group by  c.id
  </if>

   ) x  order by
        <if test="dto.fillupStatus != null and dto.fillupStatus != '' ">
            case when x.fillup_status = 1 then 1 else 0 end,
        </if>
        x.createdStr desc
   <if test="dto.orderBy != null and dto.orderBy != '' ">
       ,${dto.orderBy}
       <if test="dto.order != null and dto.order != '' ">
           ${dto.order}
       </if>
   </if>
   limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
</select>


<!-- 根据条件统计订单列表总数-->
    <select id="totalOrderByConditions" resultType="int" parameterType="map">
        select count(1)
        FROM (select distinct t3.id from busi_consign_order t3
        left join busi_consign_order_items t4 on t3.id = t4.order_id
        <!-- 已二次结算页面需要用到二次结算时间 -->
        <if test="(dto.secondarySettlementStartTime != null and dto.secondarySettlementStartTime != '')
         or (dto.secondarySettlementEndTime != null and dto.secondarySettlementEndTime != '')">
            left join busi_consign_order_audit_trail t5 on t5.order_id = t3.id and t5.set_to_status = '7' and
            t5.status_type = 'MAIN'
        </if>
        where 1=1
        <if test="dto.sellerName != null and dto.sellerName != ''">
            and t3.id in (select order_id from busi_consign_order_items t4
            where t4.seller_name like CONCAT('%',#{dto.sellerName},'%'))
        </if>
        <if test="changeStatus != null">
            and t3.change_status in
            <foreach item="changeStatus" index="index" collection="changeStatus" open="(" separator="," close=")">
                #{changeStatus}
            </foreach>
        </if>
        <if test="array != null">
            and t3.status in
            <foreach item="status" index="index" collection="array" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="financeOrder != null">
            and t3.finance_order = #{financeOrder,jdbcType=INTEGER}
        </if>
        <if test="dto.payStatus!='APPROVED' and dto.payStatus!='APPLYPRINTED'">
            and (
            exists(
            select p.id from busi_consign_process p
            where p.operator_id = #{userId,jdbcType=BIGINT}
            and p.user_id = t3.owner_id
            )
            or t3.operator_id = #{userId,jdbcType=BIGINT}
            )
        </if>
        <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.code != null and dto.code != ''">
            and t3.code like #{dto.code,jdbcType=VARCHAR}
        </if>
        <if test="dto.accountName != null and dto.accountName != ''">
            and t3.account_name like #{dto.accountName,jdbcType=VARCHAR}
        </if>
        <if test="dto.ownerName != null and dto.ownerName != ''">
            and t3.owner_name = #{dto.ownerName,jdbcType=BIGINT}
        </if>
        <if test="dto.payStatus != null and dto.payStatus != ''">
            and (t3.pay_status = #{dto.payStatus,jdbcType=VARCHAR}
            <if test="dto.payStatus=='APPROVED' and dto.showPrinted == 1">
                or t3.pay_status = 'APPLYPRINTED'
            </if>
            )
            <if test="dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
                and exists (select 1 from acl_user x,acl_user_org y
                where t3.owner_id =x.id
                and x.org_id = y.org_id
                and y.user_id = #{userId,jdbcType=BIGINT}
                )
            </if>
        </if>
        <if test="dto.fillupStatus != null and dto.fillupStatus != '' ">
            and t3.fillup_status != #{dto.fillupStatus,jdbcType=VARCHAR}
        </if>
        <if test="dto.isPayedByAcceptDraft != null">
            and t4.is_payed_by_accept_draft = #{dto.isPayedByAcceptDraft,jdbcType=BIT}
        </if>
        <!-- 这一段用于(全部tab页面)交易单状态： -->
        <if test="dto.orderStatusQuerys != null">
            and (
            <foreach item="orderStatus" index="index" collection="dto.orderStatusQuerys" open="(" separator=" or "
                     close=")">
                t3.status in
                <foreach item="statusValue" index="index" collection="orderStatus.statusValues" open="(" separator=","
                         close=")">
                    #{statusValue}
                </foreach>
                <if test="orderStatus.fillupStatus != null">
                    and t3.fillup_status != #{orderStatus.fillupStatus,jdbcType=VARCHAR}
                </if>
                <if test="orderStatus.payStatus != null">
                    and t3.pay_status = #{orderStatus.payStatus,jdbcType=VARCHAR}
                </if>
            </foreach>
            )
        </if>
        <!-- 已二次结算页面需要用到二次结算时间 -->
        <if test="dto.secondarySettlementStartTime != null and dto.secondarySettlementStartTime != ''">
            <![CDATA[ and str_to_date(t5.created,'%Y-%m-%d') >= #{dto.secondarySettlementStartTime} ]]>
        </if>
        <if test="dto.secondarySettlementEndTime != null and dto.secondarySettlementEndTime != ''">
            <![CDATA[ and str_to_date(t5.created,'%Y-%m-%d') <= #{dto.secondarySettlementEndTime} ]]>
        </if>
        <!-- 在待放货tab页中不允许搜索出没有上传买家提单的交易单 -->
        <!-- <if test="dto.fillupStatus != null and dto.fillupStatus == '-1' ">
               and exists (select 1 from busi_consign_order_attachment a
               join busi_delivery_bill b on   b.id  = a.consign_order_id
               where  t3.id = b.consign_order_id  and a.type= 'deliverybill'
               )
           </if> -->
        <!--add by wangxianjun 合同变更流程申请付款后，会到待审核付款列表，列表中展示的信息是变更订单的信息 -->
        <if test="dto.payStatus=='REQUESTED' or dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
            and  t3.alter_status not in ('PENDING_APPR_PAY','PENDING_PRINT_PAY','PENDING_CONFIRM_PAY')
        UNION ALL
        select c.id from busi_consign_order_change c  join busi_consign_order o  on o.id = c.order_id
         join busi_consign_order_items_change i on i.change_order_id = c.id
        <where>
            (
            <!--待审核付款 -->
            <if test="dto.payStatus=='REQUESTED'">
                c.status = 'PENDING_APPR_PAY'
            </if>
            <!--待打印付款申请 -->
            <if test="dto.payStatus=='APPROVED'">
                c.status = 'PENDING_PRINT_PAY'
            </if>
            <!--待确认已付款 -->
            <if test="dto.payStatus=='APPLYPRINTED'">
                c.status = 'PENDING_CONFIRM_PAY'
            </if>
            <!--显示已打印的付款申请 -->
            <if test="dto.payStatus=='APPROVED' and dto.showPrinted == 1">
                or c.status = 'PENDING_CONFIRM_PAY'
            </if>
            )
            <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
                and str_to_date(o.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
            </if>
            <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
                and str_to_date(o.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
            </if>
            <if test="dto.code != null and dto.code != ''">
                and o.code like #{dto.code,jdbcType=VARCHAR}
            </if>
            <if test="dto.accountName != null and dto.accountName != ''">
                and o.account_name like #{dto.accountName,jdbcType=VARCHAR}
            </if>
            <if test="dto.ownerName != null and dto.ownerName != ''">
                and o.owner_name = #{dto.ownerName,jdbcType=BIGINT}
            </if>
            <if test="dto.isPayedByAcceptDraft != null">
                and i.is_payed_by_accept_draft = #{dto.isPayedByAcceptDraft,jdbcType=BIT}
            </if>
            <if test="dto.sellerName != null and dto.sellerName != ''">
                and i.seller_name like CONCAT('%',#{dto.sellerName},'%')
            </if>
            <if test="dto.payStatus!='APPROVED' and dto.payStatus!='APPLYPRINTED'">
                and (
                exists(
                select p.id from busi_consign_process p
                where p.operator_id = #{userId,jdbcType=BIGINT}
                and p.user_id = o.owner_id
                )
                or o.operator_id = #{userId,jdbcType=BIGINT}
                )
            </if>
            <if test="dto.payStatus=='APPROVED' or dto.payStatus=='APPLYPRINTED'">
                and exists (select 1 from acl_user x,acl_user_org y
                where o.owner_id =x.id
                and 	x.org_id = y.org_id
                and y.user_id = #{userId,jdbcType=BIGINT}
                )
            </if>
        </where>
        group by  c.id
      </if>
        ) f
    </select>


    <!-- add by lcw -->

    <!-- 根据单号查询交易单 -->
    <select id="selectByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where code = #{code,jdbcType=VARCHAR}
    </select>

    <!-- add by myh-->
    <!-- 根据交易员和状态查询订单-->
    <select id="selectByOwnerAndStatusBuyer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where owner_id = #{0} and status = #{1}
    </select>

    <!-- add by dengxiyan -->
    <!-- 根据状态查询当前登录人能操作的订单记录数 -->
    <select id="countOrderByStatus" parameterType="map" resultType="int">
        select count(t1.id)
        from busi_consign_order t1
        where
        t1.status in
        <foreach item="status" index="index" collection="list" open="(" separator="," close=")">
            #{status}
        </foreach>
        and (
        exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t1.owner_id
        )
        or t1.operator_id = #{userId,jdbcType=BIGINT}
        )
        <if test="fillUpStatus != null and fillUpStatus != '' ">
            and t1.fillup_status != #{fillUpStatus,jdbcType=VARCHAR}
        </if>
    </select>


    <!-- 统计当前登录人的待申请付款订单总数 -->
    <select id="countPayOrderByStatus" parameterType="map" resultType="int">
        select count(t1.id)
        from busi_consign_order t1
        where
        t1.status in
        <foreach item="status" index="index" collection="list" open="(" separator="," close=")">
            #{status}
        </foreach>
        and (
        exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t1.owner_id
        )
        or t1.operator_id = #{userId,jdbcType=BIGINT}
        )
        and t1.pay_status = #{payStatus,jdbcType=VARCHAR}
    </select>

    <!-- add by myh-->
    <!-- 根据id和状态查询-->
    <select id="selectByIdAndStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where id = #{0} and status = #{1}
    </select>

    <!-- add by myh-->
    <!-- 查询订单是否全部匹配-->
    <select id="selectCountByIdAndFillupStatus" resultType="java.lang.Integer">
        select count(id)
        from busi_consign_order
        where id = #{0} and fillup_status = #{1}
    </select>

    <!-- 查询未付款用于系统自动关闭订单  -->
    <select id="selectOrderByPayStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where status in (1,2)
    </select>


    <!-- add by dengxiyan-->
    <!-- 查询买家/卖家客户的采购记录/销售记录 -->
    <select id="selectAccountOrderListByConditions" parameterType="map" resultMap="QueryResultMap">
        select t1.id,t1.code,date_format(t1.created,'%Y-%m-%d %H:%i:%s') as createdStr,t1.account_name,t1.owner_name
        ,t.seller_name,t1.total_quantity,t1.total_weight,t.pickup_total_weight
        ,t1.total_amount,t.pickup_total_amount,t1.status,t1.pay_status,t1.fillup_status,t1.pickup_status,t1.consign_type
        from busi_consign_order t1
        join(
        select t3.id, group_concat(distinct t4.seller_name SEPARATOR '&lt;br&gt;') as seller_name
        ,sum(case when t3.fillup_status = '2' then t4.actual_pick_weight_salesman else null end ) as pickup_total_weight
        ,sum(case when t3.fillup_status = '2' then round(t4.actual_pick_weight_salesman * t4.deal_price,2) else null end) as
        pickup_total_amount
        from busi_consign_order t3,busi_consign_order_items t4
        where 1=1
        <if test="dto.accountId != null and dto.accountId != '' ">
            and t3.account_id = #{dto.accountId,jdbcType=BIGINT}
        </if>
        <if test="dto.sellerId != null and dto.sellerId != '' ">
            and t4.seller_id = #{dto.sellerId,jdbcType=BIGINT}
        </if>
        <!--加上数据权限
       and (
       exists(
       select p.id from busi_consign_process p
       where p.operator_id = #{userId,jdbcType=BIGINT}
       and p.user_id = t3.owner_id
       )
       or t3.operator_id = #{userId,jdbcType=BIGINT}
       )-->
        <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            and t3.status in
            <foreach item="s" index="index" collection="status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="pay_status != null">
            and t3.pay_status in
            <foreach item="s" index="index" collection="pay_status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="fillup_status != null">
            and t3.fillup_status in
            <foreach item="s" index="index" collection="fillup_status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="dto.accountName !=null and dto.accountName != '' ">
            and t3.account_name like #{dto.accountName,jdbcType=VARCHAR}
        </if>
        <if test="dto.nsortName !=null and dto.nsortName != '' ">
            and t4.nsort_name like #{dto.nsortName,jdbcType=VARCHAR}
        </if>
        <if test="dto.sellerName !=null and dto.sellerName != '' ">
            and t4.seller_name like #{dto.sellerName,jdbcType=VARCHAR}
        </if>
        and t3.id = t4.order_id
        group by t3.id
        )as t
        on t.id = t1.id
        order by t1.created desc
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>


    <!-- add by dengxiyan-->
    <!-- 统计买家/卖家客户的采购记录/销售记录数 -->
    <select id="totalAccountOrderByConditions" parameterType="map" resultType="int">
        select count(distinct t3.id)
        from busi_consign_order t3,busi_consign_order_items t4
        where 1=1
        <if test="dto.accountId != null and dto.accountId != '' ">
            and t3.account_id = #{dto.accountId,jdbcType=BIGINT}
        </if>
        <if test="dto.sellerId != null and dto.sellerId != '' ">
            and t4.seller_id = #{dto.sellerId,jdbcType=BIGINT}
        </if>
        <!--
        加上数据权限
        and (
        exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t3.owner_id
        )
        or t3.operator_id = #{userId,jdbcType=BIGINT}
        )-->
        <if test="dto.createdStartTime != null and dto.createdStartTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &gt;= #{dto.createdStartTime,jdbcType=VARCHAR}
        </if>
        <if test="dto.createdEndTime != null and dto.createdEndTime != '' ">
            and str_to_date(t3.created,'%Y-%m-%d') &lt;= #{dto.createdEndTime,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            and t3.status in
            <foreach item="s" index="index" collection="status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="pay_status != null">
            and t3.pay_status in
            <foreach item="s" index="index" collection="pay_status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="fillup_status != null">
            and t3.fillup_status in
            <foreach item="s" index="index" collection="fillup_status" open="(" separator="," close=")">
                #{s}
            </foreach>
        </if>
        <if test="dto.accountName !=null and dto.accountName != '' ">
            and t3.account_name like #{dto.accountName,jdbcType=VARCHAR}
        </if>
        <if test="dto.nsortName !=null and dto.nsortName != '' ">
            and t4.nsort_name like #{dto.nsortName,jdbcType=VARCHAR}
        </if>
        <if test="dto.sellerName !=null and dto.sellerName != '' ">
            and t4.seller_name like #{dto.sellerName,jdbcType=VARCHAR}
        </if>
        and t3.id = t4.order_id
    </select>

    <select id="queryApprovedDateByOrderId" parameterType="Long" resultType="Date">
        SELECT t.created FROM busi_consign_order_audit_trail t
        WHERE t.status_type='MAIN' AND t.set_to_status=2 AND t.order_id=#{orderId}
        order by t.created desc limit 1
    </select>

    <!--统计当前登录人能查看的付款情况的已关联订单总数列表 -->
    <select id="countOrderGroupByPayStatus" parameterType="map" resultType="map">
        select t1.pay_status, nullif(count(t1.id),0) as total
        from busi_consign_order t1
        where t1.status in
        <foreach item="status" index="index" collection="list" open="(" separator="," close=")">
            #{status}
        </foreach>
        and case when t1.pay_status not in ('APPROVED','APPLYPRINTED') then (
        exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t1.owner_id
        )
        or t1.operator_id = #{userId,jdbcType=BIGINT}
        ) else true end
        and case when t1.pay_status in ('APPROVED','APPLYPRINTED') then
        exists (select 1 from acl_user x,acl_user_org y
        where t1.owner_id =x.id
        and x.org_id = y.org_id
        and y.user_id = #{userId,jdbcType=BIGINT}
        )
        else true end
        group by t1.pay_status
    </select>

    <!--统计当前登录人能查看的状态订单总数列表 -->
    <select id="countOrderGroupByStatus" parameterType="map" resultType="map">
        select t1.status,nullif(count(t1.id),0) as total
        from busi_consign_order t1
        where 1=1
        and (
        exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t1.owner_id
        )
        or t1.operator_id = #{userId,jdbcType=BIGINT}
        )
        group by t1.status
    </select>
    <!-- 代运营卖家交易报表 -->
    <resultMap id="SellerTradeResultMap" type="com.prcsteel.platform.order.model.dto.SellerOrderBusinessReportDto">
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR"/>
        <result column="consign_type" property="consignType" jdbcType="VARCHAR"/>
        <result column="month_order_count" property="monthOrderCount" jdbcType="INTEGER"/>
        <result column="month_weight" property="monthWeight" jdbcType="DECIMAL"/>
        <result column="month_all_seller_weight" property="monthAllSellerWeight" jdbcType="DECIMAL"/>
        <result column="month_amount" property="monthAmount" jdbcType="DECIMAL"/>
        <result column="sum_weight" property="sumWeight" jdbcType="DECIMAL"/>
    </resultMap>

    <!-- 查询卖家交易信息列表 -->
    <select id="querySellerTradeListByDto" parameterType="com.prcsteel.platform.order.model.dto.SellerOrderBusinessReportDto"
            resultMap="SellerTradeResultMap">
        select t2.seller_name,t1.consign_type,sum(t2.weight) as month_weight,count(DISTINCT t1.id) as
        month_order_count,sum(t2.amount) as month_amount,sum(t2.weight) as sum_weight
        from busi_consign_order t1
        join busi_consign_order_items t2 on t1.id = t2.order_id
        <if test="orgId != null and orgId > 0">
            join cust_account t3 on t3.id = t2.seller_id
            join acl_user t4 on t4.org_id = #{orgId,jdbcType=BIGINT} and t3.manager_id = t4.id
        </if>
        where
        <![CDATA[ t1.status > 6 ]]>
        <if test="userIdList != null">
            and t1.owner_id in
            <foreach item="userId" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>

        <if test="strStartTime != null and strStartTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') >= #{strStartTime,jdbcType=VARCHAR} ]]>
        </if>
        <if test="strEndTime != null and strEndTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') <= #{strEndTime,jdbcType=VARCHAR}  ]]>
        </if>
        <if test="sellerName != null and sellerName != ''">
            and t2.seller_name like #{sellerName,jdbcType=VARCHAR}
        </if>
        group by t2.seller_name,t1.consign_type
        LIMIT #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>

    <!-- 统计满足条件的所有代运营卖家的交易重量 -->
    <select id="sumAllSellerWeightByDto" resultType="java.math.BigDecimal"
            parameterType="com.prcsteel.platform.order.model.dto.SellerOrderBusinessReportDto">
        select sum(t2.weight) as month_all_seller_weight
        from busi_consign_order t1
        join busi_consign_order_items t2 on t1.id = t2.order_id
        <if test="orgId != null and orgId > 0">
            join cust_account t3 on t3.id = t2.seller_id
            join acl_user t4 on t4.org_id = #{orgId,jdbcType=BIGINT} and t3.manager_id = t4.id
        </if>
        where
        <![CDATA[ t1.status > 6 ]]>
        <if test="userIdList != null">
            and t1.owner_id in
            <foreach item="userId" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
        <if test="strStartTime != null and strStartTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') >= #{strStartTime,jdbcType=VARCHAR} ]]>
        </if>
        <if test="strEndTime != null and strEndTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') <= #{strEndTime,jdbcType=VARCHAR}  ]]>
        </if>
    </select>


    <!-- 统计卖家交易记录数 -->
    <select id="countSellerTradeByDto" parameterType="com.prcsteel.platform.order.model.dto.SellerOrderBusinessReportDto"
            resultType="int">
        select count(1) from (
        select t2.seller_id,t1.consign_type
        from busi_consign_order t1
        join busi_consign_order_items t2 on t1.id = t2.order_id
        <if test="orgId != null and orgId > 0">
            join cust_account t3 on t3.id = t2.seller_id
            join acl_user t4 on t4.org_id = #{orgId,jdbcType=BIGINT} and t3.manager_id = t4.id
        </if>
        where
        <![CDATA[ t1.status > 6 ]]>
        <if test="userIdList != null">
            and t1.owner_id in
            <foreach item="userId" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
        <if test="strStartTime != null and strStartTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') >= #{strStartTime,jdbcType=VARCHAR} ]]>
        </if>
        <if test="strEndTime != null and strEndTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') <= #{strEndTime,jdbcType=VARCHAR}  ]]>
        </if>
        <if test="sellerName != null and sellerName != ''">
            and t2.seller_name like #{sellerName,jdbcType=VARCHAR}
        </if>
        group by t2.seller_id,t1.consign_type
        ) as t
    </select>
    <!-- 品类交易报表 -->
    <resultMap id="NsortTradeResultMap" type="com.prcsteel.platform.order.model.dto.NsortBusinessReportDto">
        <result column="org_name" property="orgName" jdbcType="VARCHAR"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="total_order" property="totalOrder" jdbcType="INTEGER"/>
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="total_weight" property="totalWeight" jdbcType="DECIMAL"/>
        <result column="total_consign_order" property="totalConsignOrder" jdbcType="INTEGER"/>
        <result column="total_buyer" property="totalBuyer" jdbcType="INTEGER"/>
    </resultMap>

    <select id="queryNsortTradeListByDto" resultMap="NsortTradeResultMap"
            parameterType="com.prcsteel.platform.order.model.dto.NsortBusinessReportDto">
        SELECT
        t4.name AS org_name,c3.name AS nsort_name,
        COUNT(DISTINCT t1.id) AS total_order,
        COUNT(DISTINCT t1.id,CASE WHEN t1.consign_type = 'consign' THEN 1 ELSE NULL END) AS total_consign_order,
        SUM(ROUND(t2.actual_pick_weight_server * t2.deal_price,2)) AS total_amount,
        SUM(t2.actual_pick_weight_server) AS total_weight,
        COUNT(DISTINCT t1.account_id) AS total_buyer
        FROM busi_consign_order t1
        JOIN busi_consign_order_items t2 ON t1.id = t2.order_id
        JOIN acl_user t3 ON t3.id = t1.owner_id
        JOIN base_organization t4 ON t4.id = t3.org_id

        <if test="orgId != null and orgId > 0">
            AND t3.org_id = #{orgId,jdbcType=BIGINT}
        </if>
        JOIN common_category c1 ON c1.name = t2.nsort_name
        JOIN common_group_for_category c2 ON c1.uuid = c2.category_uuid
        JOIN common_category_group c3 ON c3.site_uuid = 'inner_cbms' AND c2.category_group_uuid = c3.uuid
        <where>
            <if test="userIdList != null">
                t1.owner_id IN
                <foreach collection="userIdList" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
            <![CDATA[ AND t1.status > 6 ]]>
            <if test="strStartTime != null and strStartTime != '' ">
                AND str_to_date(t1.created,'%Y-%m-%d') <![CDATA[ >= #{strStartTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="strEndTime != null and strEndTime != '' ">
                AND str_to_date(t1.created,'%Y-%m-%d') <![CDATA[ <= #{strEndTime,jdbcType=VARCHAR} ]]>
            </if>
        </where>

        GROUP BY t3.org_id,t4.name,c3.name
        ORDER BY t3.org_id,c3.id
    </select>

    <!-- 卖家交易统计报表 -->
    <resultMap id="SellerTurnoverStatisticsDto" type="com.prcsteel.platform.order.model.dto.SellerTurnoverStatisticsDto">
        <id column="account_id" property="sellerId" jdbcType="BIGINT"/>
        <result column="owner_id" property="ownerId" jdbcType="BIGINT"/>
        <result column="account_name" property="sellerName" jdbcType="VARCHAR"/>
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR"/>
        <result column="consign_type" property="consignType" jdbcType="VARCHAR"/>
        <result column="weight_range" property="weightRange" jdbcType="DECIMAL"/>
        <result column="amount_range" property="amountRange" jdbcType="DECIMAL"/>
        <result column="deal_count" property="dealCount" jdbcType="DECIMAL"/>
        <result column="all_weight" property="weightAll" jdbcType="DECIMAL"/>
    </resultMap>

    <select id="querySellerTurnoverStatisticsByParams" parameterType="map" resultMap="SellerTurnoverStatisticsDto">
        SELECT t.owner_id AS owner_id, t.account_id AS account_id, t.account_name AS account_name, t.owner_name AS
        owner_name, t.consign_type AS consign_type,
        SUM(t.weight) AS weight_range, SUM(t.amount) AS amount_range,
        SUM(t.deal_count) AS deal_count,
        SUM(t.all_weight) AS all_weight FROM(
        SELECT u.id AS owner_id, a.id AS account_id, a.name AS account_name, u.name AS owner_name,
        ifnull(o.consign_type, 'temp') AS consign_type,
        SUM(ROUND(i.actual_pick_weight_server, 6)) AS weight,
        SUM(ROUND(i.actual_pick_weight_server*i.cost_price, 2)) AS amount,
        COUNT(distinct(o.id)) AS deal_count,
        0 AS all_weight
        FROM cust_account a
        LEFT JOIN busi_consign_order_items i ON a.id = i.seller_id
        LEFT JOIN busi_consign_order o ON i.order_id = o.id
        LEFT JOIN acl_user u ON u.id = a.manager_id
        WHERE o.status > 6
        <if test="timeFrom != null">
            AND str_to_date(o.created,'%Y-%m-%d') &gt;= #{timeFrom}
        </if>
        <if test="timeTo != null">
            AND str_to_date(o.created,'%Y-%m-%d') &lt;= #{timeTo}
        </if>
        <if test="ownerName != null">
            AND u.name = #{ownerName}
        </if>
        <if test="accountName != null">
            AND a.name = #{accountName}
        </if>
        <if test="organization != null">
            AND u.org_id = #{organization}
        </if>
        <if test="userIds != null">
            AND u.id IN
            <foreach item="id" index="index" collection="userIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        GROUP BY a.id, o.consign_type

        UNION ALL

        SELECT u.id AS owner_id, a.id AS account_id, a.name AS account_name, u.name AS owner_name,
        o.consign_type AS consign_type,
        0 AS weight,
        0 AS amount,
        0 AS deal_count,
        SUM(ROUND(i.actual_pick_weight_server, 6)) AS all_weight
        FROM cust_account a
        LEFT JOIN busi_consign_order_items i ON a.id = i.seller_id
        LEFT JOIN busi_consign_order o ON i.order_id = o.id
        LEFT JOIN acl_user u ON u.id = a.manager_id
        WHERE o.status > 6
        <if test="ownerName != null">
            AND u.name = #{ownerName}
        </if>
        <if test="accountName != null">
            AND a.name = #{accountName}
        </if>
        <if test="organization != null">
            AND u.org_id = #{organization}
        </if>
        <if test="userIds != null">
            AND u.id IN
            <foreach item="id" index="index" collection="userIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        GROUP BY a.id, o.consign_type
        ) AS t
        GROUP BY t.account_id, t.consign_type
        having sum(t.all_weight) > 0
        <if test="start != null and length != null">
            limit #{start},#{length}
        </if>
    </select>

    <select id="countSellerTurnoverStatisticsByParams" parameterType="map" resultType="java.lang.Integer">
        select count(1) from(
        SELECT
        1
        FROM cust_account a
        LEFT JOIN busi_consign_order_items i ON a.id = i.seller_id
        LEFT JOIN busi_consign_order o ON i.order_id = o.id
        LEFT JOIN acl_user u ON u.id = a.manager_id
        WHERE o.status > 6
        <if test="ownerName != null">
            AND u.name = #{ownerName}
        </if>
        <if test="accountName != null">
            AND a.name = #{accountName}
        </if>
        <if test="organization != null">
            AND u.org_id = #{organization}
        </if>
        <if test="userIds != null">
            AND u.id IN
            <foreach item="id" index="index" collection="userIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        GROUP BY a.id, o.consign_type
        having SUM(ROUND(i.actual_pick_weight_server, 6)) > 0
        ) as t
    </select>
    <select id="queryOrders" resultMap="orderWithDetail"
            parameterType="com.prcsteel.platform.order.model.query.ConsignOrderDetailQuery">
        select
        t1.id,t1.code,t1.account_id,t1.account_name,t1.owner_id,t1.owner_name,t1.contact_id,t1.contact_name,
        t1.contact_tel,t1.delivery_type,t1.delivery_start_date,t1.delivery_end_date,t1.fee_taker,t1.ship_fee,t1.outbound_taker,t1.outbound_fee,
        t1.total_quantity,t1.total_weight,t1.total_amount,t1.status,t1.note,t1.contract_code,t1.pay_status,
        t1.pickup_status,t1.fillup_status,consign_type,t1.operator_id,t1.operator_name,t1.created,t1.created_by,t1.last_updated,
        t1.last_updated_by,t1.modification_number,t1.row_id,t1.parent_row_id,
        t1.department_id, t1.department_name, (SELECT COUNT(id) FROM cust_account WHERE parent_id = t1.account_id) AS departmentCount
        from busi_consign_order t1 INNER join acl_user t2 on t1.owner_id=t2.id
        <where>
            <if test="sellId!=null and  sellId!=0">
                AND  (select count(1) from busi_consign_order_items i
                inner join cust_account t2 on i.seller_id=t2.id
                inner join acl_user t3 on t2.manager_id=t3.id
                inner join busi_consign_order_contract t4 on i.order_id=t4.consign_order_id and i.seller_id=t4.customer_id
                where i.order_id = t1.id
                <if test="beginTime!=null">
                    AND <![CDATA[i.created >= #{beginTime} ]]>
                </if>
                <if test="endTime!=null">
                    AND <![CDATA[i.created < #{endTime} ]]>
                </if>
                <if test="sellId!=null and  sellId!=0">
                    and i.seller_id=#{sellId}
                </if>
                ) > 0
            </if>
            <if test="orgId!=null and orgId!=0">
                and t2.org_id=#{orgId}
            </if>
            <if test="buyerTrader!=null and buyerTrader!=0">
                and t1.owner_id=#{buyerTrader}
            </if>
            <if test="buyerId!=null and  buyerId!=0">
                and t1.account_id=#{buyerId}
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[t1.created >=  #{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[t1.created < #{endTime} ]]>
            </if>
            <if test="secBeginTime!=null">
                AND <![CDATA[t1.secondary_time >=  #{secBeginTime} ]]>
            </if>
            <if test="secEndTime!=null">
                AND <![CDATA[t1.secondary_time < #{secEndTime} ]]>
            </if>
            <if test="statusList != null and statusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="payStatusList != null and payStatusList.size > 0 ">
                and t1.pay_Status in
                <foreach item="status" index="index" collection="payStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="fillUpStatusList != null and fillUpStatusList.size > 0 ">
                and t1.fillup_status in
                <foreach item="status" index="index" collection="fillUpStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
        </where>
        order by t1.created desc,t1.account_id asc
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>
    <select id="queryOrdersCount" resultType="int"
            parameterType="com.prcsteel.platform.order.model.query.ConsignOrderDetailQuery">
        select count(*)
        from busi_consign_order t1 inner join acl_user t2 on t1.owner_id=t2.id
        <where>
            <if test="sellId!=null and  sellId!=0">
                and (select count(1) from busi_consign_order_items i
                inner join cust_account t2 on i.seller_id=t2.id
                inner join acl_user t3 on t2.manager_id=t3.id
                inner join busi_consign_order_contract t4 on i.order_id=t4.consign_order_id and i.seller_id=t4.customer_id
                where i.order_id = t1.id
                <if test="beginTime!=null">
                    AND <![CDATA[i.created >= #{beginTime} ]]>
                </if>
                <if test="endTime!=null">
                    AND <![CDATA[i.created < #{endTime} ]]>
                </if>
                <if test="sellId!=null and  sellId!=0">
                    and i.seller_id=#{sellId}
                </if>
                ) > 0
            </if>
            <if test="orgId!=null and orgId!=0">
                and t2.org_id=#{orgId}
            </if>
            <if test="buyerTrader!=null and buyerTrader!=0">
                and t1.owner_id=#{buyerTrader}
            </if>
            <if test="buyerId!=null and  buyerId!=0">
                and t1.account_id=#{buyerId}
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[t1.created >=  #{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[t1.created < #{endTime} ]]>
            </if>
            <if test="secBeginTime!=null">
                AND <![CDATA[t1.secondary_time >=  #{secBeginTime} ]]>
            </if>
            <if test="secEndTime!=null">
                AND <![CDATA[t1.secondary_time < #{secEndTime} ]]>
            </if>
            <if test="statusList != null and statusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="payStatusList != null and payStatusList.size > 0 ">
                and t1.pay_Status in
                <foreach item="status" index="index" collection="payStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="fillUpStatusList != null and fillUpStatusList.size > 0 ">
                and t1.fillup_status in
                <foreach item="status" index="index" collection="fillUpStatusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
        </where>
    </select>

    <!-- 买家采购明细报表 -->
    <resultMap id="BuyerOrderDetailResultMap" type="com.prcsteel.platform.common.dto.BuyerOrderDetailDto">
        <result column="createdStr" property="orderDateTime" jdbcType="VARCHAR"/>
        <result column="buyer_name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="code" property="orderNumber" jdbcType="VARCHAR"/>
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR"/>
        <result column="nsort_name" property="nsortName" jdbcType="VARCHAR"/>
        <result column="material" property="material" jdbcType="VARCHAR"/>
        <result column="spec" property="spec" jdbcType="VARCHAR"/>
        <result column="weight" property="weight" jdbcType="DECIMAL"/>
        <result column="cost_price" property="costPrice" jdbcType="DECIMAL"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="actual_pick_weight" property="actualPickWeight" jdbcType="DECIMAL"/>
        <result column="actual_pick_amount" property="actualPickAmount" jdbcType="DECIMAL"/>
    </resultMap>

    <!-- 查询买家采购订单明细 报表-->
    <select id="queryBuyerOrderDetailByDto" resultMap="BuyerOrderDetailResultMap"
            parameterType="com.prcsteel.platform.common.dto.BuyerOrderDetailDto">
        select date_format(t1.created,'%Y-%m-%d') as createdStr,t1.code,t1.account_name as
        buyer_name,t2.seller_name,t2.nsort_name,t2.material,t2.spec,t2.cost_price
        ,t2.weight,t2.amount,t2.actual_pick_weight_salesman as actual_pick_weight,t2.actual_pick_weight_salesman *
        t2.cost_price as actual_pick_amount
        from busi_consign_order t1,busi_consign_order_items t2
        where
        <![CDATA[ t1.status > 6 ]]>
        and t2.seller_id = #{sellerId,jdbcType=BIGINT}
        <if test="userIdList != null">
            and t1.owner_id in
            <foreach item="userId" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
        <if test="strStartTime != null and strStartTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') >= #{strStartTime,jdbcType=VARCHAR} ]]>
        </if>
        <if test="strEndTime != null and strEndTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') <= #{strEndTime,jdbcType=VARCHAR}  ]]>
        </if>
        and t1.id = t2.order_id
        order by t1.created
        <if test="start != null and length != null">
            limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
        </if>

    </select>

    <!-- 统计买家采购订单明细记录数 报表-->
    <select id="countBuyerOrderDetailByDto" resultType="int"
            parameterType="com.prcsteel.platform.common.dto.BuyerOrderDetailDto">
        select count(1)
        from busi_consign_order t1,busi_consign_order_items t2
        where
        <![CDATA[ t1.status > 6 ]]>
        and t2.seller_id = #{sellerId,jdbcType=BIGINT}
        <if test="userIdList != null">
            and t1.owner_id in
            <foreach item="userId" collection="userIdList" open="(" separator="," close=")">
                #{userId}
            </foreach>
        </if>
        <if test="strStartTime != null and strStartTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') >= #{strStartTime,jdbcType=VARCHAR} ]]>
        </if>
        <if test="strEndTime != null and strEndTime != '' ">
            <![CDATA[ and str_to_date(t1.created,'%Y-%m-%d') <= #{strEndTime,jdbcType=VARCHAR}  ]]>
        </if>
        and t1.id = t2.order_id
    </select>

    <select id="queryBuyerTrade" parameterType="com.prcsteel.platform.order.model.query.BuyerTradeStatisticsQuery"
            resultMap="buyerTradeMap">
        SELECT * from (SELECT tmain.*,(SELECT COUNT(1) FROM busi_consign_order t1
        INNER JOIN acl_user t3 ON t1.owner_id=t3.id
        <where>
            t1.account_id=tmain.companyid and consign_type in('temp','consign')
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')>=date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')<=date_format(#{endTime},'%Y-%m-%d') ]]>
            </if>
            <if test="statusList != null and statusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="orgId!=null and orgId!=0">
                and t3.org_id=#{orgId}
            </if>
            <if test="buyerTrader!=null and buyerTrader!=0">
                and t1.owner_id=#{buyerTrader}
            </if>
        </where>
        )AS totalOrderCount,
        <!--num大于0，非首次采购 等于0 是首次采购 -->
        ((select count(1) from cust_account_item_history c where c.account_id=tmain.companyid
        and  c.trans_date <![CDATA[ < '2016-06-01 00:00:00']]> ) + (select count(1) from cust_account_item_history c
        where c.account_id=tmain.companyid and  c.trans_date <![CDATA[ >= '2016-06-01 00:00:00']]>
        <if test="beginTime!=null">
            AND <![CDATA[date_format( c.trans_date,'%Y-%m-%d') < date_format(#{beginTime},'%Y-%m-%d') ]]>
        </if>
        )
        + (SELECT COUNT(1) FROM busi_consign_order t1
        INNER JOIN busi_consign_order_items i on t1.id = i.order_id
        INNER JOIN acl_user t3 ON t1.owner_id=t3.id
        <where>
            t1.account_id=tmain.companyid and t1.status = '10' and i.actual_pick_weight_server > 0
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d') < date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
        </where>
        )) as num
        FROM (
        SELECT t1.account_id AS companyid,t1.account_name AS companyname,t1.contact_id AS contactid,t1.contact_name AS contactname,
        SUM(CASE(consign_type) WHEN 'consign' THEN 1 ELSE 0 END)AS orderCount,
        SUM(CASE(consign_type) WHEN 'temp' THEN 1 ELSE 0 END)AS orderTempCount,
        COUNT(*) AS contactOrderCount,MIN(t1.created) AS firstTradeTime,
        MAX(t1.created) AS lastestTradeTime
        FROM busi_consign_order t1
        INNER JOIN acl_user t3 ON t1.owner_id=t3.id
        <where>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')>=date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')<=date_format(#{endTime},'%Y-%m-%d') ]]>
            </if>
            <if test="statusList != null and statusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="orgId!=null and orgId!=0">
                and t3.org_id=#{orgId}
            </if>
            <if test="buyerTrader!=null and buyerTrader!=0">
                and t1.owner_id=#{buyerTrader}
            </if>
            <if test="buyerId!=null and  buyerId!=0">
                and t1.account_id=#{buyerId}
            </if>
        </where>
        GROUP BY t1.account_id,t1.account_name,t1.contact_id,t1.contact_name) AS tmain
        WHERE tmain.orderCount+tmain.orderTempCount>0) account
        <where>
            <if test="statusCode!=null and statusCode == '0'.toString()">
                and account.num > 0
            </if>
            <if test="statusCode!=null and statusCode == '1'.toString()">
                and account.num = 0
            </if>
        </where>
        ORDER BY account.lastestTradeTime DESC,account.companyid ASC,account.contactid ASC
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>
    <select id="queryBuyerTradeCount" resultType="int"
            parameterType="com.prcsteel.platform.order.model.query.BuyerTradeStatisticsQuery">
        SELECT COUNT(1) FROM (
        SELECT t1.account_id AS companyid,t1.account_name AS companyname,t1.contact_id AS contactid,t1.contact_name AS contactname,
        SUM(CASE(consign_type) WHEN 'consign' THEN 1 ELSE 0 END)AS orderCount,
        SUM(CASE(consign_type) WHEN 'temp' THEN 1 ELSE 0 END)AS orderTempCount,
        COUNT(*) AS contactOrderCount,MIN(t1.created) AS firstTradeTime,
        MAX(t1.created) AS lastestTradeTime,
        <!--num大于0，非首次采购 等于0 是首次采购 -->
        ((select count(1) from cust_account_item_history c where c.account_id= t1.account_id
        and  c.trans_date <![CDATA[ < '2016-06-01 00:00:00']]> )
        +
        (select count(1) from cust_account_item_history c
        where c.account_id= t1.account_id and  c.trans_date <![CDATA[ >= '2016-06-01 00:00:00']]>
        <if test="beginTime!=null">
            AND <![CDATA[date_format( c.trans_date,'%Y-%m-%d') < date_format(#{beginTime},'%Y-%m-%d') ]]>
        </if>
        )
        +
        (SELECT COUNT(1) FROM busi_consign_order t
        INNER JOIN busi_consign_order_items i on t.id = i.order_id
        INNER JOIN acl_user t3 ON t.owner_id=t3.id
        <where>
            t.account_id=t1.account_id  and t.status = '10'  and i.actual_pick_weight_server > 0
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d') < date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
        </where>
        )) as num
        FROM busi_consign_order t1
        INNER JOIN acl_user t3 ON t1.owner_id=t3.id
        <where>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')>=date_format(#{beginTime},'%Y-%m-%d') ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t1.created,'%Y-%m-%d')<=date_format(#{endTime},'%Y-%m-%d') ]]>
            </if>
            <if test="statusList != null and statusList.size > 0 ">
                and t1.status in
                <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="orgId!=null and orgId!=0">
                and t3.org_id=#{orgId}
            </if>
            <if test="buyerTrader!=null and buyerTrader!=0">
                and t1.owner_id=#{buyerTrader}
            </if>
            <if test="buyerId!=null and  buyerId!=0">
                and t1.account_id=#{buyerId}
            </if>
        </where>
        GROUP BY t1.account_id,t1.account_name,t1.contact_id,t1.contact_name) AS tmain
        WHERE tmain.orderCount+tmain.orderTempCount>0
            <if test="statusCode!=null and statusCode == '0'.toString()">
                and tmain.num > 0
            </if>
            <if test="statusCode!=null and statusCode == '1'.toString()">
                and tmain.num = 0
            </if>
    </select>

    <update id="updateCodeById" parameterType="map">
        UPDATE busi_consign_order
        SET code = #{code,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <!--批量修改订单状态-->
    <update id="updateStatusByConsignOrderQuery" parameterType="com.prcsteel.platform.order.model.query.ConsignOrderQuery">
        UPDATE busi_consign_order
        SET status = #{status,jdbcType=VARCHAR},
        last_updated = now(),
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
        modification_number = modification_number + 1
        WHERE id IN
        <foreach collection="orderIds" item="id" open="(" separator="," close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
        AND status = #{oldStatus,jdbcType=VARCHAR}
    </update>

    <!-- 查询订单ID -->
    <select id="queryOrderIdsByOrderDetailIds" resultType="java.lang.Long" parameterType="java.util.List">
        SELECT distinct(order_id) FROM
        busi_consign_order_items
        WHERE id IN
        <foreach collection="orderDetailIds" item="id" open="(" separator="," close=")">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="findByOrderId" resultType="java.lang.String" parameterType="java.lang.Long">
        SELECT o.status FROM
        busi_consign_order o
        WHERE o.id = #{orderId,jdbcType=BIGINT}
    </select>

    <select id="checkIsPayedByAcceptDraft" resultType="java.lang.Boolean" parameterType="java.lang.Long">
        select ifnull(max(is_payed_by_accept_draft), 0)  from busi_consign_order_items i
        left join busi_consign_order o on o.id = i.order_id
        where o.id = #{orderId,jdbcType=BIGINT}
    </select>

    <select id="checkAcceptDarftIsPayed" resultType="java.lang.Boolean" parameterType="java.lang.Long">
        select ifnull(max(is_payed_by_accept_draft), 0) from busi_consign_order_items i
        left join busi_consign_order o on o.id = i.order_id
        where i.accept_draft_id = #{acceptDraftId,jdbcType=BIGINT} and o.status > 0
    </select>
    <select id="appOrderList" resultType="java.util.LinkedHashMap">
        select id,
        account_name as buyerName,
        createdStr as time,
        owner_name as dealer,
        total_quantity as num,
        FORMAT(total_weight,6) as weight,
        FORMAT(total_amount,2) as amount,
        concat(
        bill_status_name,
        case when pay_status_name='' then '' else concat(case when bill_status_name='' then '' else '/' end,pay_status_name) end,
        case when pickup_status_name='' then '' else concat(case when bill_status_name='' and pay_status_name='' then '' else '/' end,pickup_status_name) end,
        case when fillup_status_name='' then '' else concat(case when bill_status_name='' and pay_status_name='' and pickup_status_name='' then '' else '/' end,fillup_status_name) end
        ) status
        from(
        SELECT t1.id,
        date_format(t1.created,'%Y-%m-%d %H:%i:%s') AS createdStr,
        t1.account_name,
        t1.owner_name ,
        t1.total_quantity,
        t1.total_weight,
        t1.total_amount,
        <![CDATA[
				CASE
					WHEN status < '0' THEN  '交易关闭'
					WHEN status = '1' THEN  '待审核'
					WHEN status ='2' THEN '待关联'
					WHEN status ='3' or status=5 THEN '待审核交易关闭'
					WHEN status='6' then '待二次结算'
					WHEN status ='7' or status=8 THEN '待开票'
					WHEN status ='10' THEN '交易完成'
					ELSE ''
				END bill_status_name,
				CASE
					WHEN (status ='4' or status='6') and pay_status='APPLY' THEN '待申请付款'
					WHEN (status ='4' or status='6') and pay_status='REQUESTED' THEN '待审核付款'
					WHEN (status ='4' or status='6') and pay_status='APPROVED' THEN '待确认付款'
					ELSE ''
					END pay_status_name,
				CASE  
					WHEN status=4 then '待提货'
					ELSE ''
				END pickup_status_name,
				CASE 
					WHEN (status ='4' or status='6') and fillup_status!='-1' THEN '待放货' 
					ELSE ''
				END fillup_status_name
				]]>
        FROM busi_consign_order t1 join
        (SELECT t3.id,
        group_concat(DISTINCT t4.seller_name SEPARATOR '&lt;br&gt;') AS seller_name ,
        sum(CASE WHEN t3.fillup_status = '2' THEN t4.actual_pick_weight_salesman ELSE NULL END) AS pickup_total_weight ,
        sum(CASE WHEN t3.fillup_status = '2' THEN t4.actual_pick_weight_salesman * t4.deal_price ELSE NULL END) AS pickup_total_amount
        FROM busi_consign_order t3
        JOIN busi_consign_order_items t4 ON t3.id = t4.order_id
        WHERE exists(
        select p.id from busi_consign_process p
        where p.operator_id = #{userId,jdbcType=BIGINT}
        and p.user_id = t3.owner_id)
        or t3.operator_id = #{userId,jdbcType=BIGINT}
        GROUP BY t3.id )AS t
        ON t.id = t1.id
        and date_format(t1.created,'%Y-%m-%d') =#{date,jdbcType=VARCHAR}
        ORDER BY t1.created
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
        ) a
    </select>

    <!-- 买家订单变化金额之和，订单关闭金额为正数，所以之和，应该取减 -->
    <select id="querySumAmountByBuyerId" resultType="java.math.BigDecimal" parameterType="java.lang.Long">
        select (IFNULL(s.amount,0)-IFNULL(s1.amount,0)) as amount, s.account_id from (
        <!-- 已关联与二结完成之和 -->
        select
        b.account_id, sum(b.total_contract_releted_amount) as amount
        from busi_consign_order as b
        left join busi_consign_order_audit_trail as b1 on b1.order_id=b.id
        where b1.set_to_status in('4','7') and b.account_id = #{buyerId,jdbcType=BIGINT}
        ) as s
        left join (
        <!-- 订单关闭之和 -->
        select
        b.account_id, abs(sum(b.total_contract_releted_amount)) as amount
        from busi_consign_order as b
        left join busi_consign_order_audit_trail as b1 on b1.order_id=b.id
        where b1.set_to_status in('-2','-4','-7','-8') and b.account_id = #{buyerId,jdbcType=BIGINT}
        ) as s1 on s1.account_id = s.account_id
    </select>

    <select id="selectConsignOrder" resultMap="BaseResultMap">
        SELECT *
        FROM busi_consign_order
        WHERE id
        IN
        <foreach item="orderId" index="index" collection="orderIds" open="(" separator="," close=")">
            #{orderId}
        </foreach>
        ORDER BY owner_id
    </select>
    <select id="buildConsignOrderByPurchaseOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT bpo.buyer_name account_name, ca.id account_id, bpo.owner_id, au.name owner_name, bpo.contact contact_name, cac.id contact_id, bpo.tel contact_tel
        FROM busi_purchase_order bpo
        LEFT JOIN acl_user au ON au.id = bpo.owner_id
        LEFT JOIN cust_account ca ON ca.name = bpo.buyer_name
        LEFT JOIN cust_contact cac ON cac.tel = bpo.tel
        WHERE bpo.id = #{id}
    </select>

    <!--code by: tuxianming-->
    <select id="selectByOrderIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where id in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- add by  wangxianjun-->

    <!-- 根据单号查询返利金额-->
    <select id="queryOrderContactByCode" resultMap="OrderContactMap" parameterType="java.lang.String">
        select o.account_id, o.account_name, o.contact_id, o.contact_name,o.contact_tel,
        (case when o.status > 6 then sum(round(i.actual_pick_weight_server * t.rebate_role, 2)) else 0 end) as rebate_amount
        from busi_consign_order_items i
        left join busi_consign_order o on o.id = i.order_id
        left join (
        select t1.rebate_role,
        t4.name as nsort_name
        from base_rebate t1
        left join common_category_group t2 on t1.category_UUID = t2.uuid
        left join common_group_for_category t3 on t2.uuid = t3.category_group_uuid
        left join common_category t4 on t3.category_uuid = t4.uuid
        where t2.site_uuid = 'inner_cbms'
        and t2.is_deleted = 0
        and t3.is_deleted =0
        and t1.rebate_status= 'EFFECT'
        ) t on t.nsort_name = i.nsort_name
        where  o.code = #{code,jdbcType=VARCHAR}
        group by o.account_id, o.account_name, o.contact_id, o.contact_name,o.contact_tel
    </select>
    <!--根据单号更新买家联系人信息-->
    <update id="updateByCodeSelective" parameterType="com.prcsteel.platform.order.model.model.ConsignOrder">
        update busi_consign_order
        <set>
            <if test="contactId != null">
                contact_id = #{contactId,jdbcType=BIGINT},
            </if>
            <if test="contactName != null">
                contact_name = #{contactName,jdbcType=VARCHAR},
            </if>
            <if test="contactTel != null">
                contact_tel = #{contactTel,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdated != null">
                last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="modificationNumber != null">
                modification_number = #{modificationNumber,jdbcType=INTEGER},
            </if>
        </set>
        where code = #{code,jdbcType=VARCHAR}
    </update>

    <!--根据客户名称 和开单时间是否是首单-->
    <select id="findNewBuyerSeller" resultType="java.lang.Integer">
        select count(1) from busi_consign_order where
        account_name=#{accountName} and  delivery_start_date <![CDATA[ <= ]]>#{createDate}

    </select>

    <select id="selectEarliestOrderByAccountIdExceptOrderId" resultMap="BaseResultMap">
        SELECT
        o.id, o.account_id, o.owner_id, o.created
        FROM busi_consign_order o
        LEFT JOIN busi_consign_order_items i ON o.id = i.order_id
        WHERE (o.account_id = #{accountId} OR i.seller_id = #{accountId}) AND o.id != #{orderId}
        ORDER BY o.created
        LIMIT 0, 1
    </select>

    <resultMap id="accountResult" type="com.prcsteel.platform.order.model.dto.AccountOrderDto">
        <result column="account_id" property="accountId" jdbcType="BIGINT"/>
        <result column="invoiceId" property="invoiceId" jdbcType="BIGINT"/>
        <result column="orderId" property="orderId" jdbcType="BIGINT"/>
    </resultMap>
    <!-- 查进项票所关联到的订单的买家 -->
    <select id="queryByInvoiceId" resultMap="accountResult" parameterType="java.lang.Long">
        SELECT t1.id AS orderId, t1.account_id, t4.id AS invoiceId FROM busi_consign_order t1
        LEFT JOIN inv_invoice_in_detail_orderitem t2 ON t2.order_id = t1.id
        LEFT JOIN inv_invoice_in_detail t3 ON t3.id = t2.invoice_detail_id
        LEFT JOIN inv_invoice_in t4 ON t4.id = t3.invoice_in_id
		WHERE t4.id = #{invoiceId,jdbcType=INTEGER} and t2.weight>0
        GROUP BY t1.account_id,t4.id
    </select>

    <resultMap id="applyStatusResult" type="com.prcsteel.platform.order.model.dto.InvoiceOutApplyStatusDto">
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="accountId" property="accountId" jdbcType="BIGINT"/>
    </resultMap>
    <select id="queryInvoiceOutApplyStatus" resultMap="applyStatusResult">
        SELECT t1.account_id AS accountId,t5.status FROM busi_consign_order t1
        LEFT JOIN busi_consign_order_items t2 ON t2.order_id = t1.id
        LEFT JOIN inv_invoice_out_item_detail t3 ON t3.order_detail_id = t2.id
        LEFT JOIN inv_invoice_out_apply_detail t4 ON t4.id = t3.apply_detail_id
        LEFT JOIN inv_invoice_out_apply t5 ON t5.id = t4.invoice_out_apply_id
        WHERE t3.inv_invoice_in_id = #{invoiceId,jdbcType=INTEGER}
        AND t3.order_detail_id IN
        <foreach collection="orderDetailIds" item="orderDetailId" open="(" separator="," close=")">
            #{orderDetailId}
        </foreach>
        AND t3.is_deleted = 0 AND t4.is_deleted = 0
        AND t5.is_deleted = 0
        GROUP BY apply_detail_id
        ORDER BY t5.created desc LIMIT 1
    </select>
    <!-- 初次付款信息报表 -->
    <resultMap id="orderPaymentMap" type="com.prcsteel.platform.order.model.dto.OrderPayMentDto" >
        <result column="orderId" property="orderId" jdbcType="BIGINT"/>
        <result column="buyerName" property="buyerName" jdbcType="VARCHAR"/>
        <result column="sellerName" property="sellerName" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="firstApplyTime" property="firstApplyTime" jdbcType="TIMESTAMP"/>
        <result column="firstPayTime" property="firstPayTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="accounting" property="accounting" jdbcType="VARCHAR"/>
        <result column="buyerOrgName" property="buyerOrgName" jdbcType="VARCHAR"/>
        <result column="payAmount" property="payAmount" jdbcType="DECIMAL"/>
        <result column="paymentBank" property="paymentBank" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryFirstPayMent" resultMap="orderPaymentMap" parameterType="com.prcsteel.platform.order.model.query.OrderPayMentQuery">
        SELECT t1.id AS orderId, t1.account_name AS buyerName, t6.receiver_name AS sellerName, t1.code,
        t3.created AS firstApplyTime,
        t4.created AS firstPayTime,
        t1.status,
        t5.print_name AS accounting,
        t8.name AS buyerOrgName,
        t6.pay_amount AS payAmount, t6.payment_bank AS paymentBank
        FROM busi_consign_order t1
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'REQUESTED') AS t3 ON t3.order_id = t1.id
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'PAYED') AS t4 ON t4.order_id = t1.id
        LEFT JOIN busi_pay_request t5 ON t5.consign_order_id = t1.id
        LEFT JOIN busi_pay_request_items t6 ON t6.request_id = t5.id
        <!--updated by chengui 买家服务中心取值应为：开单的交易员所属的服务中心，字段取自与acl_user、base_organization关联结果 -->
        LEFT JOIN acl_user t7 ON t7.id = t1.owner_id
        LEFT JOIN base_organization t8 ON t8.id = t7.org_id
        WHERE t1.pay_status ='PAYED' AND t5.print_times > 0
        AND t4.created between #{startTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
        <if test="sellerName != null and sellerName != ''">
            and t6.receiver_name like '%${sellerName}%'
        </if>
        <if test="orgName != null and orgName != ''">
            and t8.name = #{orgName,jdbcType=VARCHAR}
        </if>
        <if test="code != null and code != ''">
            and t1.code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="accounting != null and accounting != ''">
            and t5.print_name = #{accounting,jdbcType=VARCHAR}
        </if>
        GROUP BY orderId,sellerName,t6.id
        ORDER BY t3.created
        limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
    </select>

    <select id="queryFirstPayMentCount" resultType="java.lang.Integer" parameterType="com.prcsteel.platform.order.model.query.OrderPayMentQuery">
        SELECT COUNT(1) FROM (
        SELECT t1.id AS orderId, t1.account_name AS buyerName, t6.receiver_name AS sellerName
        FROM busi_consign_order t1
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'REQUESTED') AS t3 ON t3.order_id = t1.id
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'PAYED') AS t4 ON t4.order_id = t1.id
        LEFT JOIN busi_pay_request t5 ON t5.consign_order_id = t1.id
        LEFT JOIN busi_pay_request_items t6 ON t6.request_id = t5.id
        LEFT JOIN acl_user t7 ON t7.id = t1.owner_id
        LEFT JOIN base_organization t8 ON t8.id = t7.org_id
        WHERE t1.pay_status ='PAYED' AND t5.print_times > 0
        AND t4.created between #{startTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
        <if test="sellerName != null and sellerName != ''">
            and t6.receiver_name like '%${sellerName}%'
        </if>
        <if test="orgName != null and orgName != ''">
            and t8.name = #{orgName,jdbcType=VARCHAR}
        </if>
        <if test="code != null and code != ''">
            and t1.code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="accounting != null and accounting != ''">
            and t5.print_name = #{accounting,jdbcType=VARCHAR}
        </if>
        GROUP BY orderId,sellerName,t6.id
        )f
    </select>

    <select id="totalFirstPayMent" resultMap="orderPaymentMap" parameterType="com.prcsteel.platform.order.model.query.OrderPayMentQuery">
        SELECT SUM(f.pay_amount) AS payAmount FROM (SELECT t1.id,t6.pay_amount
        FROM busi_consign_order t1
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'REQUESTED') AS t3 ON t3.order_id = t1.id
        LEFT JOIN (SELECT id,created,order_id FROM busi_consign_order_audit_trail WHERE set_to_status = 'PAYED') AS t4 ON t4.order_id = t1.id
        LEFT JOIN busi_pay_request t5 ON t5.consign_order_id = t1.id
        LEFT JOIN busi_pay_request_items t6 ON t6.request_id = t5.id
        LEFT JOIN acl_user t7 ON t7.id = t1.owner_id
        LEFT JOIN base_organization t8 ON t8.id = t7.org_id
        WHERE t1.pay_status ='PAYED' AND t5.print_times > 0
        AND t4.created between #{startTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
        <if test="sellerName != null and sellerName != ''">
            and t2.seller_name like '%${sellerName}%'
        </if>
        <if test="orgName != null and orgName != ''">
            and t8.name = #{orgName,jdbcType=VARCHAR}
        </if>
        <if test="code != null and code != ''">
            and t1.code = #{code,jdbcType=VARCHAR}
        </if>
        <if test="accounting != null and accounting != ''">
            and t5.created_by = #{accounting,jdbcType=VARCHAR}
        </if>
        GROUP BY t1.id, t1.account_id, t6.id
        )f
    </select>

    <select id="getFebOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where
        <![CDATA[
         DATE_FORMAT(secondary_time,'%Y-%m-%d') = '2016-08-15'
         and (status=-7 or status>6)]]>
        order by secondary_time
    </select>
    <resultMap id="ordersMap" type="com.prcsteel.platform.order.model.dto.OrderItemDetailDto" extends="BaseResultMap">
        <collection property="items" ofType="com.prcsteel.platform.order.model.model.ConsignOrderItems">
            <id column="oid" property="id" jdbcType="BIGINT" />
            <result column="order_id" property="orderId" jdbcType="BIGINT" />
            <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
            <result column="seller_name" property="sellerName" jdbcType="VARCHAR" />
            <result column="nsort_name" property="nsortName" jdbcType="VARCHAR" />
            <result column="material" property="material" jdbcType="VARCHAR" />
            <result column="spec" property="spec" jdbcType="VARCHAR" />
            <result column="factory" property="factory" jdbcType="VARCHAR" />
            <result column="city" property="city" jdbcType="VARCHAR" />
            <result column="warehouse" property="warehouse" jdbcType="VARCHAR" />
            <result column="quantity" property="quantity" jdbcType="INTEGER" />
            <result column="weight" property="weight" jdbcType="DECIMAL" />
            <result column="weight_concept" property="weightConcept" jdbcType="VARCHAR" />
            <result column="cost_price" property="costPrice" jdbcType="DECIMAL" />
            <result column="deal_price" property="dealPrice" jdbcType="DECIMAL" />
            <result column="amount" property="amount" jdbcType="DECIMAL" />
            <result column="invoice_amount" property="invoiceAmount" jdbcType="DECIMAL" />
            <result column="invoice_weight" property="invoiceWeight" jdbcType="DECIMAL" />
            <result column="actual_pick_weight_salesman" property="actualPickWeightSalesman" jdbcType="DECIMAL" />
            <result column="actual_pick_weight_server" property="actualPickWeightServer" jdbcType="DECIMAL" />
            <result column="actual_pick_quantity_salesman" property="actualPickQuantitySalesman" jdbcType="INTEGER" />
            <result column="actual_pick_quantity_server" property="actualPickQuantityServer" jdbcType="INTEGER" />
            <result column="status" property="status" jdbcType="INTEGER" />
            <result column="is_payed_by_accept_draft" property="isPayedByAcceptDraft" jdbcType="BIT" />
            <result column="accept_draft_id" property="acceptDraftId" jdbcType="BIGINT" />
            <result column="accept_draft_code" property="acceptDraftCode" jdbcType="VARCHAR" />
            <result column="seller_org_id" property="sellerOrgId" jdbcType="BIGINT"/>
            <result column="seller_org_name" property="sellerOrgName" jdbcType="VARCHAR"/>
            <result column="seller_owner_id" property="sellerOwnerId" jdbcType="BIGINT"/>
            <result column="seller_owner_name" property="sellerOwnerName" jdbcType="VARCHAR"/>
            <result column="ocreated" property="created" jdbcType="TIMESTAMP" />
            <result column="ocreated_by" property="createdBy" jdbcType="VARCHAR" />
            <result column="olast_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
            <result column="olast_updated_by" property="lastUpdatedBy" jdbcType="VARCHAR" />
            <result column="used_amount" property="usedAmount" jdbcType="DECIMAL" />
            <result column="used_weight" property="usedWeight" jdbcType="DECIMAL" />
            <result column="allowance_amount" property="allowanceAmount" jdbcType="DECIMAL" />
            <result column="allowance_weight" property="allowanceWeight" jdbcType="DECIMAL" />
            <result column="allowance_buyer_amount" property="allowanceBuyerAmount" jdbcType="DECIMAL" />
            <result column="seller_job_number" property="sellerJobNumber" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <select id="selectOrdersByParams" resultMap="ordersMap" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
        select
        o.id, o.code,o.account_id, o.account_name, o.owner_id, o.owner_name, o.total_weight,
        o.invoice_amount, o.total_quantity, o.created, o.contract_code,o.secondary_time,o.pay_status,
        o.oid, o.order_id, o.seller_id, o.seller_name, o.nsort_name, o.material,
        o.spec, o.factory, o.city, o.warehouse, o.quantity, o.weight, o.weight_concept,
        o.cost_price, o.deal_price, o.amount, o.invoice_weight,
        o.actual_pick_weight_salesman, o.actual_pick_weight_server,
        o.actual_pick_quantity_salesman,
        o.actual_pick_quantity_server, o.status,
        o.allowance_amount,
        o.allowance_buyer_amount, o.ocreated
        from (select
        t.id, t.code, t.account_id, t.account_name, t.owner_id, t.owner_name, t.total_weight,
        (t1.weight * t1.deal_price) invoice_amount, t.total_quantity, t.created, t.contract_code,t.secondary_time,t.status as pay_status,
        t1.id as oid, t1.order_id, t1.seller_id, t1.seller_name, t1.nsort_name, t1.material,
        t1.spec, t1.factory, t1.city, t1.warehouse, t1.quantity, t1.weight, t1.weight_concept,
        t1.cost_price, t1.deal_price, (t1.weight * t1.cost_price) amount, t1.invoice_weight,
        t1.actual_pick_weight_salesman, round((ifnull(t1.actual_pick_weight_server,0)   + ifnull(t1.allowance_weight,0)),6) AS actual_pick_weight_server,
        t1.actual_pick_quantity_salesman,
        t1.actual_pick_quantity_server, t1.status, t1.created as ocreated,
        round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2) allowance_amount,
        round((round((ifnull(t1.actual_pick_weight_server,0)  * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2) allowance_buyer_amount
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
            DATE_FORMAT(t.created,'%Y-%m-%d')>='2016-04-01'
            <if test="blacklist != null">
                and exists (select 1
                from cust_account as k2,
                base_sys_setting as k3
                where k2.id = t1.seller_id
                and k2.supplier_label = k3.setting_name
                and k3.setting_type='client_type'
                <if test="credentialType == 'seller'">
                    and k3.display_name='卖家凭证'
                </if>
                <if test="credentialType == 'buyer'">
                    and k3.display_name='买家凭证'
                </if>

                <!-- 是否需要发票审核通过的查询条件 -->
                <if test="blacklist">
                    and k3.setting_value='1'
                </if>
                <if test="!blacklist">
                    and k3.setting_value='0'
                </if>
                )
            </if>
            <if test="isActualWeightZero !=null">
                and t1.actual_pick_weight_server > 0
            </if>
            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT('%',#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="certificateNO != null and certificateNO !=''">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>
            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status not in('-1', '-2', '-3', '-4', '-7', '-8')
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
            <!--权限控制-->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        union all
        select
        t.id, t.code, t.account_id, t.account_name, t.owner_id, t.owner_name, t.total_weight,
        (t1.weight * t1.deal_price) invoice_amount, t.total_quantity, t.created, t.contract_code,t.secondary_time,t.status as pay_status,
        t1.id as oid, t1.order_id, t1.seller_id, t1.seller_name, t1.nsort_name, t1.material,
        t1.spec, t1.factory, t1.city, t1.warehouse, t1.quantity, t1.weight, t1.weight_concept,
        t1.cost_price, t1.deal_price, (t1.weight * t1.cost_price) amount, t1.invoice_weight,
        t1.actual_pick_weight_salesman, round((ifnull(t1.actual_pick_weight_server,0)   + ifnull(t1.allowance_weight,0)),6) AS actual_pick_weight_server,
        t1.actual_pick_quantity_salesman,
        t1.actual_pick_quantity_server, t1.status, t1.created as ocreated,
        round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2) allowance_amount,
        round((round((ifnull(t1.actual_pick_weight_server,0)  * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2) allowance_buyer_amount
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
            <![CDATA[ DATE_FORMAT(t.created,'%Y-%m-%d') < '2016-04-01']]>
            and t.status > 6
            <if test="blacklist != null">
                and exists (select 1
                from cust_account as k2,
                base_sys_setting as k3
                where k2.id = t1.seller_id
                and k2.supplier_label = k3.setting_name
                and k3.setting_type='client_type'
                <if test="credentialType == 'seller'">
                    and k3.display_name='卖家凭证'
                </if>
                <if test="credentialType == 'buyer'">
                    and k3.display_name='买家凭证'
                </if>

                <!-- 是否需要发票审核通过的查询条件 -->
                <if test="blacklist">
                    and k3.setting_value='1'
                </if>
                <if test="!blacklist">
                    and k3.setting_value='0'
                </if>
                )
            </if>
            <if test="isActualWeightZero !=null">
                and t1.actual_pick_weight_server > 0
            </if>
            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>





            <if test="ownerName != null">
                and t.owner_name like CONCAT('%',#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="certificateNO != null and certificateNO !=''">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>
            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status not in('-1', '-2', '-3', '-4', '-7', '-8','10')
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
            <!--权限控制-->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        union
        select
        t.id, t.code, t.account_id, t.account_name, t.owner_id, t.owner_name, t.total_weight,
        (t1.weight * t1.deal_price) invoice_amount, t.total_quantity, t.created, t.contract_code,t.secondary_time,t.status as pay_status,
        t1.id as oid, t1.order_id, t1.seller_id, t1.seller_name, t1.nsort_name, t1.material,
        t1.spec, t1.factory, t1.city, t1.warehouse, t1.quantity, t1.weight, t1.weight_concept,
        t1.cost_price, t1.deal_price, (t1.weight * t1.cost_price) amount, t1.invoice_weight,
        t1.actual_pick_weight_salesman, round((ifnull(t1.actual_pick_weight_server,0)   + ifnull(t1.allowance_weight,0)),6) AS actual_pick_weight_server,
        t1.actual_pick_quantity_salesman,
        t1.actual_pick_quantity_server, t1.status, t1.created as ocreated,
        round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2) allowance_amount,
        round((round((ifnull(t1.actual_pick_weight_server,0)  * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2) allowance_buyer_amount
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        left join busi_consign_order_audit_trail t3 on t3.order_id = t.id and t3.set_to_status='10'
        <where>
            DATE_FORMAT(t3.created,'%Y-%m-%d')>='2016-04-25'
            <if test="blacklist != null">
                and exists (select 1
                from cust_account as k2,
                base_sys_setting as k3
                where k2.id = t1.seller_id
                and k2.supplier_label = k3.setting_name
                and k3.setting_type='client_type'
                <if test="credentialType == 'seller'">
                    and k3.display_name='卖家凭证'
                </if>
                <if test="credentialType == 'buyer'">
                    and k3.display_name='买家凭证'
                </if>

                <!-- 是否需要发票审核通过的查询条件 -->
                <if test="blacklist">
                    and k3.setting_value='1'
                </if>
                <if test="!blacklist">
                    and k3.setting_value='0'
                </if>
                )
            </if>
            <if test="isActualWeightZero !=null">
                and t1.actual_pick_weight_server > 0
            </if>
            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT('%',#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="certificateNO != null and certificateNO !=''">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>
            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status = '10'
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
            <!--权限控制-->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        ) o order by o.created
        <if test="start != null and length != null">
            limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
        </if>

    </select>

    <resultMap id="tradeCertificateMap" type="com.prcsteel.platform.order.model.dto.OrderTradeCertificateDto">
        <id column="id" property="orderId" jdbcType="BIGINT" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
        <result column="seller_name" property="sellerName" jdbcType="VARCHAR" />
        <result column="account_name" property="buyerName" jdbcType="VARCHAR" />
        <result column="totalWeight" property="totalWeight" jdbcType="DECIMAL" />
        <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
        <result column="created" property="openOrderDate" jdbcType="TIMESTAMP" />
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
        <result column="quantity" property="quantity" jdbcType="INTEGER" />
        <result column="actualPickTotalQuantity" property="actualPickTotalQuantity" jdbcType="INTEGER" />
        <result column="actualPickTotalWeight" property="actualPickTotalWeight" jdbcType="DECIMAL" />
        <result column="actualPickTotalAmount" property="actualPickTotalAmount" jdbcType="DECIMAL" />
        <result column="printBuyerTradeCertificateStatus" property="printBuyerTradeCertificateStatus" jdbcType="VARCHAR" />
		<result column="setting_value" property="settingValue" jdbcType="VARCHAR" />
        <result column="orderOrgName" property="orderOrgName" jdbcType="VARCHAR" />
    </resultMap>

    <select id="selectTradeCertificateList" resultMap="tradeCertificateMap" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
        select  o.id, o.code, o.seller_id, o.seller_name, o.account_name, DATE_FORMAT(o.created,'%Y-%m-%d %T') as created, o.owner_name,
        o.quantity,
        o.totalAmount,
        o.totalWeight,
        o.actualPickTotalAmount,
        o.actualPickTotalWeight,
  			    o.printBuyerTradeCertificateStatus,
  			    k1.setting_value,
        o.orderOrgName
        from (select
        t.id, t.code, t1.seller_id, t1.seller_name, t.account_name, t.created, t.owner_name,
        (case when t.status > 6 then  SUM(t1.actual_pick_quantity_server) else SUM(t1.quantity) end ) as quantity,
        <if test="credentialType == 'seller'">
            round(SUM(t1.weight * t1.cost_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount,
        </if>
        <if test="credentialType == 'buyer'">
            round(SUM(t1.weight * t1.deal_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount,
        </if>
        SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) as actualPickTotalWeight,
        '未打印' as printBuyerTradeCertificateStatus,
        t.order_org_name as orderOrgName
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
            DATE_FORMAT(t.created,'%Y-%m-%d')>='2016-04-01'
           <!--  <if test="blacklist != null">
            and exists (select 1
            from cust_account as k2,
            base_sys_setting as k3
            where k2.id = t1.seller_id
            and k2.supplier_label = k3.setting_name
            and k3.setting_type='client_type'
            <if test="credentialType == 'seller'">
                and k3.display_name='卖家凭证'
            </if>
            <if test="credentialType == 'buyer'">
                and k3.display_name='买家凭证'
            </if>

            <if test="blacklist">
                and k3.setting_value='1'
            </if>
            <if test="!blacklist">
                and k3.setting_value='0'
            </if>
            )
            </if>
            -->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>

            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>

            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="certificateNO != null and certificateNO != '' ">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status not in('-1', '-2', '-3', '-4', '-7', '-8')
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
        </where>
        <if test="groupBySeller !=null and  groupBySeller == true">
            group by t.id, t1.seller_id
        </if>
        union all
        <!--2016年 4月1日之前已二结但未开票的订单 -->
        select
        t.id, t.code, t1.seller_id, t1.seller_name, t.account_name, t.created, t.owner_name,
        (case when t.status > 6 then  SUM(t1.actual_pick_quantity_server) else SUM(t1.quantity) end ) as quantity,
        <if test="credentialType == 'seller'">
            round(SUM(t1.weight * t1.cost_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount,
        </if>
        <if test="credentialType == 'buyer'">
            round(SUM(t1.weight * t1.deal_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount,
        </if>
        SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) as actualPickTotalWeight,
        '未打印' as printBuyerTradeCertificateStatus,
        t.order_org_name as orderOrgName
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
            <![CDATA[ DATE_FORMAT(t.created,'%Y-%m-%d') < '2016-04-01' ]]>
            and t.status > 6
		    <!-- 删除   ，到最外层统一处理 
            <if test="blacklist != null">
            and exists (select 1
            from cust_account as k2,
            base_sys_setting as k3
            where k2.id = t1.seller_id
            and k2.supplier_label = k3.setting_name
            and k3.setting_type='client_type'
            <if test="credentialType == 'seller'">
                and k3.display_name='卖家凭证'
            </if>
            <if test="credentialType == 'buyer'">
                and k3.display_name='买家凭证'
            </if>
 
            <if test="blacklist">
                and k3.setting_value='1'
            </if>
            <if test="!blacklist">
                and k3.setting_value='0'
            </if>
            )
            </if>
            -->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>

            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>

            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="certificateNO != null and certificateNO != '' ">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status not in('-1', '-2', '-3', '-4', '-7', '-8','10')
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
        </where>
        <if test="groupBySeller !=null and  groupBySeller == true">
            group by t.id, t1.seller_id
        </if>
        union
        select
        t.id, t.code, t1.seller_id, t1.seller_name, t.account_name, t.created, t.owner_name,
        (case when t.status > 6 then  SUM(t1.actual_pick_quantity_server) else SUM(t1.quantity) end ) as quantity,
        <if test="credentialType == 'seller'">
            round(SUM(t1.weight * t1.cost_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.cost_price),2) + ifnull(t1.allowance_amount,0)),2)) actualPickTotalAmount,
        </if>
        <if test="credentialType == 'buyer'">
            round(SUM(t1.weight * t1.deal_price),2) as totalAmount,
            SUM(t1.weight) as totalWeight,
            SUM(round((round((ifnull(t1.actual_pick_weight_server,0) * t1.deal_price),2) + ifnull(t1.allowance_buyer_amount,0)),2)) actualPickTotalAmount,
        </if>
        SUM(round((ifnull(t1.actual_pick_weight_server,0)  + ifnull(t1.allowance_weight,0)),6)) as actualPickTotalWeight,
        '未打印' as printBuyerTradeCertificateStatus,
        t.order_org_name as orderOrgName
        from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        left join busi_consign_order_audit_trail t3 on t3.order_id = t.id and t3.set_to_status='10'
        <where>
            DATE_FORMAT(t3.created,'%Y-%m-%d')>='2016-04-25'
            <!-- 删除   ，到最外层统一处理  
            <if test="blacklist != null">
            and exists (select 1
            from cust_account as k2,
            base_sys_setting as k3
            where k2.id = t1.seller_id
            and k2.supplier_label = k3.setting_name
            and k3.setting_type='client_type'
            <if test="credentialType == 'seller'">
                and k3.display_name='卖家凭证'
            </if>
            <if test="credentialType == 'buyer'">
                and k3.display_name='买家凭证'
            </if>

            <if test="blacklist">
                and k3.setting_value='1'
            </if>
            <if test="!blacklist">
                and k3.setting_value='0'
            </if>
            )
            </if>
            -->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>

            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>

            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="certificateNO != null and certificateNO != '' ">
                and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status = '10'
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
        </where>
        <if test="groupBySeller !=null and  groupBySeller == true">
            group by t.id, t1.seller_id
        </if>
	   ) o 
	   left join cust_account as k on k.id = o.seller_id
	   left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type'
	   <if test="credentialType == 'seller'">
                and k1.display_name='卖家凭证'
       </if>
       <if test="credentialType == 'buyer'">
                and k1.display_name='买家凭证'
       </if>
       <where>
        <if test="blacklist != null">
	        <if test="blacklist">
						   k1.setting_value='1'
			</if>
			<if test="!blacklist">
						   k1.setting_value='0'
			</if>
        </if>
       </where>
	   order by o.created 
        <if test="start != null and length != null">
            limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
        </if>
    </select>

    <select id="selectTotalOrdersByParams" resultType="int" parameterType="com.prcsteel.platform.order.model.query.OrderTradeCertificateQuery">
        select count(f.id) from (
        select t.id, t1.seller_id from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
				 DATE_FORMAT(t.created,'%Y-%m-%d')>='2016-04-01'
					
            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>

            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
            </if>
            <if test="closeStatus != null and closeStatus == true">
                and t.status not in('-1', '-2', '-3', '-4', '-7', '-8')
            </if>

            <if test="startTime != null and startTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
            </if>
            <if test="endTime != null and endTime != '' ">
                <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
            </if>
            <!--权限控制-->
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
        <if test="groupBySeller !=null and  groupBySeller == true">
            group by t.id,t1.seller_id
        </if>
        union all
        select t.id, t1.seller_id from busi_consign_order as t
        left join busi_consign_order_items as t1 on t.id = t1.order_id
        <where>
            <![CDATA[ DATE_FORMAT(t.created,'%Y-%m-%d') < '2016-04-01' ]]>
            and  t.status > 6
					
					<if test="orderIds != null">
			            and t.id in 
			            <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
			        </if>
					<if test="ownerName != null">
						and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
					</if>
					<if test="code != null">
						and t.code = #{code,jdbcType=VARCHAR}
					</if>
					<if test="sellerName != null">
						and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
					</if>
					<if test="buyerId != null">
						and t.account_id = #{buyerId,jdbcType=BIGINT}
					</if>
					<if test="sellerId != null">
						and t1.seller_id = #{sellerId,jdbcType=BIGINT}
					</if>
					<if test="buyerName != null">
						and t.account_name = #{buyerName,jdbcType=VARCHAR}
					</if>
					
					<if test="credentialType == 'seller' and !needPage">

		                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
					</if>
					<if test="credentialType == 'buyer' and !needPage">
						and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
					</if>
				    <if test="credentialType == 'seller' and needPage">
		
		                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
		                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
					</if>
		            <if test="credentialType == 'buyer' and needPage">
						and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
		                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
					</if>
					<if test="closeStatus != null and closeStatus == true">
						and t.status not in('-1', '-2', '-3', '-4', '-7', '-8','10') 
					</if>
					
					<if test="startTime != null and startTime != '' ">
		            	<![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
			        </if>
			        <if test="endTime != null and endTime != '' ">
			            <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
			        </if>
                    <!--权限控制-->
                    <if test="userIds != null">
						AND t.owner_id IN
						<foreach collection="userIds" item="userId" open="(" separator="," close=")">
							#{userId}
						</foreach>
					</if>
				</where>
				<if test="groupBySeller !=null and  groupBySeller == true">
					group by t.id,t1.seller_id
				</if>	
				union 
				select
  			    t.id, t1.seller_id
				from busi_consign_order as t
				left join busi_consign_order_items as t1 on t.id = t1.order_id
				left join busi_consign_order_audit_trail t3 on t3.order_id = t.id and t3.set_to_status='10'
		<where>
		   DATE_FORMAT(t3.created,'%Y-%m-%d')>='2016-04-25'
            <if test="userIds != null">
                AND t.owner_id IN
                <foreach collection="userIds" item="userId" open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>

            <if test="orderIds != null">
                and t.id in
                <foreach collection="orderIds" item="id" open="(" separator="," close=")">#{id}</foreach>
            </if>
            <if test="ownerName != null">
                and t.owner_name like CONCAT(#{ownerName,jdbcType=VARCHAR}, '%')
            </if>
            <if test="code != null">
                and t.code = #{code,jdbcType=VARCHAR}
            </if>
            <if test="sellerId != null">
                and t1.seller_id = #{sellerId,jdbcType=BIGINT}
            </if>
            <if test="sellerName != null">
                and t1.seller_name = #{sellerName,jdbcType=VARCHAR}
            </if>
            <if test="buyerId != null">
                and t.account_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="buyerName != null">
                and t.account_name = #{buyerName,jdbcType=VARCHAR}
            </if>

            <if test="credentialType == 'seller' and !needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and !needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
            </if>
            <if test="credentialType == 'seller' and needPage">

                and (t1.batch_seller_credential_code  is null or t1.batch_seller_credential_code = '')
                and (t1.seller_credential_code is null or t1.seller_credential_code = '')
            </if>
            <if test="credentialType == 'buyer' and needPage">
                and (t.batch_buyer_credential_code is null or t.batch_buyer_credential_code ='')
                and (t.buyer_credential_code is null or t.buyer_credential_code ='')
			</if>
			<if test="certificateNO != null and certificateNO != '' ">
				and t1.batch_seller_credential_code = #{certificateNO,jdbcType=VARCHAR}
			</if>
			<if test="closeStatus != null and closeStatus == true">
				and t.status = '10' 
			</if>
			
			<if test="startTime != null and startTime != '' ">
            	<![CDATA[ and str_to_date(t.created,'%Y-%m-%d') >= #{startTime,jdbcType=VARCHAR} ]]>
	        </if>
	        <if test="endTime != null and endTime != '' ">
	            <![CDATA[ and str_to_date(t.created,'%Y-%m-%d') <= #{endTime,jdbcType=VARCHAR}  ]]>
	        </if>
		</where>
		<if test="groupBySeller !=null and  groupBySeller == true">
			group by t.id, t1.seller_id
		</if>
  		) as f
  	<if test="blacklist != null">
  	   left join cust_account as k on k.id = f.seller_id
	   left join base_sys_setting as k1 on k.supplier_label = k1.setting_name  and k1.setting_type='client_type'
	   <if test="credentialType == 'seller'">
                and k1.display_name='卖家凭证'
       </if>
       <if test="credentialType == 'buyer'">
                and k1.display_name='买家凭证'
       </if>
       <where>
	        <if test="blacklist">
						   k1.setting_value='1'
			</if>
			<if test="!blacklist">
						   k1.setting_value='0'
			</if>
       </where>
     </if>  
  	</select>

    <!--根据买家 和买家凭证号查询买家对应任意卖家id-->
    <select id="findSellerIdBybuyer" resultType="java.lang.Long" parameterType="map">
        select i.seller_id from busi_consign_order_items i left join busi_consign_order o on o.id = i.order_id
        where account_id= #{accountId,jdbcType=BIGINT} and  (buyer_credential_code = #{cert,jdbcType=VARCHAR} or batch_buyer_credential_code = #{cert,jdbcType=VARCHAR} )
        limit 0,1
    </select>

    <!--根据凭证号查询所有对应的订单id-->
    <select id="findOrderIdIdByCert" resultType="long">
        select DISTINCT o.id from busi_consign_order o   left join busi_consign_order_items i on i.order_id = o.id
        where  o.buyer_credential_code = #{0} or o.batch_buyer_credential_code = #{0}
        OR  i.seller_credential_code = #{0} or i.batch_seller_credential_code = #{0}

    </select>
    <!--根据买家凭证号查询买家对应卖家凭证-->
    <select id="findSellerCertBybuyerCert" resultType="java.lang.String">
        select i.seller_credential_code from busi_consign_order_items i left join busi_consign_order o on o.id = i.order_id
        where  o.buyer_credential_code = #{0}
        limit 1
    </select>
    <!--根据买家凭证号查询买家对应卖家凭证-->
    <select id="findBuyerCertBySellerCert" resultType="java.lang.String" >
        select o.buyer_credential_code from busi_consign_order_items i left join busi_consign_order o on o.id = i.order_id
        where  i.seller_credential_code = #{0}
        limit 1
    </select>

    <resultMap id="certificateInvoiceMap" type="com.prcsteel.platform.order.model.dto.CertificateInvoiceDto" extends="tradeCertificateMap">
        <result column="account_id" property="buyerId" jdbcType="BIGINT" />
        <result column="owner_id" property="ownerId" jdbcType="BIGINT" />
        <result column="credential_code" property="credentialCode" jdbcType="VARCHAR" />
        <result column="print_date" property="printDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <!--查询出大于等于开单日期的所有订单  add by peanut-->
    <select id="selectOrderUpOpenDate" resultMap="certificateInvoiceMap" >
        /* 买、卖家凭证号关联订单*/
        SELECT
        t.id, t.code, t1.seller_id, t1.seller_name,t.account_id, t.account_name, t.created, t.owner_id, t.owner_name,
        SUM(t1.quantity) AS quantity,
        SUM(t1.actual_pick_quantity_server) AS actualPickTotalQuantity,
        SUM(ROUND((t1.weight * t1.deal_price),2)) AS totalAmount,
        SUM(t1.weight) AS totalWeight,
        SUM(ROUND((t1.deal_price*t1.actual_pick_weight_server),2)) AS actualPickTotalAmount,
        SUM(t1.actual_pick_weight_server) AS actualPickTotalWeight,
        t2.credential_code,t2.print_date
        FROM busi_consign_order AS t
        LEFT JOIN busi_consign_order_items AS t1 ON t.id = t1.order_id
        LEFT JOIN busi_consign_order_credential t2 on
        <if test="accountType !=null and accountType=='seller'">
            t2.credential_code=t1.seller_credential_code
        </if>
        <if test="accountType!=null and accountType=='buyer'">
            t2.credential_code=t.buyer_credential_code
        </if>
        WHERE STR_TO_DATE(t.created,'%Y-%m-%d')  <![CDATA[  >= ]]> #{openOrderDate,jdbcType=VARCHAR}
        GROUP BY t.id
        UNION
        /* 买、卖家批量凭证号关联订单*/
        SELECT
        t.id, t.code, t1.seller_id, t1.seller_name,t.account_id, t.account_name, t.created, t.owner_id, t.owner_name,
        SUM(t1.quantity) AS quantity,
        SUM(t1.actual_pick_quantity_server) AS actualPickTotalQuantity,
        SUM(ROUND((t1.weight * t1.deal_price),2)) AS totalAmount,
        SUM(t1.weight) AS totalWeight,
        SUM(ROUND((t1.deal_price*t1.actual_pick_weight_server),2)) AS actualPickTotalAmount,
        SUM(t1.actual_pick_weight_server) AS actualPickTotalWeight,
        t2.credential_code,t2.print_date
        FROM busi_consign_order AS t
        LEFT JOIN busi_consign_order_items AS t1 ON t.id = t1.order_id
        LEFT JOIN busi_consign_order_credential t2 on
        <if test="accountType !=null and accountType=='seller'">
            t2.credential_code=t1.batch_seller_credential_code
        </if>
        <if test="accountType!=null and accountType=='buyer'">
            t2.credential_code=t.batch_buyer_credential_code
        </if>
        WHERE STR_TO_DATE(t.created,'%Y-%m-%d')  <![CDATA[  >= ]]> #{openOrderDate,jdbcType=VARCHAR}
        GROUP BY t.id;
    </select>



    <resultMap id="contractListMap" type="com.prcsteel.platform.order.model.dto.ContractListDto">
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
        <result column="account_name" property="accountName" jdbcType="VARCHAR" />
        <result column="order_org_name" property="orderOrgName" jdbcType="VARCHAR" />
        <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
        <result column="created" property="createdTime" jdbcType="VARCHAR" />
        <result column="note" property="note" jdbcType="VARCHAR" />
        <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
        <result column="cust_label" property="custLabel" jdbcType="VARCHAR" />
    </resultMap>

    <!--查询合同清单  add by wangxianjun-->
    <select id="selectContractList" resultMap="contractListMap" parameterType="com.prcsteel.platform.order.model.query.ChecklistDetailQuery">
        /*销售合同*/
        <if test="contractType == 'buyer'">
            select t.order_id,'销售合同' type,o.contract_code,o.account_name,o.order_org_name,o.owner_name
            ,(case when count(t.order_id) > 1 then  DATE_FORMAT(max(t.created),'%Y-%m-%d')  else DATE_FORMAT(t.created,'%Y-%m-%d') end ) as created,o.total_amount,'' note,c.buyer_label as cust_label
            from busi_consign_order o
            left join busi_consign_order_audit_trail t on t.order_id = o.id
            left join cust_account c on c.id = o.account_id
            WHERE t.status_type='MAIN' AND t.set_to_status=2  and  o.contract_code is not null
            and o.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
            <!-- 查询指定的服务中心 -->
            <if test="orgIds != null">
                and o.order_org_id in
                <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                </foreach>
            </if>
            <if test="buyerName !=null">
                and o.account_name  like CONCAT('%',#{buyerName,jdbcType=VARCHAR},'%')
            </if>
            <if test="contractNo !=null">
                and o.contract_code  like CONCAT('%',#{contractNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')>=#{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')<=#{endTime} ]]>
            </if>
            group by  t.order_id
            order by t.created desc
        </if>
        /*采购合同*/
        <if test="contractType == 'seller'">
            select  o.id as order_id,'采购合同' type,t.contract_code_auto as contract_code,i.seller_name as account_name,o.order_org_name,o.owner_name
            , DATE_FORMAT(t.created,'%Y-%m-%d') created,  SUM(ROUND(i.weight * i.cost_price,2)) as total_amount,'' note,c.supplier_label as cust_label
            from busi_consign_order o
            left join busi_consign_order_items i  on i.order_id = o.id
            left join  busi_consign_order_contract t on t.consign_order_id = o.id and t.customer_id = i.seller_id
            left join cust_account c on c.id = i.seller_id
            where t.contract_code_auto is not null
            and o.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
            <!-- 查询指定的服务中心 -->
            <if test="orgIds != null">
                and o.order_org_id in
                <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                </foreach>
            </if>
            <if test="buyerName !=null">
                and i.seller_name  like CONCAT('%',#{buyerName,jdbcType=VARCHAR},'%')
            </if>
            <if test="contractNo !=null">
                and t.contract_code_auto  like CONCAT('%',#{contractNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')>=#{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')<=#{endTime} ]]>
            </if>
            group by o.id,i.seller_id
            order by t.created desc
        </if>
        <if test="length > 0">
            LIMIT #{start, jdbcType=INTEGER}, #{length, jdbcType=INTEGER}
        </if>
    </select>
    <!--查询合同清单  add by wangxianjun-->
    <select id="countContractList" resultType="int" parameterType="com.prcsteel.platform.order.model.query.ChecklistDetailQuery">
        <!--销售合同*/-->
        select count(1)
        from (
        <if test="contractType == 'buyer'">
            select t.order_id,'销售合同' type,o.contract_code,o.account_name,o.order_org_name,o.owner_name
            ,(case when count(t.order_id) > 1 then  DATE_FORMAT(max(t.created),'%Y-%m-%d %H:%i:%s')  else DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') end ) as created,o.total_amount,'' note
            from busi_consign_order o
            left join busi_consign_order_audit_trail t on t.order_id = o.id
            WHERE t.status_type='MAIN' AND t.set_to_status=2  and  o.contract_code is not null
            and o.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
            <!-- 查询指定的服务中心 -->
            <if test="orgIds != null">
                and o.order_org_id in
                <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                </foreach>
            </if>
            <if test="buyerName !=null">
                and o.account_name  like CONCAT('%',#{buyerName,jdbcType=VARCHAR},'%')
            </if>
            <if test="contractNo !=null">
                and o.contract_code  like CONCAT('%',#{contractNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')>=#{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')<=#{endTime} ]]>
            </if>
            group by  t.order_id
        </if>
        <!--采购合同-->
        <if test="contractType == 'seller'">
            select  o.id as order_id,'采购合同' type,t.contract_code_auto as contract_code,i.seller_name as account_name,o.order_org_name,o.owner_name
            , DATE_FORMAT(t.created,'%Y-%m-%d %H:%i:%s') created,  SUM(ROUND(i.weight * i.cost_price,2)) as total_amount,'' note
            from busi_consign_order o
            left join busi_consign_order_items i  on i.order_id = o.id
            left join  busi_consign_order_contract t on t.consign_order_id = o.id and t.customer_id = i.seller_id
            where t.contract_code_auto is not null
            and o.status not in ('-1', '-2', '-3', '-4', '-7', '-8')
            <!-- 查询指定的服务中心 -->
            <if test="orgIds != null">
                and o.order_org_id in
                <foreach collection="orgIds" item="org" open="(" separator="," close=")">
                    #{org}
                </foreach>
            </if>
            <if test="buyerName !=null">
                and i.seller_name  like CONCAT('%',#{buyerName,jdbcType=VARCHAR},'%')
            </if>
            <if test="contractNo !=null">
                and t.contract_code_auto  like CONCAT('%',#{contractNo,jdbcType=VARCHAR},'%')
            </if>
            <if test="beginTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')>=#{beginTime} ]]>
            </if>
            <if test="endTime!=null">
                AND <![CDATA[date_format(t.created,'%Y-%m-%d')<=#{endTime} ]]>
            </if>
            group by o.id,i.seller_id
        </if>
        ) aa
    </select>

    <select id="selectByAccountIdAndStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from busi_consign_order
        where account_id = #{accountId,jdbcType=BIGINT} and status = #{status,jdbcType=VARCHAR}
    </select>
    <!--超市用户查询对应的订单-->
    <resultMap id="appConsignOrderMap" type="com.prcsteel.platform.order.model.AppOrder">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="accountName" property="accountName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="statusName" property="statusName" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="VARCHAR"/>
        <result column="contactName" property="contactName" jdbcType="VARCHAR"/>
        <result column="contactTel" property="contactTel" jdbcType="VARCHAR"/>
        <result column="payType" property="payType" jdbcType="VARCHAR"/>
        <result column="totalAmount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="totalWeight" property="totalWeight" jdbcType="DECIMAL"/>
        <result column="actualPickWeight" property="actualPickWeight" jdbcType="DECIMAL"/>
        <result column="closeReason" property="closeReason" jdbcType="VARCHAR"/>
        <result column="trans_area" property="transArea" jdbcType="VARCHAR"/>
        <result column="finance_order" property="financeOrder" jdbcType="INTEGER"/>
        <result column="userTel" property="userTel" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectOrderByecUserId" resultMap="appConsignOrderMap" parameterType="com.prcsteel.platform.order.model.query.OrderEcAppQuery">
        select f.id,f.code,f.seller_name as accountName,f.status,(case f.status when 'RELATED' then '待付款' when 'SECONDSETTLE' then '待结算'
               when 'FINISH' then '交易完成' when 'CLOSED' then '交易关闭' else '' end) as statusName,
        DATE_FORMAT(f.created,'%Y-%m-%d %T')  as time,f.contact_name as contactName,
               f.tel as contactTel,ifnull(f.payment_sort,'') as payType,f.payAmount as totalAmount,f.totalWeight,
               f.total_picked as actualPickWeight,  f.closeReason,ifnull(f.trans_area,'')   as transArea, f.user_tel AS userTel
         from (
        select o.id,o.code,i.seller_name,'CLOSED' as status,o.created,o.contact_name,
               c.tel,o.payment_sort,ROUND(SUM(i.amount),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
               0.000 as total_picked,  t.ext3 as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        LEFT JOIN (select order_id,ext3 FROM busi_consign_order_audit_trail  a
        inner join (SELECT max(id) as id FROM busi_consign_order_audit_trail
        WHERE set_to_status IN ('3','-4', '-1','-5','5')
        GROUP BY order_id) b on b.id = a.id
        )  t on o.id = t.order_id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-1', '-2', '-3', '-4', '-8')
              <if test="keyword != null and keyword != ''">
                  and (o.code like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
              </if>
              <if test="startTime !=null and startTime !=''">
                  AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
              </if>
              <if test="endTime!=null and endTime !=''">
                 AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

              </if>
        group by o.id
        union all
         select o.id,o.code,i.seller_name,'CLOSED' as status,o.created,o.contact_name,
               c.tel,o.payment_sort,ROUND(SUM(i.actual_pick_weight_server * i.deal_price),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
               ROUND(SUM(i.actual_pick_weight_server),3) as total_picked,  t.ext3 as closeReason,o.trans_area,  acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        LEFT JOIN (select order_id,ext3 FROM busi_consign_order_audit_trail  a
        inner join (SELECT max(id) as id FROM busi_consign_order_audit_trail
        WHERE set_to_status = '-5'
        GROUP BY order_id) b on b.id = a.id
        )  t on o.id = t.order_id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status = '-7'
            <if test="keyword != null and keyword != ''">
                and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
            </if>
            <if test="startTime !=null and startTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
            </if>
            <if test="endTime!=null and endTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

            </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'RELATED' as status,o.created,o.contact_name,
               c.tel,o.payment_sort,ROUND(SUM(i.amount),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
               0.000 as total_picked,  '' as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('1', '2', '3')
            <if test="keyword != null and keyword != ''">
                and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
            </if>
            <if test="startTime !=null and startTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
            </if>
            <if test="endTime!=null and endTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

            </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'SECONDSETTLE' as status,o.created,o.contact_name,
               c.tel,o.payment_sort,ROUND(SUM(i.amount),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
               0.000 as total_picked,  '' as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('4', '5', '6')
            <if test="keyword != null and keyword != ''">
                and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
            </if>
            <if test="startTime !=null and startTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
            </if>
            <if test="endTime!=null and endTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

            </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'SECONDSETTLE' as status,o.created,o.contact_name,
        c.tel,o.payment_sort,ROUND(SUM(i.amount),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
        0.000 as total_picked,  '' as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-6', '-5')
            and i.actual_pick_weight_server = 0
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
         union all
        select o.id,o.code,i.seller_name,'FINISH' as status,o.created,o.contact_name,
               c.tel,o.payment_sort,ROUND(SUM(i.actual_pick_weight_server * i.deal_price),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
               ROUND(SUM(i.actual_pick_weight_server),3) as total_picked,  '' as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('7', '8', '10')
            <if test="keyword != null and keyword != ''">
                and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
            </if>
            <if test="startTime !=null and startTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
            </if>
            <if test="endTime!=null and endTime !=''">
                AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

            </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'FINISH' as status,o.created,o.contact_name,
        c.tel,o.payment_sort,ROUND(SUM(i.actual_pick_weight_server * i.deal_price),2) as payAmount,ROUND(SUM(i.weight),3) as totalWeight,
        ROUND(SUM(i.actual_pick_weight_server),3) as total_picked,  '' as closeReason,o.trans_area, acl.tel AS user_tel
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ( '-6', '-5')
            and i.actual_pick_weight_server > 0
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        ) f
        <where>
            <if test="status!=null and status!=''">
               f.status = #{status,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY f.created desc
        <if test="start != null and length != null">
            limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }
        </if>
    </select>
    <select id="countOrderByecUserId" resultType="int" parameterType="com.prcsteel.platform.order.model.query.OrderEcAppQuery">
        select count(1)
        from (
        select o.id,o.code,i.seller_name,'CLOSED' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-1', '-2', '-3', '-4', '-8')
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'CLOSED' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status = '-7'
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'RELATED' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('1', '2', '3')
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'SECONDSETTLE' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('4', '5', '6')
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'SECONDSETTLE' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-6', '-5')
            and  i.actual_pick_weight_server = 0
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'FINISH' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('7', '8', '10')
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        union all
        select o.id,o.code,i.seller_name,'FINISH' as status
        from busi_consign_order o
        LEFT JOIN acl_user acl ON acl.id = o.owner_id
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-6', '-5')
            and  i.actual_pick_weight_server > 0
        <if test="keyword != null and keyword != ''">
            and (o.code  like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%')  or i.nsort_name like CONCAT('%',#{keyword,jdbcType=VARCHAR},'%'))
        </if>
        <if test="startTime !=null and startTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')>=#{startTime} ]]>
        </if>
        <if test="endTime!=null and endTime !=''">
            AND <![CDATA[date_format(o.created,'%Y-%m-%d')<=#{endTime} ]]>

        </if>
        group by o.id
        ) f
        <where>
            <if test="status!=null and status!=''">
                f.status = #{status,jdbcType=VARCHAR}
            </if>
        </where>

    </select>
    <!-- 清空订单中买家凭证号-->
    <update id="updateOrderByCertCode"  parameterType="map">
        UPDATE busi_consign_order
        SET buyer_credential_code = #{credentialCode,jdbcType=VARCHAR},
        modification_number = modification_number + 1
        WHERE buyer_credential_code = #{certCode,jdbcType=VARCHAR}
    </update>
    <!-- 清空订单中买家凭证号-->
    <update id="updateOrderByBatchCertCode"  parameterType="map">
        UPDATE busi_consign_order
        SET batch_buyer_credential_code = #{credentialCode,jdbcType=VARCHAR},
        modification_number = modification_number + 1
        WHERE batch_buyer_credential_code = #{certCode,jdbcType=VARCHAR}
    </update>
    <!--超市用户查询对应的订单-->
    <resultMap id="ecConsignOrderMap" type="com.prcsteel.platform.order.model.EcOrder">
        <result column="remoteCode" property="remoteCode" jdbcType="VARCHAR"/>
        <result column="owner_name" property="operator" jdbcType="VARCHAR"/>
        <result column="tel" property="mobile" jdbcType="VARCHAR"/>
        <result column="trans_area" property="city" jdbcType="VARCHAR"/>
    </resultMap>
    <!--通过订单Id list 查询订单信息 -->
    <select id="selectEcOrdersByOrderIds" parameterType="java.util.List" resultMap="ecConsignOrderMap">
        select o.id as remoteCode,o.owner_name,u.tel,o.trans_area
        from busi_consign_order o
        left join acl_user u on u.id=o.owner_id
        left join cust_contact t on t.id = o.contact_id
        where o.id in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <!--超市用户查询对应的订单-->
    <resultMap id="ecCountOrderMap" type="com.prcsteel.platform.order.model.CountOrder">
        <result column="allSum" property="allSum" jdbcType="INTEGER"/>
        <result column="relatedSum" property="relatedSum" jdbcType="INTEGER"/>
        <result column="secondSettleSum" property="secondSettleSum" jdbcType="INTEGER"/>
        <result column="finishSum" property="finishSum" jdbcType="INTEGER"/>
        <result column="closedSum" property="closedSum" jdbcType="INTEGER"/>
    </resultMap>
    <!--超市用户查询对应的订单各状态条数 -->
    <select id="countEcOrder" parameterType="java.lang.Integer" resultMap="ecCountOrderMap">
       select  sum(t.allSum) as allSum,sum(t.closedSum) as closedSum,
               sum(t.relatedSum) as relatedSum ,sum(t.secondSettleSum) as secondSettleSum,sum(t.finishSum) as finishSum
        from (select 1 as allSum , (case f.status when 'CLOSED' then 1 else 0 end) closedSum,
         (case f.status when 'RELATED' then 1 else 0 end) relatedSum,
         (case f.status when 'SECONDSETTLE' then 1 else 0 end) secondSettleSum,
         (case f.status when 'FINISH' then 1 else 0 end) finishSum
        from (
        select DISTINCT o.id,'CLOSED' as status
        from busi_consign_order o
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-1', '-2', '-3', '-4')
        union all
        select DISTINCT o.id,'CLOSED' as status
        from busi_consign_order o
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-7', '-8')
        union all
        select DISTINCT o.id,'RELATED' as status
        from busi_consign_order o
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('1', '2', '3')
        union all
        select DISTINCT o.id,'SECONDSETTLE' as status
        from busi_consign_order o
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('4', '5', '6')
        union all
        select DISTINCT o.id,'SECONDSETTLE' as status
        from busi_consign_order o
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ( '-6', '-5')
          and i.actual_pick_weight_server = 0
        union all
        select DISTINCT o.id,'FINISH' as status
        from busi_consign_order o
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('7', '8', '10')
        union all
        select DISTINCT o.id,'FINISH' as status
        from busi_consign_order o
        left join busi_consign_order_items i on i.order_id = o.id
        left join cust_contact c on c.id = o.contact_id
        where c.ec_user_id = #{userId,jdbcType=INTEGER} and o.status in ('-6','-5')
          and i.actual_pick_weight_server > 0
        ) f
        ) t
    </select>
</mapper>
