<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prcsteel.platform.order.persist.dao.InvoiceOutApplyDao" >
  <resultMap id="BaseResultMap" type="com.prcsteel.platform.order.model.model.InvoiceOutApply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
    <result column="org_id" property="orgId" jdbcType="BIGINT" />
    <result column="org_name" property="orgName" jdbcType="VARCHAR" />
    <result column="submitter_id" property="submitterId" jdbcType="BIGINT" />
    <result column="submitter_name" property="submitterName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
    <result column="last_updated_by" property="lastUpdatedBy" jdbcType="VARCHAR" />
    <result column="modification_number" property="modificationNumber" jdbcType="INTEGER" />
    <result column="row_id" property="rowId" jdbcType="VARCHAR" />
    <result column="parent_row_id" property="parentRowId" jdbcType="VARCHAR" />
    <result column="ext1" property="ext1" jdbcType="VARCHAR" />
    <result column="ext2" property="ext2" jdbcType="VARCHAR" />
    <result column="ext3" property="ext3" jdbcType="VARCHAR" />
    <result column="ext4" property="ext4" jdbcType="INTEGER" />
    <result column="ext5" property="ext5" jdbcType="INTEGER" />
    <result column="ext6" property="ext6" jdbcType="INTEGER" />
    <result column="ext7" property="ext7" jdbcType="TIMESTAMP" />
    <result column="ext8" property="ext8" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, amount, actual_amount, org_id, org_name, submitter_id, submitter_name, status, 
    comment, created, created_by, last_updated, last_updated_by, modification_number, 
    row_id, parent_row_id, ext1, ext2, ext3, ext4, ext5, ext6, ext7, ext8
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from inv_invoice_out_apply
    where id = #{id,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from inv_invoice_out_apply
    where id = #{id,jdbcType=BIGINT}
    AND is_deleted = 0
  </delete>
  <insert id="insert" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutApply" >
    insert into inv_invoice_out_apply (id, amount, actual_amount, 
      org_id, org_name, submitter_id, 
      submitter_name, status, comment, 
      created, created_by, last_updated, 
      last_updated_by, modification_number, row_id, 
      parent_row_id, ext1, ext2, 
      ext3, ext4, ext5, ext6, 
      ext7, ext8)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL}, 
      #{orgId,jdbcType=BIGINT}, #{orgName,jdbcType=VARCHAR}, #{submitterId,jdbcType=BIGINT}, 
      #{submitterName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{created,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP}, 
      #{lastUpdatedBy,jdbcType=VARCHAR}, #{modificationNumber,jdbcType=INTEGER}, #{rowId,jdbcType=VARCHAR}, 
      #{parentRowId,jdbcType=VARCHAR}, #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, 
      #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=INTEGER}, #{ext5,jdbcType=INTEGER}, #{ext6,jdbcType=INTEGER}, 
      #{ext7,jdbcType=TIMESTAMP}, #{ext8,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutApply" >
    insert into inv_invoice_out_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="actualAmount != null" >
        actual_amount,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="orgName != null" >
        org_name,
      </if>
      <if test="submitterId != null" >
        submitter_id,
      </if>
      <if test="submitterName != null" >
        submitter_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="lastUpdated != null" >
        last_updated,
      </if>
      <if test="lastUpdatedBy != null" >
        last_updated_by,
      </if>
      <if test="modificationNumber != null" >
        modification_number,
      </if>
      <if test="rowId != null" >
        row_id,
      </if>
      <if test="parentRowId != null" >
        parent_row_id,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
      <if test="ext3 != null" >
        ext3,
      </if>
      <if test="ext4 != null" >
        ext4,
      </if>
      <if test="ext5 != null" >
        ext5,
      </if>
      <if test="ext6 != null" >
        ext6,
      </if>
      <if test="ext7 != null" >
        ext7,
      </if>
      <if test="ext8 != null" >
        ext8,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="submitterId != null" >
        #{submitterId,jdbcType=BIGINT},
      </if>
      <if test="submitterName != null" >
        #{submitterName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null" >
        #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      <if test="modificationNumber != null" >
        #{modificationNumber,jdbcType=INTEGER},
      </if>
      <if test="rowId != null" >
        #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="parentRowId != null" >
        #{parentRowId,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null" >
        #{ext4,jdbcType=INTEGER},
      </if>
      <if test="ext5 != null" >
        #{ext5,jdbcType=INTEGER},
      </if>
      <if test="ext6 != null" >
        #{ext6,jdbcType=INTEGER},
      </if>
      <if test="ext7 != null" >
        #{ext7,jdbcType=TIMESTAMP},
      </if>
      <if test="ext8 != null" >
        #{ext8,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutApply" >
    update inv_invoice_out_apply
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="orgName != null" >
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="submitterId != null" >
        submitter_id = #{submitterId,jdbcType=BIGINT},
      </if>
      <if test="submitterName != null" >
        submitter_name = #{submitterName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      last_updated = NOW(),
      <if test="lastUpdatedBy != null" >
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
      </if>
      modification_number = modification_number + 1,
      <if test="rowId != null" >
        row_id = #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="parentRowId != null" >
        parent_row_id = #{parentRowId,jdbcType=VARCHAR},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null" >
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null" >
        ext4 = #{ext4,jdbcType=INTEGER},
      </if>
      <if test="ext5 != null" >
        ext5 = #{ext5,jdbcType=INTEGER},
      </if>
      <if test="ext6 != null" >
        ext6 = #{ext6,jdbcType=INTEGER},
      </if>
      <if test="ext7 != null" >
        ext7 = #{ext7,jdbcType=TIMESTAMP},
      </if>
      <if test="ext8 != null" >
        ext8 = #{ext8,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
    and is_deleted = 0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.prcsteel.platform.order.model.model.InvoiceOutApply" >
    update inv_invoice_out_apply
    set amount = #{amount,jdbcType=DECIMAL},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      org_id = #{orgId,jdbcType=BIGINT},
      org_name = #{orgName,jdbcType=VARCHAR},
      submitter_id = #{submitterId,jdbcType=BIGINT},
      submitter_name = #{submitterName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      last_updated = NOW(),
      last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR},
      modification_number = modification_number+1,
      row_id = #{rowId,jdbcType=VARCHAR},
      parent_row_id = #{parentRowId,jdbcType=VARCHAR},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR},
      ext4 = #{ext4,jdbcType=INTEGER},
      ext5 = #{ext5,jdbcType=INTEGER},
      ext6 = #{ext6,jdbcType=INTEGER},
      ext7 = #{ext7,jdbcType=TIMESTAMP},
      ext8 = #{ext8,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
    and is_deleted = 0
  </update>

  <!--根据申请id集合查找所有可开票金额-->
  <select id="queryTotalApplyAmount" resultType="BigDecimal" parameterType="map">
    SELECT IFNULL(SUM(amount)-SUM(IFNULL(actual_amount,0)),0) amount
	FROM inv_invoice_out_apply
	WHERE is_deleted = 0
    <if test="ids != null" >
      AND id IN
      <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="countApplyNumber" resultType="INTEGER" parameterType="map">
    SELECT COUNT(iioa.id)
    FROM inv_invoice_out_apply iioa
    WHERE status = 1
    AND is_deleted = 0
    AND iioa.owner_id = #{ownerId,jdbcType=BIGINT}
    AND iioa.buyer_id = #{buyerId,jdbcType=BIGINT}
  </select>

  <!-- 查询本部门本次申请开票人 -->
  <select id="getApplyersByOrgId" resultType="java.util.HashMap" parameterType="java.lang.Long">
   	select owner_id,owner_name ,
	(select ifnull(sum(total_amount-total_received_amount),0) from inv_pool_in a ,cust_account b
	where a.seller_id=b.id 
	and b.manager_id=x.owner_id
	) total_unreceived,
	(select ifnull(sum(ifnull(check_total_amount,0)),0) 
	from inv_invoice_in a,cust_account b
	where a.seller_id=b.id
	and b.manager_id=x.owner_id 
	and DATE_FORMAT(check_date,'%Y%m')=DATE_FORMAT(curdate(),'%Y%m')
	) total_recieved_thismonth
	from inv_invoice_out_apply x
		where org_id=#{orgId,jdbcType=BIGINT}
		AND x.is_deleted = 0
		and x.status=1
	group by owner_id,owner_name
  </select>
  <!-- 查询本次某人申请列表 -->
  <select id="getApplyListByApplyer" resultType="java.util.HashMap" parameterType="java.lang.Long">
   	select x.id,
	(select min(created) from busi_consign_order where owner_id =x.owner_id and status in ('7','8') and account_id=x.buyer_id) earliest_bill_date,
	(select ifnull(sum(b.amount-ifnull(b.invoice_amount,0)),0) from busi_consign_order a, busi_consign_order_items b where b.order_id=a.id and a.owner_id=x.owner_id and a.status in('7','8') and a.account_id=x.buyer_id) left_uninvoice_amount,
	buyer_id,buyer_name,apply_amount,is_independent  
	from inv_invoice_out_apply x
	where owner_id=#{applyerId,jdbcType=BIGINT}
	AND x.is_deleted = 0
	and status=1
  </select>
  <select id="selectApplyByOrgId" resultMap="BaseResultMap" >
    select id,
            owner_id,
            owner_name,
            org_id,
            org_name,
            buyer_id,
            buyer_name,
            apply_amount,
            actual_amount
    from inv_invoice_out_apply
    where status = 1
    AND is_deleted = 0
    <if test="ownerId != null" >
      and owner_id = #{ownerId,jdbcType=BIGINT}
    </if>
    <if test="orgId != null" >
      and org_id = #{orgId,jdbcType=BIGINT}
    </if>
    <if test="buyerId != null" >
      and buyer_id = #{buyerId,jdbcType=BIGINT}
    </if>
  </select>

  <resultMap id="InvoiceOutApplyDtoMap" extends="BaseResultMap" type="com.prcsteel.platform.order.model.dto.InvoiceOutApplyDto" >

  </resultMap>

  <select id="queryInvoiceOutApply" resultMap="InvoiceOutApplyDtoMap" parameterType="map"  >
      select
          <include refid="Base_Column_List" />
      from inv_invoice_out_apply
      where 1 = 1
      AND is_deleted = 0
      <if test="orgIds != null">
        and org_id IN
        <foreach item="orgId" index="index" collection="orgIds" open="(" separator="," close=")">
          #{orgId, jdbcType=BIGINT}
        </foreach>
      </if>
      <if test="statusList != null">
        and status IN
        <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
         #{status, jdbcType=VARCHAR}
        </foreach>
      </if>      
      <if test="startTime != null and startTime != ''" >
        and str_to_date(created, '%Y-%m-%d') &gt;= #{startTime,jdbcType=VARCHAR}
      </if>
      <if test="endTime != null and endTime != ''" >
        and str_to_date(created, '%Y-%m-%d') &lt;= #{endTime,jdbcType=VARCHAR}
      </if>
      order by created desc
      limit #{start,jdbcType=INTEGER},#{length,jdbcType=INTEGER }

  </select>

  <select id="totalInvoiceOutApply" resultType="int" parameterType="map" >
      select count(1)
      from inv_invoice_out_apply
      where 1 = 1
      AND is_deleted = 0
      <if test="orgIds != null">
        and org_id IN
        <foreach item="orgId" index="index" collection="orgIds" open="(" separator="," close=")">
          #{orgId, jdbcType=BIGINT}
        </foreach>
      </if>
  	  <if test="statusList != null">
        and status IN
        <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
         #{status, jdbcType=VARCHAR}
        </foreach>
      </if>
      <if test="startTime != null and startTime != ''" >
        and str_to_date(created, '%Y-%m-%d') &gt;= #{startTime,jdbcType=VARCHAR}
      </if>
      <if test="endTime != null and endTime != ''" >
        and str_to_date(created, '%Y-%m-%d') &lt;= #{endTime,jdbcType=VARCHAR}
      </if>
  </select>

  <update id="updateStatusById" parameterType="map" >
    UPDATE inv_invoice_out_apply
    SET
        status = #{status,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=BIGINT}
    AND is_deleted = 0
  </update>

  <update id="deleteForId" parameterType="map" >
    UPDATE inv_invoice_out_apply
	SET
        is_deleted = 1,
        last_updated = now(), 
        modification_number = modification_number+1,
        last_updated_by = #{lastUpdatedBy,jdbcType=VARCHAR}
    WHERE id = #{id,jdbcType=BIGINT}
    <if test="statusList != null">
        and status IN
        <foreach item="status" index="index" collection="statusList" open="(" separator="," close=")">
         #{status, jdbcType=VARCHAR}
        </foreach>
      </if>
    AND is_deleted = 0
  </update>

  <update id="batchUpdateStatusById" parameterType="map" >
    UPDATE inv_invoice_out_apply
    SET
    status = #{status, jdbcType=VARCHAR}
    WHERE id IN
    <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
      #{id, jdbcType=BIGINT}
    </foreach>
    AND is_deleted = 0
  </update>

  <!--根据id集合查询数据-->
  <select id="queryInvoiceOutApplyByIds" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from inv_invoice_out_apply
    where id IN
    <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
      #{id}
    </foreach>
    AND is_deleted = 0
  </select>
  
  <update id="decreaseApplyAmount">
    UPDATE inv_invoice_out_apply
    SET
    amount = amount - #{amount},
    status = (case(amount - #{amount}) when actual_amount then 'INVOICED' else status end ),
    last_updated = NOW(),
    modification_number = modification_number+1,
    last_updated_by=#{operatorName}
    WHERE id=#{applyId}
  </update>

  <!--根据申请Id查询未开过销项票的订单Id-->
  <select id="selectOrderIdsByApplyId" resultType="long" parameterType="java.lang.Long" >
   SELECT DISTINCT t4.order_id FROM inv_invoice_out_apply t1
   LEFT JOIN inv_invoice_out_apply_detail t2 ON t1.id=t2.invoice_out_apply_id
   LEFT JOIN inv_invoice_out_item_detail t3 ON t2.id=t3.apply_detail_id
   LEFT JOIN busi_consign_order_items t4 ON t4.id=t3.order_detail_id
   WHERE t4.used_amount=0 AND t4.used_weight=0
   AND t1.id = #{id,jdbcType=BIGINT}
  </select>
</mapper>
